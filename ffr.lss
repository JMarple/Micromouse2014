
ffr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001bac  00001c40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000044  00800106  00800106  00001c46  2**0
                  ALLOC
  3 .debug_aranges 00000080  00000000  00000000  00001c46  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001d2  00000000  00000000  00001cc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000090d  00000000  00000000  00001e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000441  00000000  00000000  000027a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006ef  00000000  00000000  00002be6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000190  00000000  00000000  000032d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000379  00000000  00000000  00003468  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003d4  00000000  00000000  000037e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00003bb5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__ctors_end>
       4:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
       8:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
       c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      10:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      14:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      18:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      1c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      20:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      24:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      28:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      2c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      30:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      34:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      38:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      3c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      40:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      44:	0c 94 09 02 	jmp	0x412	; 0x412 <__vector_17>
      48:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      4c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      50:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      54:	0c 94 07 01 	jmp	0x20e	; 0x20e <__vector_21>
      58:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      5c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      60:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      64:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      68:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      6c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      70:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      74:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      78:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      7c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      80:	0c 94 b1 01 	jmp	0x362	; 0x362 <__vector_32>
      84:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      88:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      8c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      90:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      94:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      98:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      9c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      a0:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      a4:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      a8:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>

000000ac <__c.1790>:
      ac:	6e 61 6e 00                                         nan.

000000b0 <__c.1788>:
      b0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     100:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     110:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     120:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     130:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     140:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     150:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     160:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     170:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     180:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     190:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ae <__ctors_end>:
     1ae:	11 24       	eor	r1, r1
     1b0:	1f be       	out	0x3f, r1	; 63
     1b2:	cf ef       	ldi	r28, 0xFF	; 255
     1b4:	da e0       	ldi	r29, 0x0A	; 10
     1b6:	de bf       	out	0x3e, r29	; 62
     1b8:	cd bf       	out	0x3d, r28	; 61

000001ba <__do_copy_data>:
     1ba:	11 e0       	ldi	r17, 0x01	; 1
     1bc:	a0 e0       	ldi	r26, 0x00	; 0
     1be:	b1 e0       	ldi	r27, 0x01	; 1
     1c0:	ec ea       	ldi	r30, 0xAC	; 172
     1c2:	fb e1       	ldi	r31, 0x1B	; 27
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <.do_copy_data_start>

000001c6 <.do_copy_data_loop>:
     1c6:	05 90       	lpm	r0, Z+
     1c8:	0d 92       	st	X+, r0

000001ca <.do_copy_data_start>:
     1ca:	a6 30       	cpi	r26, 0x06	; 6
     1cc:	b1 07       	cpc	r27, r17
     1ce:	d9 f7       	brne	.-10     	; 0x1c6 <.do_copy_data_loop>

000001d0 <__do_clear_bss>:
     1d0:	11 e0       	ldi	r17, 0x01	; 1
     1d2:	a6 e0       	ldi	r26, 0x06	; 6
     1d4:	b1 e0       	ldi	r27, 0x01	; 1
     1d6:	01 c0       	rjmp	.+2      	; 0x1da <.do_clear_bss_start>

000001d8 <.do_clear_bss_loop>:
     1d8:	1d 92       	st	X+, r1

000001da <.do_clear_bss_start>:
     1da:	aa 34       	cpi	r26, 0x4A	; 74
     1dc:	b1 07       	cpc	r27, r17
     1de:	e1 f7       	brne	.-8      	; 0x1d8 <.do_clear_bss_loop>
     1e0:	0e 94 2c 01 	call	0x258	; 0x258 <main>
     1e4:	0c 94 d4 0d 	jmp	0x1ba8	; 0x1ba8 <_exit>

000001e8 <__bad_interrupt>:
     1e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ec <startTimer>:
}

void startTimer()
{
	//Refresh Loop Timer1  
	TCCR0A = (1 << WGM01);//Set CTC
     1ec:	82 e0       	ldi	r24, 0x02	; 2
     1ee:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00) | (1 << CS01);//prescalar to
     1f0:	93 e0       	ldi	r25, 0x03	; 3
     1f2:	95 bd       	out	0x25, r25	; 37
	OCR0A = 125;//Compare Ticks 
     1f4:	9d e7       	ldi	r25, 0x7D	; 125
     1f6:	97 bd       	out	0x27, r25	; 39
    TIMSK0 = (1 << OCIE0A);//Enable Timer Interrupts
     1f8:	80 93 6e 00 	sts	0x006E, r24
	
	milliseconds = 0;
     1fc:	10 92 06 01 	sts	0x0106, r1
     200:	10 92 07 01 	sts	0x0107, r1
     204:	10 92 08 01 	sts	0x0108, r1
     208:	10 92 09 01 	sts	0x0109, r1
}
     20c:	08 95       	ret

0000020e <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     20e:	1f 92       	push	r1
     210:	0f 92       	push	r0
     212:	0f b6       	in	r0, 0x3f	; 63
     214:	0f 92       	push	r0
     216:	11 24       	eor	r1, r1
     218:	8f 93       	push	r24
     21a:	9f 93       	push	r25
     21c:	af 93       	push	r26
     21e:	bf 93       	push	r27
	milliseconds++;	
     220:	80 91 06 01 	lds	r24, 0x0106
     224:	90 91 07 01 	lds	r25, 0x0107
     228:	a0 91 08 01 	lds	r26, 0x0108
     22c:	b0 91 09 01 	lds	r27, 0x0109
     230:	01 96       	adiw	r24, 0x01	; 1
     232:	a1 1d       	adc	r26, r1
     234:	b1 1d       	adc	r27, r1
     236:	80 93 06 01 	sts	0x0106, r24
     23a:	90 93 07 01 	sts	0x0107, r25
     23e:	a0 93 08 01 	sts	0x0108, r26
     242:	b0 93 09 01 	sts	0x0109, r27
}
     246:	bf 91       	pop	r27
     248:	af 91       	pop	r26
     24a:	9f 91       	pop	r25
     24c:	8f 91       	pop	r24
     24e:	0f 90       	pop	r0
     250:	0f be       	out	0x3f, r0	; 63
     252:	0f 90       	pop	r0
     254:	1f 90       	pop	r1
     256:	18 95       	reti

00000258 <main>:
extern StepperMotor rightMotor;
volatile unsigned long milliseconds;
void startTimer(void);

int main(void)
{
     258:	cf 92       	push	r12
     25a:	df 92       	push	r13
     25c:	ef 92       	push	r14
     25e:	ff 92       	push	r15
     260:	0f 93       	push	r16
     262:	1f 93       	push	r17

	setupStepperMotor();
     264:	0e 94 75 01 	call	0x2ea	; 0x2ea <setupStepperMotor>
}

void startTimer()
{
	//Refresh Loop Timer1  
	TCCR0A = (1 << WGM01);//Set CTC
     268:	82 e0       	ldi	r24, 0x02	; 2
     26a:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00) | (1 << CS01);//prescalar to
     26c:	93 e0       	ldi	r25, 0x03	; 3
     26e:	95 bd       	out	0x25, r25	; 37
	OCR0A = 125;//Compare Ticks 
     270:	9d e7       	ldi	r25, 0x7D	; 125
     272:	97 bd       	out	0x27, r25	; 39
    TIMSK0 = (1 << OCIE0A);//Enable Timer Interrupts
     274:	80 93 6e 00 	sts	0x006E, r24
	
	milliseconds = 0;
     278:	10 92 06 01 	sts	0x0106, r1
     27c:	10 92 07 01 	sts	0x0107, r1
     280:	10 92 08 01 	sts	0x0108, r1
     284:	10 92 09 01 	sts	0x0109, r1
{

	setupStepperMotor();
	startTimer();
	
	USART_init();
     288:	0e 94 c8 02 	call	0x590	; 0x590 <USART_init>
	
	turnOnTimers(1,1);
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	61 e0       	ldi	r22, 0x01	; 1
     292:	70 e0       	ldi	r23, 0x00	; 0
     294:	0e 94 9e 02 	call	0x53c	; 0x53c <turnOnTimers>
	setDirection(0, 0);
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	60 e0       	ldi	r22, 0x00	; 0
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	0e 94 61 02 	call	0x4c2	; 0x4c2 <setDirection>
	enableDrive(1);
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	0e 94 98 01 	call	0x330	; 0x330 <enableDrive>
	
	straight(8000, 0, 4000, 0, 4000, 4000);
     2ac:	60 e4       	ldi	r22, 0x40	; 64
     2ae:	7f e1       	ldi	r23, 0x1F	; 31
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	40 e0       	ldi	r20, 0x00	; 0
     2b6:	50 e0       	ldi	r21, 0x00	; 0
     2b8:	20 ea       	ldi	r18, 0xA0	; 160
     2ba:	3f e0       	ldi	r19, 0x0F	; 15
     2bc:	00 e0       	ldi	r16, 0x00	; 0
     2be:	10 e0       	ldi	r17, 0x00	; 0
     2c0:	f0 ea       	ldi	r31, 0xA0	; 160
     2c2:	ef 2e       	mov	r14, r31
     2c4:	ff e0       	ldi	r31, 0x0F	; 15
     2c6:	ff 2e       	mov	r15, r31
     2c8:	e0 ea       	ldi	r30, 0xA0	; 160
     2ca:	ce 2e       	mov	r12, r30
     2cc:	ef e0       	ldi	r30, 0x0F	; 15
     2ce:	de 2e       	mov	r13, r30
     2d0:	0e 94 55 03 	call	0x6aa	; 0x6aa <straight>
	
	turnOnTimers(0, 0);
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	60 e0       	ldi	r22, 0x00	; 0
     2da:	70 e0       	ldi	r23, 0x00	; 0
     2dc:	0e 94 9e 02 	call	0x53c	; 0x53c <turnOnTimers>
	enableDrive(0);
     2e0:	80 e0       	ldi	r24, 0x00	; 0
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	0e 94 98 01 	call	0x330	; 0x330 <enableDrive>
     2e8:	ff cf       	rjmp	.-2      	; 0x2e8 <main+0x90>

000002ea <setupStepperMotor>:
}

void setupStepperMotor()
{
	//Motor Pins are D2 and D4 on arduino nano
	DDRD |= (1 << PORTD1) | (1 << PORTD2) | (1 << PORTD3) | (1 << PORTD4);
     2ea:	8a b1       	in	r24, 0x0a	; 10
     2ec:	8e 61       	ori	r24, 0x1E	; 30
     2ee:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << PORTB1) | (1 << PORTB0) | (1 << PORTB6) | (1 << PORTB7);
     2f0:	84 b1       	in	r24, 0x04	; 4
     2f2:	83 6c       	ori	r24, 0xC3	; 195
     2f4:	84 b9       	out	0x04, r24	; 4
	
	//Set to CTC
	TCCR1B = (1 << WGM12);
     2f6:	88 e0       	ldi	r24, 0x08	; 8
     2f8:	80 93 81 00 	sts	0x0081, r24
	TCCR3B = (1 << WGM32);
     2fc:	80 93 91 00 	sts	0x0091, r24
	
	//Compare Ticks
	OCR1A = 0;
     300:	10 92 89 00 	sts	0x0089, r1
     304:	10 92 88 00 	sts	0x0088, r1
	OCR3A = 0;
     308:	10 92 99 00 	sts	0x0099, r1
     30c:	10 92 98 00 	sts	0x0098, r1
	
	//Enable Interrupts
	TIMSK1 = (1 << OCIE1A);
     310:	82 e0       	ldi	r24, 0x02	; 2
     312:	80 93 6f 00 	sts	0x006F, r24
	TIMSK3 = (1 << OCIE3A);
     316:	80 93 71 00 	sts	0x0071, r24
	
	//Set Prescalar to 0
	OCR1B = 0;
     31a:	10 92 8b 00 	sts	0x008B, r1
     31e:	10 92 8a 00 	sts	0x008A, r1
	OCR3B = 0;
     322:	10 92 9b 00 	sts	0x009B, r1
     326:	10 92 9a 00 	sts	0x009A, r1
	
	//Enable Interrupts
	sei(); 
     32a:	78 94       	sei
{
	
	if(left)
		PORTB &= ~(1 << PB6);
	else
		PORTB |= (1 << PB6);
     32c:	2e 9a       	sbi	0x05, 6	; 5
	
	//Enable Interrupts
	sei(); 
	
	enableDrive(0);	
}
     32e:	08 95       	ret

00000330 <enableDrive>:

void enableDrive(int left)
{
	
	if(left)
     330:	89 2b       	or	r24, r25
     332:	11 f0       	breq	.+4      	; 0x338 <enableDrive+0x8>
		PORTB &= ~(1 << PB6);
     334:	2e 98       	cbi	0x05, 6	; 5
     336:	08 95       	ret
	else
		PORTB |= (1 << PB6);
     338:	2e 9a       	sbi	0x05, 6	; 5
     33a:	08 95       	ret

0000033c <pulseMotor>:
}

/* Pulse port and pin for 10 microseconds */
void pulseMotor(volatile uint8_t *port, uint8_t pin)
{
     33c:	fc 01       	movw	r30, r24
	//Send Pulse to Motor
	(*port) |= (1 << pin);
     33e:	20 81       	ld	r18, Z
     340:	81 e0       	ldi	r24, 0x01	; 1
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	02 c0       	rjmp	.+4      	; 0x34a <pulseMotor+0xe>
     346:	88 0f       	add	r24, r24
     348:	99 1f       	adc	r25, r25
     34a:	6a 95       	dec	r22
     34c:	e2 f7       	brpl	.-8      	; 0x346 <pulseMotor+0xa>
     34e:	28 2b       	or	r18, r24
     350:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     352:	9a e1       	ldi	r25, 0x1A	; 26
     354:	9a 95       	dec	r25
     356:	f1 f7       	brne	.-4      	; 0x354 <pulseMotor+0x18>
	_delay_us(5);
	(*port) &= ~(1 << pin);
     358:	20 81       	ld	r18, Z
     35a:	80 95       	com	r24
     35c:	82 23       	and	r24, r18
     35e:	80 83       	st	Z, r24
}
     360:	08 95       	ret

00000362 <__vector_32>:
	OCR1A = leftMotor.delayCounter;
}

/* RIGHT MOTOR CONTROL */
ISR(TIMER3_COMPA_vect)
{	
     362:	1f 92       	push	r1
     364:	0f 92       	push	r0
     366:	0f b6       	in	r0, 0x3f	; 63
     368:	0f 92       	push	r0
     36a:	11 24       	eor	r1, r1
     36c:	2f 93       	push	r18
     36e:	3f 93       	push	r19
     370:	4f 93       	push	r20
     372:	5f 93       	push	r21
     374:	6f 93       	push	r22
     376:	7f 93       	push	r23
     378:	8f 93       	push	r24
     37a:	9f 93       	push	r25
     37c:	af 93       	push	r26
     37e:	bf 93       	push	r27
     380:	ef 93       	push	r30
     382:	ff 93       	push	r31
	//Pulse and increment motor
	pulseMotor(&PORTB, PB7);
     384:	85 e2       	ldi	r24, 0x25	; 37
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	67 e0       	ldi	r22, 0x07	; 7
     38a:	0e 94 9e 01 	call	0x33c	; 0x33c <pulseMotor>
	rightMotor.stepCount++;
     38e:	80 91 0a 01 	lds	r24, 0x010A
     392:	90 91 0b 01 	lds	r25, 0x010B
     396:	a0 91 0c 01 	lds	r26, 0x010C
     39a:	b0 91 0d 01 	lds	r27, 0x010D
     39e:	01 96       	adiw	r24, 0x01	; 1
     3a0:	a1 1d       	adc	r26, r1
     3a2:	b1 1d       	adc	r27, r1
     3a4:	80 93 0a 01 	sts	0x010A, r24
     3a8:	90 93 0b 01 	sts	0x010B, r25
     3ac:	a0 93 0c 01 	sts	0x010C, r26
     3b0:	b0 93 0d 01 	sts	0x010D, r27
	
	rightMotor.delayCounter = rightMotor.currentStepDelay;
     3b4:	80 91 0e 01 	lds	r24, 0x010E
     3b8:	90 91 0f 01 	lds	r25, 0x010F
     3bc:	a0 91 10 01 	lds	r26, 0x0110
     3c0:	b0 91 11 01 	lds	r27, 0x0111
     3c4:	80 93 12 01 	sts	0x0112, r24
     3c8:	90 93 13 01 	sts	0x0113, r25
     3cc:	a0 93 14 01 	sts	0x0114, r26
     3d0:	b0 93 15 01 	sts	0x0115, r27

	OCR3A = rightMotor.delayCounter;	
     3d4:	60 91 12 01 	lds	r22, 0x0112
     3d8:	70 91 13 01 	lds	r23, 0x0113
     3dc:	80 91 14 01 	lds	r24, 0x0114
     3e0:	90 91 15 01 	lds	r25, 0x0115
     3e4:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <__fixunssfsi>
     3e8:	70 93 99 00 	sts	0x0099, r23
     3ec:	60 93 98 00 	sts	0x0098, r22
}
     3f0:	ff 91       	pop	r31
     3f2:	ef 91       	pop	r30
     3f4:	bf 91       	pop	r27
     3f6:	af 91       	pop	r26
     3f8:	9f 91       	pop	r25
     3fa:	8f 91       	pop	r24
     3fc:	7f 91       	pop	r23
     3fe:	6f 91       	pop	r22
     400:	5f 91       	pop	r21
     402:	4f 91       	pop	r20
     404:	3f 91       	pop	r19
     406:	2f 91       	pop	r18
     408:	0f 90       	pop	r0
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	0f 90       	pop	r0
     40e:	1f 90       	pop	r1
     410:	18 95       	reti

00000412 <__vector_17>:



/* LEFT MOTOR CONTROL */
ISR(TIMER1_COMPA_vect)
{
     412:	1f 92       	push	r1
     414:	0f 92       	push	r0
     416:	0f b6       	in	r0, 0x3f	; 63
     418:	0f 92       	push	r0
     41a:	11 24       	eor	r1, r1
     41c:	2f 93       	push	r18
     41e:	3f 93       	push	r19
     420:	4f 93       	push	r20
     422:	5f 93       	push	r21
     424:	6f 93       	push	r22
     426:	7f 93       	push	r23
     428:	8f 93       	push	r24
     42a:	9f 93       	push	r25
     42c:	af 93       	push	r26
     42e:	bf 93       	push	r27
     430:	ef 93       	push	r30
     432:	ff 93       	push	r31
	pulseMotor(&PORTD, PD1);
     434:	8b e2       	ldi	r24, 0x2B	; 43
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	61 e0       	ldi	r22, 0x01	; 1
     43a:	0e 94 9e 01 	call	0x33c	; 0x33c <pulseMotor>
	leftMotor.stepCount++;		
     43e:	80 91 22 01 	lds	r24, 0x0122
     442:	90 91 23 01 	lds	r25, 0x0123
     446:	a0 91 24 01 	lds	r26, 0x0124
     44a:	b0 91 25 01 	lds	r27, 0x0125
     44e:	01 96       	adiw	r24, 0x01	; 1
     450:	a1 1d       	adc	r26, r1
     452:	b1 1d       	adc	r27, r1
     454:	80 93 22 01 	sts	0x0122, r24
     458:	90 93 23 01 	sts	0x0123, r25
     45c:	a0 93 24 01 	sts	0x0124, r26
     460:	b0 93 25 01 	sts	0x0125, r27
	
	leftMotor.delayCounter = leftMotor.currentStepDelay;
     464:	80 91 26 01 	lds	r24, 0x0126
     468:	90 91 27 01 	lds	r25, 0x0127
     46c:	a0 91 28 01 	lds	r26, 0x0128
     470:	b0 91 29 01 	lds	r27, 0x0129
     474:	80 93 2a 01 	sts	0x012A, r24
     478:	90 93 2b 01 	sts	0x012B, r25
     47c:	a0 93 2c 01 	sts	0x012C, r26
     480:	b0 93 2d 01 	sts	0x012D, r27
	
	OCR1A = leftMotor.delayCounter;
     484:	60 91 2a 01 	lds	r22, 0x012A
     488:	70 91 2b 01 	lds	r23, 0x012B
     48c:	80 91 2c 01 	lds	r24, 0x012C
     490:	90 91 2d 01 	lds	r25, 0x012D
     494:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <__fixunssfsi>
     498:	70 93 89 00 	sts	0x0089, r23
     49c:	60 93 88 00 	sts	0x0088, r22
}
     4a0:	ff 91       	pop	r31
     4a2:	ef 91       	pop	r30
     4a4:	bf 91       	pop	r27
     4a6:	af 91       	pop	r26
     4a8:	9f 91       	pop	r25
     4aa:	8f 91       	pop	r24
     4ac:	7f 91       	pop	r23
     4ae:	6f 91       	pop	r22
     4b0:	5f 91       	pop	r21
     4b2:	4f 91       	pop	r20
     4b4:	3f 91       	pop	r19
     4b6:	2f 91       	pop	r18
     4b8:	0f 90       	pop	r0
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	0f 90       	pop	r0
     4be:	1f 90       	pop	r1
     4c0:	18 95       	reti

000004c2 <setDirection>:
	(*port) &= ~(1 << pin);
}

void setDirection(int left, int right)
{
	if(left)
     4c2:	89 2b       	or	r24, r25
     4c4:	11 f0       	breq	.+4      	; 0x4ca <setDirection+0x8>
		PORTD &= ~(1 << PD0);
     4c6:	58 98       	cbi	0x0b, 0	; 11
     4c8:	01 c0       	rjmp	.+2      	; 0x4cc <setDirection+0xa>
	else
		PORTD |= (1 << PD0);
     4ca:	58 9a       	sbi	0x0b, 0	; 11
		
	if(right)
     4cc:	67 2b       	or	r22, r23
     4ce:	11 f0       	breq	.+4      	; 0x4d4 <setDirection+0x12>
		PORTD |= (1 << PD6);
     4d0:	5e 9a       	sbi	0x0b, 6	; 11
     4d2:	08 95       	ret
	else
		PORTD &= ~(1 << PD6);
     4d4:	5e 98       	cbi	0x0b, 6	; 11
     4d6:	08 95       	ret

000004d8 <eightBitTimerFix>:
}


int eightBitTimerFix(struct StepperMotor *motor)
{
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	ec 01       	movw	r28, r24
	
	int returnNum;

	if(motor->delayCounter <= 255)
     4de:	68 85       	ldd	r22, Y+8	; 0x08
     4e0:	79 85       	ldd	r23, Y+9	; 0x09
     4e2:	8a 85       	ldd	r24, Y+10	; 0x0a
     4e4:	9b 85       	ldd	r25, Y+11	; 0x0b
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	4f e7       	ldi	r20, 0x7F	; 127
     4ec:	53 e4       	ldi	r21, 0x43	; 67
     4ee:	0e 94 0e 0a 	call	0x141c	; 0x141c <__cmpsf2>
     4f2:	18 16       	cp	r1, r24
     4f4:	7c f0       	brlt	.+30     	; 0x514 <eightBitTimerFix+0x3c>
	{
		returnNum = motor->delayCounter;
     4f6:	68 85       	ldd	r22, Y+8	; 0x08
     4f8:	79 85       	ldd	r23, Y+9	; 0x09
     4fa:	8a 85       	ldd	r24, Y+10	; 0x0a
     4fc:	9b 85       	ldd	r25, Y+11	; 0x0b
     4fe:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__fixsfsi>
		motor->delayCounter = 0;	
     502:	80 e0       	ldi	r24, 0x00	; 0
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	a0 e0       	ldi	r26, 0x00	; 0
     508:	b0 e0       	ldi	r27, 0x00	; 0
     50a:	88 87       	std	Y+8, r24	; 0x08
     50c:	99 87       	std	Y+9, r25	; 0x09
     50e:	aa 87       	std	Y+10, r26	; 0x0a
     510:	bb 87       	std	Y+11, r27	; 0x0b
     512:	10 c0       	rjmp	.+32     	; 0x534 <eightBitTimerFix+0x5c>
	}
	else
	{
		motor->delayCounter -= 255;
     514:	68 85       	ldd	r22, Y+8	; 0x08
     516:	79 85       	ldd	r23, Y+9	; 0x09
     518:	8a 85       	ldd	r24, Y+10	; 0x0a
     51a:	9b 85       	ldd	r25, Y+11	; 0x0b
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	4f e7       	ldi	r20, 0x7F	; 127
     522:	53 e4       	ldi	r21, 0x43	; 67
     524:	0e 94 a9 09 	call	0x1352	; 0x1352 <__subsf3>
     528:	68 87       	std	Y+8, r22	; 0x08
     52a:	79 87       	std	Y+9, r23	; 0x09
     52c:	8a 87       	std	Y+10, r24	; 0x0a
     52e:	9b 87       	std	Y+11, r25	; 0x0b
     530:	6f ef       	ldi	r22, 0xFF	; 255
     532:	70 e0       	ldi	r23, 0x00	; 0
		returnNum = 255;
	}
	return returnNum;
}
     534:	cb 01       	movw	r24, r22
     536:	df 91       	pop	r29
     538:	cf 91       	pop	r28
     53a:	08 95       	ret

0000053c <turnOnTimers>:

void turnOnTimers(int one, int two)
{
	if(one)
     53c:	89 2b       	or	r24, r25
     53e:	21 f0       	breq	.+8      	; 0x548 <turnOnTimers+0xc>
		TCCR1B |= (1 << CS11) | (1 << CS10);
     540:	80 91 81 00 	lds	r24, 0x0081
     544:	83 60       	ori	r24, 0x03	; 3
     546:	03 c0       	rjmp	.+6      	; 0x54e <turnOnTimers+0x12>
	else
		TCCR1B &= ~((1 << CS11) | (1 << CS10));
     548:	80 91 81 00 	lds	r24, 0x0081
     54c:	8c 7f       	andi	r24, 0xFC	; 252
     54e:	80 93 81 00 	sts	0x0081, r24
		
	if(two)
     552:	67 2b       	or	r22, r23
     554:	21 f0       	breq	.+8      	; 0x55e <turnOnTimers+0x22>
		TCCR3B |= (1 << CS31) | (1 << CS30);
     556:	80 91 91 00 	lds	r24, 0x0091
     55a:	83 60       	ori	r24, 0x03	; 3
     55c:	03 c0       	rjmp	.+6      	; 0x564 <turnOnTimers+0x28>
	else	
		TCCR3B &= ~(1 << CS31) | (1 << CS30);
     55e:	80 91 91 00 	lds	r24, 0x0091
     562:	8d 7f       	andi	r24, 0xFD	; 253
     564:	80 93 91 00 	sts	0x0091, r24
     568:	08 95       	ret

0000056a <getDelayFromVelocity>:
}

int getDelayFromVelocity(int stepsPerSecond)
{
	if(stepsPerSecond < 10)
     56a:	8a 30       	cpi	r24, 0x0A	; 10
     56c:	91 05       	cpc	r25, r1
     56e:	1c f4       	brge	.+6      	; 0x576 <getDelayFromVelocity+0xc>
     570:	28 ea       	ldi	r18, 0xA8	; 168
     572:	31 e6       	ldi	r19, 0x61	; 97
     574:	0b c0       	rjmp	.+22     	; 0x58c <getDelayFromVelocity+0x22>
		return 25000;
	else
		return TIMER_FREQUENCY / stepsPerSecond;
     576:	9c 01       	movw	r18, r24
     578:	44 27       	eor	r20, r20
     57a:	37 fd       	sbrc	r19, 7
     57c:	40 95       	com	r20
     57e:	54 2f       	mov	r21, r20
     580:	68 e4       	ldi	r22, 0x48	; 72
     582:	78 ee       	ldi	r23, 0xE8	; 232
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	0e 94 c4 0b 	call	0x1788	; 0x1788 <__divmodsi4>
}
     58c:	c9 01       	movw	r24, r18
     58e:	08 95       	ret

00000590 <USART_init>:
void USART_putstring(char* StringPtr);
 
 
void USART_init(void){
 
 UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     590:	10 92 c5 00 	sts	0x00C5, r1
 UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     594:	87 e6       	ldi	r24, 0x67	; 103
     596:	80 93 c4 00 	sts	0x00C4, r24
 UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     59a:	88 e1       	ldi	r24, 0x18	; 24
     59c:	80 93 c1 00 	sts	0x00C1, r24
 UCSR0C = (3<<UCSZ00);
     5a0:	86 e0       	ldi	r24, 0x06	; 6
     5a2:	80 93 c2 00 	sts	0x00C2, r24
}
     5a6:	08 95       	ret

000005a8 <USART_receive>:
 
unsigned char USART_receive(void){
 
 while(!(UCSR0A & (1<<RXC0)));
     5a8:	80 91 c0 00 	lds	r24, 0x00C0
     5ac:	87 ff       	sbrs	r24, 7
     5ae:	fc cf       	rjmp	.-8      	; 0x5a8 <USART_receive>
 return UDR0;
     5b0:	80 91 c6 00 	lds	r24, 0x00C6
 
}
     5b4:	08 95       	ret

000005b6 <USART_send>:
 
void USART_send( unsigned char data){
     5b6:	98 2f       	mov	r25, r24
 
 while(!(UCSR0A & (1<<UDRE0)));
     5b8:	80 91 c0 00 	lds	r24, 0x00C0
     5bc:	85 ff       	sbrs	r24, 5
     5be:	fc cf       	rjmp	.-8      	; 0x5b8 <USART_send+0x2>
 UDR0 = data;
     5c0:	90 93 c6 00 	sts	0x00C6, r25
 
}
     5c4:	08 95       	ret

000005c6 <USART_putstring>:
 
void USART_putstring(char* StringPtr){
     5c6:	fc 01       	movw	r30, r24
     5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <USART_putstring+0x12>
 
}
 
void USART_send( unsigned char data){
 
 while(!(UCSR0A & (1<<UDRE0)));
     5ca:	80 91 c0 00 	lds	r24, 0x00C0
     5ce:	85 ff       	sbrs	r24, 5
     5d0:	fc cf       	rjmp	.-8      	; 0x5ca <USART_putstring+0x4>
 UDR0 = data;
     5d2:	90 93 c6 00 	sts	0x00C6, r25
 
void USART_putstring(char* StringPtr){
 
while(*StringPtr != 0x00){
 USART_send(*StringPtr);
 StringPtr++;}
     5d6:	31 96       	adiw	r30, 0x01	; 1
 
}
 
void USART_putstring(char* StringPtr){
 
while(*StringPtr != 0x00){
     5d8:	90 81       	ld	r25, Z
     5da:	99 23       	and	r25, r25
     5dc:	b1 f7       	brne	.-20     	; 0x5ca <USART_putstring+0x4>
 USART_send(*StringPtr);
 StringPtr++;}
 
}
     5de:	08 95       	ret

000005e0 <print>:
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial
}

void print(char* string)
{
	USART_putstring(string);
     5e0:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <USART_putstring>
     5e4:	08 95       	ret

000005e6 <printNum>:
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial  
	USART_putstring("\n\r");
}

void printNum(float value)
{
     5e6:	0f 93       	push	r16
     5e8:	1f 93       	push	r17
	sprintf(str,"%f",value);
     5ea:	2d b7       	in	r18, 0x3d	; 61
     5ec:	3e b7       	in	r19, 0x3e	; 62
     5ee:	28 50       	subi	r18, 0x08	; 8
     5f0:	30 40       	sbci	r19, 0x00	; 0
     5f2:	0f b6       	in	r0, 0x3f	; 63
     5f4:	f8 94       	cli
     5f6:	3e bf       	out	0x3e, r19	; 62
     5f8:	0f be       	out	0x3f, r0	; 63
     5fa:	2d bf       	out	0x3d, r18	; 61
     5fc:	ed b7       	in	r30, 0x3d	; 61
     5fe:	fe b7       	in	r31, 0x3e	; 62
     600:	31 96       	adiw	r30, 0x01	; 1
     602:	0a e3       	ldi	r16, 0x3A	; 58
     604:	11 e0       	ldi	r17, 0x01	; 1
     606:	ad b7       	in	r26, 0x3d	; 61
     608:	be b7       	in	r27, 0x3e	; 62
     60a:	12 96       	adiw	r26, 0x02	; 2
     60c:	1c 93       	st	X, r17
     60e:	0e 93       	st	-X, r16
     610:	11 97       	sbiw	r26, 0x01	; 1
     612:	20 e0       	ldi	r18, 0x00	; 0
     614:	31 e0       	ldi	r19, 0x01	; 1
     616:	33 83       	std	Z+3, r19	; 0x03
     618:	22 83       	std	Z+2, r18	; 0x02
     61a:	64 83       	std	Z+4, r22	; 0x04
     61c:	75 83       	std	Z+5, r23	; 0x05
     61e:	86 83       	std	Z+6, r24	; 0x06
     620:	97 83       	std	Z+7, r25	; 0x07
     622:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <sprintf>
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial
     626:	2d b7       	in	r18, 0x3d	; 61
     628:	3e b7       	in	r19, 0x3e	; 62
     62a:	28 5f       	subi	r18, 0xF8	; 248
     62c:	3f 4f       	sbci	r19, 0xFF	; 255
     62e:	0f b6       	in	r0, 0x3f	; 63
     630:	f8 94       	cli
     632:	3e bf       	out	0x3e, r19	; 62
     634:	0f be       	out	0x3f, r0	; 63
     636:	2d bf       	out	0x3d, r18	; 61
     638:	c8 01       	movw	r24, r16
     63a:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <USART_putstring>
}
     63e:	1f 91       	pop	r17
     640:	0f 91       	pop	r16
     642:	08 95       	ret

00000644 <printlnNum>:
 
}

char str[16];
void printlnNum(double value)
{
     644:	0f 93       	push	r16
     646:	1f 93       	push	r17
	sprintf(str,"%f",value);
     648:	2d b7       	in	r18, 0x3d	; 61
     64a:	3e b7       	in	r19, 0x3e	; 62
     64c:	28 50       	subi	r18, 0x08	; 8
     64e:	30 40       	sbci	r19, 0x00	; 0
     650:	0f b6       	in	r0, 0x3f	; 63
     652:	f8 94       	cli
     654:	3e bf       	out	0x3e, r19	; 62
     656:	0f be       	out	0x3f, r0	; 63
     658:	2d bf       	out	0x3d, r18	; 61
     65a:	ed b7       	in	r30, 0x3d	; 61
     65c:	fe b7       	in	r31, 0x3e	; 62
     65e:	31 96       	adiw	r30, 0x01	; 1
     660:	0a e3       	ldi	r16, 0x3A	; 58
     662:	11 e0       	ldi	r17, 0x01	; 1
     664:	ad b7       	in	r26, 0x3d	; 61
     666:	be b7       	in	r27, 0x3e	; 62
     668:	12 96       	adiw	r26, 0x02	; 2
     66a:	1c 93       	st	X, r17
     66c:	0e 93       	st	-X, r16
     66e:	11 97       	sbiw	r26, 0x01	; 1
     670:	20 e0       	ldi	r18, 0x00	; 0
     672:	31 e0       	ldi	r19, 0x01	; 1
     674:	33 83       	std	Z+3, r19	; 0x03
     676:	22 83       	std	Z+2, r18	; 0x02
     678:	64 83       	std	Z+4, r22	; 0x04
     67a:	75 83       	std	Z+5, r23	; 0x05
     67c:	86 83       	std	Z+6, r24	; 0x06
     67e:	97 83       	std	Z+7, r25	; 0x07
     680:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <sprintf>
	USART_putstring(str);    //Pass the string to the USART_putstring function and sends it over the serial  
     684:	2d b7       	in	r18, 0x3d	; 61
     686:	3e b7       	in	r19, 0x3e	; 62
     688:	28 5f       	subi	r18, 0xF8	; 248
     68a:	3f 4f       	sbci	r19, 0xFF	; 255
     68c:	0f b6       	in	r0, 0x3f	; 63
     68e:	f8 94       	cli
     690:	3e bf       	out	0x3e, r19	; 62
     692:	0f be       	out	0x3f, r0	; 63
     694:	2d bf       	out	0x3d, r18	; 61
     696:	c8 01       	movw	r24, r16
     698:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <USART_putstring>
	USART_putstring("\n\r");
     69c:	83 e0       	ldi	r24, 0x03	; 3
     69e:	91 e0       	ldi	r25, 0x01	; 1
     6a0:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <USART_putstring>
}
     6a4:	1f 91       	pop	r17
     6a6:	0f 91       	pop	r16
     6a8:	08 95       	ret

000006aa <straight>:
extern StepperMotor leftMotor;
extern StepperMotor rightMotor;
extern volatile unsigned long milliseconds;

void straight(long stepTarget, int inSpeed, int maxSpeed, int exitSpeed, int accel, int decel)
{	
     6aa:	2f 92       	push	r2
     6ac:	3f 92       	push	r3
     6ae:	4f 92       	push	r4
     6b0:	5f 92       	push	r5
     6b2:	6f 92       	push	r6
     6b4:	7f 92       	push	r7
     6b6:	8f 92       	push	r8
     6b8:	9f 92       	push	r9
     6ba:	af 92       	push	r10
     6bc:	bf 92       	push	r11
     6be:	cf 92       	push	r12
     6c0:	df 92       	push	r13
     6c2:	ef 92       	push	r14
     6c4:	ff 92       	push	r15
     6c6:	0f 93       	push	r16
     6c8:	1f 93       	push	r17
     6ca:	df 93       	push	r29
     6cc:	cf 93       	push	r28
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62
     6d2:	ac 97       	sbiw	r28, 0x2c	; 44
     6d4:	0f b6       	in	r0, 0x3f	; 63
     6d6:	f8 94       	cli
     6d8:	de bf       	out	0x3e, r29	; 62
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	cd bf       	out	0x3d, r28	; 61
     6de:	69 87       	std	Y+9, r22	; 0x09
     6e0:	7a 87       	std	Y+10, r23	; 0x0a
     6e2:	8b 87       	std	Y+11, r24	; 0x0b
     6e4:	9c 87       	std	Y+12, r25	; 0x0c
     6e6:	3e 87       	std	Y+14, r19	; 0x0e
     6e8:	2d 87       	std	Y+13, r18	; 0x0d
     6ea:	18 8b       	std	Y+16, r17	; 0x10
     6ec:	0f 87       	std	Y+15, r16	; 0x0f
     6ee:	da 8a       	std	Y+18, r13	; 0x12
     6f0:	c9 8a       	std	Y+17, r12	; 0x11
	unsigned long startTime = milliseconds;
     6f2:	80 91 06 01 	lds	r24, 0x0106
     6f6:	90 91 07 01 	lds	r25, 0x0107
     6fa:	a0 91 08 01 	lds	r26, 0x0108
     6fe:	b0 91 09 01 	lds	r27, 0x0109
     702:	8d 83       	std	Y+5, r24	; 0x05
     704:	9e 83       	std	Y+6, r25	; 0x06
     706:	af 83       	std	Y+7, r26	; 0x07
     708:	b8 87       	std	Y+8, r27	; 0x08
	
	while(inSpeed + accel*(float)((milliseconds-startTime)/1000.0) < maxSpeed)
     70a:	ca 01       	movw	r24, r20
     70c:	aa 27       	eor	r26, r26
     70e:	97 fd       	sbrc	r25, 7
     710:	a0 95       	com	r26
     712:	ba 2f       	mov	r27, r26
     714:	8f 8b       	std	Y+23, r24	; 0x17
     716:	98 8f       	std	Y+24, r25	; 0x18
     718:	a9 8f       	std	Y+25, r26	; 0x19
     71a:	ba 8f       	std	Y+26, r27	; 0x1a
     71c:	97 01       	movw	r18, r14
     71e:	44 27       	eor	r20, r20
     720:	37 fd       	sbrc	r19, 7
     722:	40 95       	com	r20
     724:	54 2f       	mov	r21, r20
     726:	2b 8f       	std	Y+27, r18	; 0x1b
     728:	3c 8f       	std	Y+28, r19	; 0x1c
     72a:	4d 8f       	std	Y+29, r20	; 0x1d
     72c:	5e 8f       	std	Y+30, r21	; 0x1e
     72e:	8d 85       	ldd	r24, Y+13	; 0x0d
     730:	9e 85       	ldd	r25, Y+14	; 0x0e
     732:	aa 27       	eor	r26, r26
     734:	97 fd       	sbrc	r25, 7
     736:	a0 95       	com	r26
     738:	ba 2f       	mov	r27, r26
     73a:	8f 8f       	std	Y+31, r24	; 0x1f
     73c:	98 a3       	std	Y+32, r25	; 0x20
     73e:	a9 a3       	std	Y+33, r26	; 0x21
     740:	ba a3       	std	Y+34, r27	; 0x22
	{
		float curSpeed = inSpeed + accel*(float)((milliseconds-startTime)/1000.0);
		
		leftMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
		rightMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
		float decelStepsUntilStop = curSpeed*curSpeed / (2.0 * decel) - (float)exitSpeed * (float)exitSpeed / (2.0 * decel);
     742:	96 01       	movw	r18, r12
     744:	44 27       	eor	r20, r20
     746:	37 fd       	sbrc	r19, 7
     748:	40 95       	com	r20
     74a:	54 2f       	mov	r21, r20
     74c:	2b a3       	std	Y+35, r18	; 0x23
     74e:	3c a3       	std	Y+36, r19	; 0x24
     750:	4d a3       	std	Y+37, r20	; 0x25
     752:	5e a3       	std	Y+38, r21	; 0x26
     754:	c8 01       	movw	r24, r16
     756:	aa 27       	eor	r26, r26
     758:	97 fd       	sbrc	r25, 7
     75a:	a0 95       	com	r26
     75c:	ba 2f       	mov	r27, r26
     75e:	8f a3       	std	Y+39, r24	; 0x27
     760:	98 a7       	std	Y+40, r25	; 0x28
     762:	a9 a7       	std	Y+41, r26	; 0x29
     764:	ba a7       	std	Y+42, r27	; 0x2a
     766:	be c0       	rjmp	.+380    	; 0x8e4 <straight+0x23a>
{	
	unsigned long startTime = milliseconds;
	
	while(inSpeed + accel*(float)((milliseconds-startTime)/1000.0) < maxSpeed)
	{
		float curSpeed = inSpeed + accel*(float)((milliseconds-startTime)/1000.0);
     768:	60 91 06 01 	lds	r22, 0x0106
     76c:	70 91 07 01 	lds	r23, 0x0107
     770:	80 91 08 01 	lds	r24, 0x0108
     774:	90 91 09 01 	lds	r25, 0x0109
     778:	2d 81       	ldd	r18, Y+5	; 0x05
     77a:	3e 81       	ldd	r19, Y+6	; 0x06
     77c:	4f 81       	ldd	r20, Y+7	; 0x07
     77e:	58 85       	ldd	r21, Y+8	; 0x08
     780:	62 1b       	sub	r22, r18
     782:	73 0b       	sbc	r23, r19
     784:	84 0b       	sbc	r24, r20
     786:	95 0b       	sbc	r25, r21
     788:	0e 94 ab 0a 	call	0x1556	; 0x1556 <__floatunsisf>
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	4a e7       	ldi	r20, 0x7A	; 122
     792:	54 e4       	ldi	r21, 0x44	; 68
     794:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     798:	9b 01       	movw	r18, r22
     79a:	ac 01       	movw	r20, r24
     79c:	c6 01       	movw	r24, r12
     79e:	b5 01       	movw	r22, r10
     7a0:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     7a4:	9b 01       	movw	r18, r22
     7a6:	ac 01       	movw	r20, r24
     7a8:	c4 01       	movw	r24, r8
     7aa:	b3 01       	movw	r22, r6
     7ac:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     7b0:	3b 01       	movw	r6, r22
     7b2:	4c 01       	movw	r8, r24
		
		leftMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
     7b4:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__fixsfsi>
     7b8:	7b 01       	movw	r14, r22
     7ba:	8c 01       	movw	r16, r24
     7bc:	7c a7       	std	Y+44, r23	; 0x2c
     7be:	6b a7       	std	Y+43, r22	; 0x2b
     7c0:	cb 01       	movw	r24, r22
     7c2:	0e 94 b5 02 	call	0x56a	; 0x56a <getDelayFromVelocity>
     7c6:	aa 27       	eor	r26, r26
     7c8:	97 fd       	sbrc	r25, 7
     7ca:	a0 95       	com	r26
     7cc:	ba 2f       	mov	r27, r26
     7ce:	bc 01       	movw	r22, r24
     7d0:	cd 01       	movw	r24, r26
     7d2:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     7d6:	60 93 26 01 	sts	0x0126, r22
     7da:	70 93 27 01 	sts	0x0127, r23
     7de:	80 93 28 01 	sts	0x0128, r24
     7e2:	90 93 29 01 	sts	0x0129, r25
		rightMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
     7e6:	c7 01       	movw	r24, r14
     7e8:	0e 94 b5 02 	call	0x56a	; 0x56a <getDelayFromVelocity>
     7ec:	aa 27       	eor	r26, r26
     7ee:	97 fd       	sbrc	r25, 7
     7f0:	a0 95       	com	r26
     7f2:	ba 2f       	mov	r27, r26
     7f4:	bc 01       	movw	r22, r24
     7f6:	cd 01       	movw	r24, r26
     7f8:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     7fc:	60 93 0e 01 	sts	0x010E, r22
     800:	70 93 0f 01 	sts	0x010F, r23
     804:	80 93 10 01 	sts	0x0110, r24
     808:	90 93 11 01 	sts	0x0111, r25
		float decelStepsUntilStop = curSpeed*curSpeed / (2.0 * decel) - (float)exitSpeed * (float)exitSpeed / (2.0 * decel);
     80c:	6b a1       	ldd	r22, Y+35	; 0x23
     80e:	7c a1       	ldd	r23, Y+36	; 0x24
     810:	8d a1       	ldd	r24, Y+37	; 0x25
     812:	9e a1       	ldd	r25, Y+38	; 0x26
     814:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     818:	5b 01       	movw	r10, r22
     81a:	6c 01       	movw	r12, r24
     81c:	6f a1       	ldd	r22, Y+39	; 0x27
     81e:	78 a5       	ldd	r23, Y+40	; 0x28
     820:	89 a5       	ldd	r24, Y+41	; 0x29
     822:	9a a5       	ldd	r25, Y+42	; 0x2a
     824:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     828:	1b 01       	movw	r2, r22
     82a:	2c 01       	movw	r4, r24
		
		//If we need to start decelerating
		if(leftMotor.stepCount + decelStepsUntilStop >= stepTarget)
     82c:	60 91 22 01 	lds	r22, 0x0122
     830:	70 91 23 01 	lds	r23, 0x0123
     834:	80 91 24 01 	lds	r24, 0x0124
     838:	90 91 25 01 	lds	r25, 0x0125
     83c:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     840:	6b 8b       	std	Y+19, r22	; 0x13
     842:	7c 8b       	std	Y+20, r23	; 0x14
     844:	8d 8b       	std	Y+21, r24	; 0x15
     846:	9e 8b       	std	Y+22, r25	; 0x16
     848:	c4 01       	movw	r24, r8
     84a:	b3 01       	movw	r22, r6
     84c:	a4 01       	movw	r20, r8
     84e:	93 01       	movw	r18, r6
     850:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     854:	7b 01       	movw	r14, r22
     856:	8c 01       	movw	r16, r24
     858:	c6 01       	movw	r24, r12
     85a:	b5 01       	movw	r22, r10
     85c:	a6 01       	movw	r20, r12
     85e:	95 01       	movw	r18, r10
     860:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     864:	9b 01       	movw	r18, r22
     866:	ac 01       	movw	r20, r24
     868:	c8 01       	movw	r24, r16
     86a:	b7 01       	movw	r22, r14
     86c:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     870:	3b 01       	movw	r6, r22
     872:	4c 01       	movw	r8, r24
     874:	c2 01       	movw	r24, r4
     876:	b1 01       	movw	r22, r2
     878:	a2 01       	movw	r20, r4
     87a:	91 01       	movw	r18, r2
     87c:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     880:	7b 01       	movw	r14, r22
     882:	8c 01       	movw	r16, r24
     884:	c6 01       	movw	r24, r12
     886:	b5 01       	movw	r22, r10
     888:	20 e0       	ldi	r18, 0x00	; 0
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	40 e0       	ldi	r20, 0x00	; 0
     88e:	50 ec       	ldi	r21, 0xC0	; 192
     890:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     894:	9b 01       	movw	r18, r22
     896:	ac 01       	movw	r20, r24
     898:	c8 01       	movw	r24, r16
     89a:	b7 01       	movw	r22, r14
     89c:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     8a0:	9b 01       	movw	r18, r22
     8a2:	ac 01       	movw	r20, r24
     8a4:	c4 01       	movw	r24, r8
     8a6:	b3 01       	movw	r22, r6
     8a8:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     8ac:	9b 01       	movw	r18, r22
     8ae:	ac 01       	movw	r20, r24
     8b0:	6b 89       	ldd	r22, Y+19	; 0x13
     8b2:	7c 89       	ldd	r23, Y+20	; 0x14
     8b4:	8d 89       	ldd	r24, Y+21	; 0x15
     8b6:	9e 89       	ldd	r25, Y+22	; 0x16
     8b8:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     8bc:	7b 01       	movw	r14, r22
     8be:	8c 01       	movw	r16, r24
     8c0:	69 85       	ldd	r22, Y+9	; 0x09
     8c2:	7a 85       	ldd	r23, Y+10	; 0x0a
     8c4:	8b 85       	ldd	r24, Y+11	; 0x0b
     8c6:	9c 85       	ldd	r25, Y+12	; 0x0c
     8c8:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     8cc:	9b 01       	movw	r18, r22
     8ce:	ac 01       	movw	r20, r24
     8d0:	c8 01       	movw	r24, r16
     8d2:	b7 01       	movw	r22, r14
     8d4:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     8d8:	87 ff       	sbrs	r24, 7
     8da:	4c c0       	rjmp	.+152    	; 0x974 <straight+0x2ca>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     8dc:	80 ea       	ldi	r24, 0xA0	; 160
     8de:	9f e0       	ldi	r25, 0x0F	; 15
     8e0:	01 97       	sbiw	r24, 0x01	; 1
     8e2:	f1 f7       	brne	.-4      	; 0x8e0 <straight+0x236>

void straight(long stepTarget, int inSpeed, int maxSpeed, int exitSpeed, int accel, int decel)
{	
	unsigned long startTime = milliseconds;
	
	while(inSpeed + accel*(float)((milliseconds-startTime)/1000.0) < maxSpeed)
     8e4:	6f 89       	ldd	r22, Y+23	; 0x17
     8e6:	78 8d       	ldd	r23, Y+24	; 0x18
     8e8:	89 8d       	ldd	r24, Y+25	; 0x19
     8ea:	9a 8d       	ldd	r25, Y+26	; 0x1a
     8ec:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     8f0:	3b 01       	movw	r6, r22
     8f2:	4c 01       	movw	r8, r24
     8f4:	6b 8d       	ldd	r22, Y+27	; 0x1b
     8f6:	7c 8d       	ldd	r23, Y+28	; 0x1c
     8f8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     8fa:	9e 8d       	ldd	r25, Y+30	; 0x1e
     8fc:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     900:	5b 01       	movw	r10, r22
     902:	6c 01       	movw	r12, r24
     904:	60 91 06 01 	lds	r22, 0x0106
     908:	70 91 07 01 	lds	r23, 0x0107
     90c:	80 91 08 01 	lds	r24, 0x0108
     910:	90 91 09 01 	lds	r25, 0x0109
     914:	2d 81       	ldd	r18, Y+5	; 0x05
     916:	3e 81       	ldd	r19, Y+6	; 0x06
     918:	4f 81       	ldd	r20, Y+7	; 0x07
     91a:	58 85       	ldd	r21, Y+8	; 0x08
     91c:	62 1b       	sub	r22, r18
     91e:	73 0b       	sbc	r23, r19
     920:	84 0b       	sbc	r24, r20
     922:	95 0b       	sbc	r25, r21
     924:	0e 94 ab 0a 	call	0x1556	; 0x1556 <__floatunsisf>
     928:	20 e0       	ldi	r18, 0x00	; 0
     92a:	30 e0       	ldi	r19, 0x00	; 0
     92c:	4a e7       	ldi	r20, 0x7A	; 122
     92e:	54 e4       	ldi	r21, 0x44	; 68
     930:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     934:	9b 01       	movw	r18, r22
     936:	ac 01       	movw	r20, r24
     938:	c6 01       	movw	r24, r12
     93a:	b5 01       	movw	r22, r10
     93c:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     940:	9b 01       	movw	r18, r22
     942:	ac 01       	movw	r20, r24
     944:	c4 01       	movw	r24, r8
     946:	b3 01       	movw	r22, r6
     948:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     94c:	7b 01       	movw	r14, r22
     94e:	8c 01       	movw	r16, r24
     950:	6f 8d       	ldd	r22, Y+31	; 0x1f
     952:	78 a1       	ldd	r23, Y+32	; 0x20
     954:	89 a1       	ldd	r24, Y+33	; 0x21
     956:	9a a1       	ldd	r25, Y+34	; 0x22
     958:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     95c:	9b 01       	movw	r18, r22
     95e:	ac 01       	movw	r20, r24
     960:	c8 01       	movw	r24, r16
     962:	b7 01       	movw	r22, r14
     964:	0e 94 0e 0a 	call	0x141c	; 0x141c <__cmpsf2>
     968:	87 fd       	sbrc	r24, 7
     96a:	fe ce       	rjmp	.-516    	; 0x768 <straight+0xbe>
     96c:	4d 85       	ldd	r20, Y+13	; 0x0d
     96e:	5e 85       	ldd	r21, Y+14	; 0x0e
     970:	5c a7       	std	Y+44, r21	; 0x2c
     972:	4b a7       	std	Y+43, r20	; 0x2b
		}
		_delay_ms(1);
	}	
	
	//Calculate when to start decelerating
	float decelSteps = (float)maxSpeed * (float)maxSpeed / (2.0 * decel) - (float)exitSpeed * (float)exitSpeed / (2.0 * decel);
     974:	ab a5       	ldd	r26, Y+43	; 0x2b
     976:	bc a5       	ldd	r27, Y+44	; 0x2c
     978:	bd 01       	movw	r22, r26
     97a:	88 27       	eor	r24, r24
     97c:	77 fd       	sbrc	r23, 7
     97e:	80 95       	com	r24
     980:	98 2f       	mov	r25, r24
     982:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     986:	1b 01       	movw	r2, r22
     988:	2c 01       	movw	r4, r24
     98a:	e9 89       	ldd	r30, Y+17	; 0x11
     98c:	fa 89       	ldd	r31, Y+18	; 0x12
     98e:	bf 01       	movw	r22, r30
     990:	88 27       	eor	r24, r24
     992:	77 fd       	sbrc	r23, 7
     994:	80 95       	com	r24
     996:	98 2f       	mov	r25, r24
     998:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     99c:	3b 01       	movw	r6, r22
     99e:	4c 01       	movw	r8, r24
     9a0:	2f 85       	ldd	r18, Y+15	; 0x0f
     9a2:	38 89       	ldd	r19, Y+16	; 0x10
     9a4:	b9 01       	movw	r22, r18
     9a6:	88 27       	eor	r24, r24
     9a8:	77 fd       	sbrc	r23, 7
     9aa:	80 95       	com	r24
     9ac:	98 2f       	mov	r25, r24
     9ae:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     9b2:	69 83       	std	Y+1, r22	; 0x01
     9b4:	7a 83       	std	Y+2, r23	; 0x02
     9b6:	8b 83       	std	Y+3, r24	; 0x03
     9b8:	9c 83       	std	Y+4, r25	; 0x04
     9ba:	c2 01       	movw	r24, r4
     9bc:	b1 01       	movw	r22, r2
     9be:	a2 01       	movw	r20, r4
     9c0:	91 01       	movw	r18, r2
     9c2:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     9c6:	7b 01       	movw	r14, r22
     9c8:	8c 01       	movw	r16, r24
     9ca:	c4 01       	movw	r24, r8
     9cc:	b3 01       	movw	r22, r6
     9ce:	a4 01       	movw	r20, r8
     9d0:	93 01       	movw	r18, r6
     9d2:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     9d6:	9b 01       	movw	r18, r22
     9d8:	ac 01       	movw	r20, r24
     9da:	c8 01       	movw	r24, r16
     9dc:	b7 01       	movw	r22, r14
     9de:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     9e2:	5b 01       	movw	r10, r22
     9e4:	6c 01       	movw	r12, r24
     9e6:	69 81       	ldd	r22, Y+1	; 0x01
     9e8:	7a 81       	ldd	r23, Y+2	; 0x02
     9ea:	8b 81       	ldd	r24, Y+3	; 0x03
     9ec:	9c 81       	ldd	r25, Y+4	; 0x04
     9ee:	9b 01       	movw	r18, r22
     9f0:	ac 01       	movw	r20, r24
     9f2:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     9f6:	7b 01       	movw	r14, r22
     9f8:	8c 01       	movw	r16, r24
     9fa:	c4 01       	movw	r24, r8
     9fc:	b3 01       	movw	r22, r6
     9fe:	20 e0       	ldi	r18, 0x00	; 0
     a00:	30 e0       	ldi	r19, 0x00	; 0
     a02:	40 e0       	ldi	r20, 0x00	; 0
     a04:	50 ec       	ldi	r21, 0xC0	; 192
     a06:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     a0a:	9b 01       	movw	r18, r22
     a0c:	ac 01       	movw	r20, r24
     a0e:	c8 01       	movw	r24, r16
     a10:	b7 01       	movw	r22, r14
     a12:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	c6 01       	movw	r24, r12
     a1c:	b5 01       	movw	r22, r10
     a1e:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     a22:	5b 01       	movw	r10, r22
     a24:	6c 01       	movw	r12, r24

	//Decelerate n stuff
	while(leftMotor.stepCount + decelSteps < stepTarget);
     a26:	60 91 22 01 	lds	r22, 0x0122
     a2a:	70 91 23 01 	lds	r23, 0x0123
     a2e:	80 91 24 01 	lds	r24, 0x0124
     a32:	90 91 25 01 	lds	r25, 0x0125
     a36:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     a3a:	a6 01       	movw	r20, r12
     a3c:	95 01       	movw	r18, r10
     a3e:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     a42:	7b 01       	movw	r14, r22
     a44:	8c 01       	movw	r16, r24
     a46:	69 85       	ldd	r22, Y+9	; 0x09
     a48:	7a 85       	ldd	r23, Y+10	; 0x0a
     a4a:	8b 85       	ldd	r24, Y+11	; 0x0b
     a4c:	9c 85       	ldd	r25, Y+12	; 0x0c
     a4e:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     a52:	9b 01       	movw	r18, r22
     a54:	ac 01       	movw	r20, r24
     a56:	c8 01       	movw	r24, r16
     a58:	b7 01       	movw	r22, r14
     a5a:	0e 94 0e 0a 	call	0x141c	; 0x141c <__cmpsf2>
     a5e:	87 fd       	sbrc	r24, 7
     a60:	e2 cf       	rjmp	.-60     	; 0xa26 <straight+0x37c>
	
	startTime = milliseconds;
     a62:	e0 90 06 01 	lds	r14, 0x0106
     a66:	f0 90 07 01 	lds	r15, 0x0107
     a6a:	00 91 08 01 	lds	r16, 0x0108
     a6e:	10 91 09 01 	lds	r17, 0x0109
     a72:	80 ea       	ldi	r24, 0xA0	; 160
     a74:	c8 2e       	mov	r12, r24
     a76:	8f e0       	ldi	r24, 0x0F	; 15
     a78:	d8 2e       	mov	r13, r24
     a7a:	6f c0       	rjmp	.+222    	; 0xb5a <__stack+0x5b>
		
	while(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0) > exitSpeed)
	{
		leftMotor.currentStepDelay =  getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
     a7c:	60 91 06 01 	lds	r22, 0x0106
     a80:	70 91 07 01 	lds	r23, 0x0107
     a84:	80 91 08 01 	lds	r24, 0x0108
     a88:	90 91 09 01 	lds	r25, 0x0109
     a8c:	6e 19       	sub	r22, r14
     a8e:	7f 09       	sbc	r23, r15
     a90:	80 0b       	sbc	r24, r16
     a92:	91 0b       	sbc	r25, r17
     a94:	0e 94 ab 0a 	call	0x1556	; 0x1556 <__floatunsisf>
     a98:	20 e0       	ldi	r18, 0x00	; 0
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	4a e7       	ldi	r20, 0x7A	; 122
     a9e:	54 ec       	ldi	r21, 0xC4	; 196
     aa0:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     aa4:	9b 01       	movw	r18, r22
     aa6:	ac 01       	movw	r20, r24
     aa8:	c4 01       	movw	r24, r8
     aaa:	b3 01       	movw	r22, r6
     aac:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     ab0:	9b 01       	movw	r18, r22
     ab2:	ac 01       	movw	r20, r24
     ab4:	c2 01       	movw	r24, r4
     ab6:	b1 01       	movw	r22, r2
     ab8:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     abc:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__fixsfsi>
     ac0:	dc 01       	movw	r26, r24
     ac2:	cb 01       	movw	r24, r22
     ac4:	0e 94 b5 02 	call	0x56a	; 0x56a <getDelayFromVelocity>
     ac8:	aa 27       	eor	r26, r26
     aca:	97 fd       	sbrc	r25, 7
     acc:	a0 95       	com	r26
     ace:	ba 2f       	mov	r27, r26
     ad0:	bc 01       	movw	r22, r24
     ad2:	cd 01       	movw	r24, r26
     ad4:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     ad8:	60 93 26 01 	sts	0x0126, r22
     adc:	70 93 27 01 	sts	0x0127, r23
     ae0:	80 93 28 01 	sts	0x0128, r24
     ae4:	90 93 29 01 	sts	0x0129, r25
		rightMotor.currentStepDelay = getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
     ae8:	60 91 06 01 	lds	r22, 0x0106
     aec:	70 91 07 01 	lds	r23, 0x0107
     af0:	80 91 08 01 	lds	r24, 0x0108
     af4:	90 91 09 01 	lds	r25, 0x0109
     af8:	6e 19       	sub	r22, r14
     afa:	7f 09       	sbc	r23, r15
     afc:	80 0b       	sbc	r24, r16
     afe:	91 0b       	sbc	r25, r17
     b00:	0e 94 ab 0a 	call	0x1556	; 0x1556 <__floatunsisf>
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	4a e7       	ldi	r20, 0x7A	; 122
     b0a:	54 ec       	ldi	r21, 0xC4	; 196
     b0c:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     b10:	9b 01       	movw	r18, r22
     b12:	ac 01       	movw	r20, r24
     b14:	c4 01       	movw	r24, r8
     b16:	b3 01       	movw	r22, r6
     b18:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     b1c:	9b 01       	movw	r18, r22
     b1e:	ac 01       	movw	r20, r24
     b20:	c2 01       	movw	r24, r4
     b22:	b1 01       	movw	r22, r2
     b24:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     b28:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__fixsfsi>
     b2c:	dc 01       	movw	r26, r24
     b2e:	cb 01       	movw	r24, r22
     b30:	0e 94 b5 02 	call	0x56a	; 0x56a <getDelayFromVelocity>
     b34:	aa 27       	eor	r26, r26
     b36:	97 fd       	sbrc	r25, 7
     b38:	a0 95       	com	r26
     b3a:	ba 2f       	mov	r27, r26
     b3c:	bc 01       	movw	r22, r24
     b3e:	cd 01       	movw	r24, r26
     b40:	0e 94 ad 0a 	call	0x155a	; 0x155a <__floatsisf>
     b44:	60 93 0e 01 	sts	0x010E, r22
     b48:	70 93 0f 01 	sts	0x010F, r23
     b4c:	80 93 10 01 	sts	0x0110, r24
     b50:	90 93 11 01 	sts	0x0111, r25
     b54:	c6 01       	movw	r24, r12
     b56:	01 97       	sbiw	r24, 0x01	; 1
     b58:	f1 f7       	brne	.-4      	; 0xb56 <__stack+0x57>
	//Decelerate n stuff
	while(leftMotor.stepCount + decelSteps < stepTarget);
	
	startTime = milliseconds;
		
	while(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0) > exitSpeed)
     b5a:	60 91 06 01 	lds	r22, 0x0106
     b5e:	70 91 07 01 	lds	r23, 0x0107
     b62:	80 91 08 01 	lds	r24, 0x0108
     b66:	90 91 09 01 	lds	r25, 0x0109
     b6a:	6e 19       	sub	r22, r14
     b6c:	7f 09       	sbc	r23, r15
     b6e:	80 0b       	sbc	r24, r16
     b70:	91 0b       	sbc	r25, r17
     b72:	0e 94 ab 0a 	call	0x1556	; 0x1556 <__floatunsisf>
     b76:	20 e0       	ldi	r18, 0x00	; 0
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	4a e7       	ldi	r20, 0x7A	; 122
     b7c:	54 ec       	ldi	r21, 0xC4	; 196
     b7e:	0e 94 12 0a 	call	0x1424	; 0x1424 <__divsf3>
     b82:	9b 01       	movw	r18, r22
     b84:	ac 01       	movw	r20, r24
     b86:	c4 01       	movw	r24, r8
     b88:	b3 01       	movw	r22, r6
     b8a:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__mulsf3>
     b8e:	9b 01       	movw	r18, r22
     b90:	ac 01       	movw	r20, r24
     b92:	c2 01       	movw	r24, r4
     b94:	b1 01       	movw	r22, r2
     b96:	0e 94 aa 09 	call	0x1354	; 0x1354 <__addsf3>
     b9a:	29 81       	ldd	r18, Y+1	; 0x01
     b9c:	3a 81       	ldd	r19, Y+2	; 0x02
     b9e:	4b 81       	ldd	r20, Y+3	; 0x03
     ba0:	5c 81       	ldd	r21, Y+4	; 0x04
     ba2:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__gesf2>
     ba6:	18 16       	cp	r1, r24
     ba8:	0c f4       	brge	.+2      	; 0xbac <__stack+0xad>
     baa:	68 cf       	rjmp	.-304    	; 0xa7c <straight+0x3d2>
		leftMotor.currentStepDelay =  getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
		rightMotor.currentStepDelay = getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
		_delay_ms(1);
	}
	
}
     bac:	ac 96       	adiw	r28, 0x2c	; 44
     bae:	0f b6       	in	r0, 0x3f	; 63
     bb0:	f8 94       	cli
     bb2:	de bf       	out	0x3e, r29	; 62
     bb4:	0f be       	out	0x3f, r0	; 63
     bb6:	cd bf       	out	0x3d, r28	; 61
     bb8:	cf 91       	pop	r28
     bba:	df 91       	pop	r29
     bbc:	1f 91       	pop	r17
     bbe:	0f 91       	pop	r16
     bc0:	ff 90       	pop	r15
     bc2:	ef 90       	pop	r14
     bc4:	df 90       	pop	r13
     bc6:	cf 90       	pop	r12
     bc8:	bf 90       	pop	r11
     bca:	af 90       	pop	r10
     bcc:	9f 90       	pop	r9
     bce:	8f 90       	pop	r8
     bd0:	7f 90       	pop	r7
     bd2:	6f 90       	pop	r6
     bd4:	5f 90       	pop	r5
     bd6:	4f 90       	pop	r4
     bd8:	3f 90       	pop	r3
     bda:	2f 90       	pop	r2
     bdc:	08 95       	ret

00000bde <inPlaceTurn>:

void inPlaceTurn(int degrees, int maxSpeed, int accel, int decel)
{
     bde:	af 92       	push	r10
     be0:	bf 92       	push	r11
     be2:	cf 92       	push	r12
     be4:	df 92       	push	r13
     be6:	ef 92       	push	r14
     be8:	ff 92       	push	r15
     bea:	0f 93       	push	r16
     bec:	1f 93       	push	r17
     bee:	b8 2e       	mov	r11, r24
     bf0:	a9 2e       	mov	r10, r25
     bf2:	8b 01       	movw	r16, r22
     bf4:	7a 01       	movw	r14, r20
     bf6:	69 01       	movw	r12, r18
	int turningConstant = 10;
	
	setDirection(0, 1);
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	61 e0       	ldi	r22, 0x01	; 1
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	0e 94 61 02 	call	0x4c2	; 0x4c2 <setDirection>
	straight(degrees * turningConstant, 0, maxSpeed, 0, accel, decel);
     c04:	2b 2d       	mov	r18, r11
     c06:	3a 2d       	mov	r19, r10
     c08:	b9 01       	movw	r22, r18
     c0a:	43 e0       	ldi	r20, 0x03	; 3
     c0c:	66 0f       	add	r22, r22
     c0e:	77 1f       	adc	r23, r23
     c10:	4a 95       	dec	r20
     c12:	e1 f7       	brne	.-8      	; 0xc0c <inPlaceTurn+0x2e>
     c14:	22 0f       	add	r18, r18
     c16:	33 1f       	adc	r19, r19
     c18:	62 0f       	add	r22, r18
     c1a:	73 1f       	adc	r23, r19
     c1c:	88 27       	eor	r24, r24
     c1e:	77 fd       	sbrc	r23, 7
     c20:	80 95       	com	r24
     c22:	98 2f       	mov	r25, r24
     c24:	40 e0       	ldi	r20, 0x00	; 0
     c26:	50 e0       	ldi	r21, 0x00	; 0
     c28:	98 01       	movw	r18, r16
     c2a:	00 e0       	ldi	r16, 0x00	; 0
     c2c:	10 e0       	ldi	r17, 0x00	; 0
     c2e:	0e 94 55 03 	call	0x6aa	; 0x6aa <straight>
}
     c32:	1f 91       	pop	r17
     c34:	0f 91       	pop	r16
     c36:	ff 90       	pop	r15
     c38:	ef 90       	pop	r14
     c3a:	df 90       	pop	r13
     c3c:	cf 90       	pop	r12
     c3e:	bf 90       	pop	r11
     c40:	af 90       	pop	r10
     c42:	08 95       	ret

00000c44 <vfprintf>:
     c44:	a1 e1       	ldi	r26, 0x11	; 17
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	e8 e2       	ldi	r30, 0x28	; 40
     c4a:	f6 e0       	ldi	r31, 0x06	; 6
     c4c:	0c 94 df 0b 	jmp	0x17be	; 0x17be <__prologue_saves__>
     c50:	3c 01       	movw	r6, r24
     c52:	7f 87       	std	Y+15, r23	; 0x0f
     c54:	6e 87       	std	Y+14, r22	; 0x0e
     c56:	6a 01       	movw	r12, r20
     c58:	fc 01       	movw	r30, r24
     c5a:	17 82       	std	Z+7, r1	; 0x07
     c5c:	16 82       	std	Z+6, r1	; 0x06
     c5e:	83 81       	ldd	r24, Z+3	; 0x03
     c60:	81 fd       	sbrc	r24, 1
     c62:	03 c0       	rjmp	.+6      	; 0xc6a <vfprintf+0x26>
     c64:	6f ef       	ldi	r22, 0xFF	; 255
     c66:	7f ef       	ldi	r23, 0xFF	; 255
     c68:	6f c3       	rjmp	.+1758   	; 0x1348 <vfprintf+0x704>
     c6a:	9e 01       	movw	r18, r28
     c6c:	2f 5f       	subi	r18, 0xFF	; 255
     c6e:	3f 4f       	sbci	r19, 0xFF	; 255
     c70:	39 8b       	std	Y+17, r19	; 0x11
     c72:	28 8b       	std	Y+16, r18	; 0x10
     c74:	f3 01       	movw	r30, r6
     c76:	23 81       	ldd	r18, Z+3	; 0x03
     c78:	ee 85       	ldd	r30, Y+14	; 0x0e
     c7a:	ff 85       	ldd	r31, Y+15	; 0x0f
     c7c:	23 fd       	sbrc	r18, 3
     c7e:	85 91       	lpm	r24, Z+
     c80:	23 ff       	sbrs	r18, 3
     c82:	81 91       	ld	r24, Z+
     c84:	ff 87       	std	Y+15, r31	; 0x0f
     c86:	ee 87       	std	Y+14, r30	; 0x0e
     c88:	88 23       	and	r24, r24
     c8a:	09 f4       	brne	.+2      	; 0xc8e <vfprintf+0x4a>
     c8c:	5a c3       	rjmp	.+1716   	; 0x1342 <vfprintf+0x6fe>
     c8e:	85 32       	cpi	r24, 0x25	; 37
     c90:	51 f4       	brne	.+20     	; 0xca6 <vfprintf+0x62>
     c92:	ee 85       	ldd	r30, Y+14	; 0x0e
     c94:	ff 85       	ldd	r31, Y+15	; 0x0f
     c96:	23 fd       	sbrc	r18, 3
     c98:	85 91       	lpm	r24, Z+
     c9a:	23 ff       	sbrs	r18, 3
     c9c:	81 91       	ld	r24, Z+
     c9e:	ff 87       	std	Y+15, r31	; 0x0f
     ca0:	ee 87       	std	Y+14, r30	; 0x0e
     ca2:	85 32       	cpi	r24, 0x25	; 37
     ca4:	29 f4       	brne	.+10     	; 0xcb0 <vfprintf+0x6c>
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	b3 01       	movw	r22, r6
     caa:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     cae:	e2 cf       	rjmp	.-60     	; 0xc74 <vfprintf+0x30>
     cb0:	98 2f       	mov	r25, r24
     cb2:	10 e0       	ldi	r17, 0x00	; 0
     cb4:	88 24       	eor	r8, r8
     cb6:	99 24       	eor	r9, r9
     cb8:	10 32       	cpi	r17, 0x20	; 32
     cba:	b0 f4       	brcc	.+44     	; 0xce8 <vfprintf+0xa4>
     cbc:	9b 32       	cpi	r25, 0x2B	; 43
     cbe:	69 f0       	breq	.+26     	; 0xcda <vfprintf+0x96>
     cc0:	9c 32       	cpi	r25, 0x2C	; 44
     cc2:	28 f4       	brcc	.+10     	; 0xcce <vfprintf+0x8a>
     cc4:	90 32       	cpi	r25, 0x20	; 32
     cc6:	51 f0       	breq	.+20     	; 0xcdc <vfprintf+0x98>
     cc8:	93 32       	cpi	r25, 0x23	; 35
     cca:	71 f4       	brne	.+28     	; 0xce8 <vfprintf+0xa4>
     ccc:	0b c0       	rjmp	.+22     	; 0xce4 <vfprintf+0xa0>
     cce:	9d 32       	cpi	r25, 0x2D	; 45
     cd0:	39 f0       	breq	.+14     	; 0xce0 <vfprintf+0x9c>
     cd2:	90 33       	cpi	r25, 0x30	; 48
     cd4:	49 f4       	brne	.+18     	; 0xce8 <vfprintf+0xa4>
     cd6:	11 60       	ori	r17, 0x01	; 1
     cd8:	28 c0       	rjmp	.+80     	; 0xd2a <vfprintf+0xe6>
     cda:	12 60       	ori	r17, 0x02	; 2
     cdc:	14 60       	ori	r17, 0x04	; 4
     cde:	25 c0       	rjmp	.+74     	; 0xd2a <vfprintf+0xe6>
     ce0:	18 60       	ori	r17, 0x08	; 8
     ce2:	23 c0       	rjmp	.+70     	; 0xd2a <vfprintf+0xe6>
     ce4:	10 61       	ori	r17, 0x10	; 16
     ce6:	21 c0       	rjmp	.+66     	; 0xd2a <vfprintf+0xe6>
     ce8:	17 fd       	sbrc	r17, 7
     cea:	2a c0       	rjmp	.+84     	; 0xd40 <vfprintf+0xfc>
     cec:	89 2f       	mov	r24, r25
     cee:	80 53       	subi	r24, 0x30	; 48
     cf0:	8a 30       	cpi	r24, 0x0A	; 10
     cf2:	78 f4       	brcc	.+30     	; 0xd12 <vfprintf+0xce>
     cf4:	16 ff       	sbrs	r17, 6
     cf6:	06 c0       	rjmp	.+12     	; 0xd04 <vfprintf+0xc0>
     cf8:	fa e0       	ldi	r31, 0x0A	; 10
     cfa:	9f 9e       	mul	r9, r31
     cfc:	90 2c       	mov	r9, r0
     cfe:	11 24       	eor	r1, r1
     d00:	98 0e       	add	r9, r24
     d02:	13 c0       	rjmp	.+38     	; 0xd2a <vfprintf+0xe6>
     d04:	3a e0       	ldi	r19, 0x0A	; 10
     d06:	83 9e       	mul	r8, r19
     d08:	80 2c       	mov	r8, r0
     d0a:	11 24       	eor	r1, r1
     d0c:	88 0e       	add	r8, r24
     d0e:	10 62       	ori	r17, 0x20	; 32
     d10:	0c c0       	rjmp	.+24     	; 0xd2a <vfprintf+0xe6>
     d12:	9e 32       	cpi	r25, 0x2E	; 46
     d14:	21 f4       	brne	.+8      	; 0xd1e <vfprintf+0xda>
     d16:	16 fd       	sbrc	r17, 6
     d18:	14 c3       	rjmp	.+1576   	; 0x1342 <vfprintf+0x6fe>
     d1a:	10 64       	ori	r17, 0x40	; 64
     d1c:	06 c0       	rjmp	.+12     	; 0xd2a <vfprintf+0xe6>
     d1e:	9c 36       	cpi	r25, 0x6C	; 108
     d20:	11 f4       	brne	.+4      	; 0xd26 <vfprintf+0xe2>
     d22:	10 68       	ori	r17, 0x80	; 128
     d24:	02 c0       	rjmp	.+4      	; 0xd2a <vfprintf+0xe6>
     d26:	98 36       	cpi	r25, 0x68	; 104
     d28:	59 f4       	brne	.+22     	; 0xd40 <vfprintf+0xfc>
     d2a:	ee 85       	ldd	r30, Y+14	; 0x0e
     d2c:	ff 85       	ldd	r31, Y+15	; 0x0f
     d2e:	23 fd       	sbrc	r18, 3
     d30:	95 91       	lpm	r25, Z+
     d32:	23 ff       	sbrs	r18, 3
     d34:	91 91       	ld	r25, Z+
     d36:	ff 87       	std	Y+15, r31	; 0x0f
     d38:	ee 87       	std	Y+14, r30	; 0x0e
     d3a:	99 23       	and	r25, r25
     d3c:	09 f0       	breq	.+2      	; 0xd40 <vfprintf+0xfc>
     d3e:	bc cf       	rjmp	.-136    	; 0xcb8 <vfprintf+0x74>
     d40:	89 2f       	mov	r24, r25
     d42:	85 54       	subi	r24, 0x45	; 69
     d44:	83 30       	cpi	r24, 0x03	; 3
     d46:	20 f4       	brcc	.+8      	; 0xd50 <vfprintf+0x10c>
     d48:	81 2f       	mov	r24, r17
     d4a:	80 61       	ori	r24, 0x10	; 16
     d4c:	90 5e       	subi	r25, 0xE0	; 224
     d4e:	07 c0       	rjmp	.+14     	; 0xd5e <vfprintf+0x11a>
     d50:	89 2f       	mov	r24, r25
     d52:	85 56       	subi	r24, 0x65	; 101
     d54:	83 30       	cpi	r24, 0x03	; 3
     d56:	08 f0       	brcs	.+2      	; 0xd5a <vfprintf+0x116>
     d58:	9f c1       	rjmp	.+830    	; 0x1098 <vfprintf+0x454>
     d5a:	81 2f       	mov	r24, r17
     d5c:	8f 7e       	andi	r24, 0xEF	; 239
     d5e:	86 fd       	sbrc	r24, 6
     d60:	02 c0       	rjmp	.+4      	; 0xd66 <vfprintf+0x122>
     d62:	76 e0       	ldi	r23, 0x06	; 6
     d64:	97 2e       	mov	r9, r23
     d66:	6f e3       	ldi	r22, 0x3F	; 63
     d68:	f6 2e       	mov	r15, r22
     d6a:	f8 22       	and	r15, r24
     d6c:	95 36       	cpi	r25, 0x65	; 101
     d6e:	19 f4       	brne	.+6      	; 0xd76 <vfprintf+0x132>
     d70:	f0 e4       	ldi	r31, 0x40	; 64
     d72:	ff 2a       	or	r15, r31
     d74:	07 c0       	rjmp	.+14     	; 0xd84 <vfprintf+0x140>
     d76:	96 36       	cpi	r25, 0x66	; 102
     d78:	19 f4       	brne	.+6      	; 0xd80 <vfprintf+0x13c>
     d7a:	20 e8       	ldi	r18, 0x80	; 128
     d7c:	f2 2a       	or	r15, r18
     d7e:	02 c0       	rjmp	.+4      	; 0xd84 <vfprintf+0x140>
     d80:	91 10       	cpse	r9, r1
     d82:	9a 94       	dec	r9
     d84:	f7 fe       	sbrs	r15, 7
     d86:	0a c0       	rjmp	.+20     	; 0xd9c <vfprintf+0x158>
     d88:	3b e3       	ldi	r19, 0x3B	; 59
     d8a:	39 15       	cp	r19, r9
     d8c:	18 f4       	brcc	.+6      	; 0xd94 <vfprintf+0x150>
     d8e:	5c e3       	ldi	r21, 0x3C	; 60
     d90:	b5 2e       	mov	r11, r21
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <vfprintf+0x154>
     d94:	b9 2c       	mov	r11, r9
     d96:	b3 94       	inc	r11
     d98:	27 e0       	ldi	r18, 0x07	; 7
     d9a:	09 c0       	rjmp	.+18     	; 0xdae <vfprintf+0x16a>
     d9c:	47 e0       	ldi	r20, 0x07	; 7
     d9e:	49 15       	cp	r20, r9
     da0:	20 f4       	brcc	.+8      	; 0xdaa <vfprintf+0x166>
     da2:	bb 24       	eor	r11, r11
     da4:	47 e0       	ldi	r20, 0x07	; 7
     da6:	94 2e       	mov	r9, r20
     da8:	f7 cf       	rjmp	.-18     	; 0xd98 <vfprintf+0x154>
     daa:	29 2d       	mov	r18, r9
     dac:	bb 24       	eor	r11, r11
     dae:	c6 01       	movw	r24, r12
     db0:	04 96       	adiw	r24, 0x04	; 4
     db2:	9d 87       	std	Y+13, r25	; 0x0d
     db4:	8c 87       	std	Y+12, r24	; 0x0c
     db6:	f6 01       	movw	r30, r12
     db8:	60 81       	ld	r22, Z
     dba:	71 81       	ldd	r23, Z+1	; 0x01
     dbc:	82 81       	ldd	r24, Z+2	; 0x02
     dbe:	93 81       	ldd	r25, Z+3	; 0x03
     dc0:	ae 01       	movw	r20, r28
     dc2:	4f 5f       	subi	r20, 0xFF	; 255
     dc4:	5f 4f       	sbci	r21, 0xFF	; 255
     dc6:	0b 2d       	mov	r16, r11
     dc8:	0e 94 38 0c 	call	0x1870	; 0x1870 <__ftoa_engine>
     dcc:	6c 01       	movw	r12, r24
     dce:	09 81       	ldd	r16, Y+1	; 0x01
     dd0:	20 2e       	mov	r2, r16
     dd2:	33 24       	eor	r3, r3
     dd4:	00 ff       	sbrs	r16, 0
     dd6:	04 c0       	rjmp	.+8      	; 0xde0 <vfprintf+0x19c>
     dd8:	03 fd       	sbrc	r16, 3
     dda:	02 c0       	rjmp	.+4      	; 0xde0 <vfprintf+0x19c>
     ddc:	1d e2       	ldi	r17, 0x2D	; 45
     dde:	09 c0       	rjmp	.+18     	; 0xdf2 <vfprintf+0x1ae>
     de0:	f1 fe       	sbrs	r15, 1
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <vfprintf+0x1a4>
     de4:	1b e2       	ldi	r17, 0x2B	; 43
     de6:	05 c0       	rjmp	.+10     	; 0xdf2 <vfprintf+0x1ae>
     de8:	f2 fc       	sbrc	r15, 2
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <vfprintf+0x1ac>
     dec:	10 e0       	ldi	r17, 0x00	; 0
     dee:	01 c0       	rjmp	.+2      	; 0xdf2 <vfprintf+0x1ae>
     df0:	10 e2       	ldi	r17, 0x20	; 32
     df2:	c1 01       	movw	r24, r2
     df4:	8c 70       	andi	r24, 0x0C	; 12
     df6:	90 70       	andi	r25, 0x00	; 0
     df8:	89 2b       	or	r24, r25
     dfa:	b9 f1       	breq	.+110    	; 0xe6a <vfprintf+0x226>
     dfc:	11 23       	and	r17, r17
     dfe:	11 f4       	brne	.+4      	; 0xe04 <vfprintf+0x1c0>
     e00:	83 e0       	ldi	r24, 0x03	; 3
     e02:	01 c0       	rjmp	.+2      	; 0xe06 <vfprintf+0x1c2>
     e04:	84 e0       	ldi	r24, 0x04	; 4
     e06:	88 15       	cp	r24, r8
     e08:	10 f0       	brcs	.+4      	; 0xe0e <vfprintf+0x1ca>
     e0a:	88 24       	eor	r8, r8
     e0c:	0a c0       	rjmp	.+20     	; 0xe22 <vfprintf+0x1de>
     e0e:	88 1a       	sub	r8, r24
     e10:	f3 fc       	sbrc	r15, 3
     e12:	07 c0       	rjmp	.+14     	; 0xe22 <vfprintf+0x1de>
     e14:	80 e2       	ldi	r24, 0x20	; 32
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	b3 01       	movw	r22, r6
     e1a:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     e1e:	8a 94       	dec	r8
     e20:	c9 f7       	brne	.-14     	; 0xe14 <vfprintf+0x1d0>
     e22:	11 23       	and	r17, r17
     e24:	29 f0       	breq	.+10     	; 0xe30 <vfprintf+0x1ec>
     e26:	81 2f       	mov	r24, r17
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	b3 01       	movw	r22, r6
     e2c:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     e30:	23 fe       	sbrs	r2, 3
     e32:	03 c0       	rjmp	.+6      	; 0xe3a <vfprintf+0x1f6>
     e34:	0c ea       	ldi	r16, 0xAC	; 172
     e36:	10 e0       	ldi	r17, 0x00	; 0
     e38:	0e c0       	rjmp	.+28     	; 0xe56 <vfprintf+0x212>
     e3a:	00 eb       	ldi	r16, 0xB0	; 176
     e3c:	10 e0       	ldi	r17, 0x00	; 0
     e3e:	0b c0       	rjmp	.+22     	; 0xe56 <vfprintf+0x212>
     e40:	e1 14       	cp	r14, r1
     e42:	f1 04       	cpc	r15, r1
     e44:	09 f0       	breq	.+2      	; 0xe48 <vfprintf+0x204>
     e46:	80 52       	subi	r24, 0x20	; 32
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	b3 01       	movw	r22, r6
     e4c:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     e50:	0f 5f       	subi	r16, 0xFF	; 255
     e52:	1f 4f       	sbci	r17, 0xFF	; 255
     e54:	05 c0       	rjmp	.+10     	; 0xe60 <vfprintf+0x21c>
     e56:	ef 2c       	mov	r14, r15
     e58:	ff 24       	eor	r15, r15
     e5a:	f0 e1       	ldi	r31, 0x10	; 16
     e5c:	ef 22       	and	r14, r31
     e5e:	ff 24       	eor	r15, r15
     e60:	f8 01       	movw	r30, r16
     e62:	84 91       	lpm	r24, Z+
     e64:	88 23       	and	r24, r24
     e66:	61 f7       	brne	.-40     	; 0xe40 <vfprintf+0x1fc>
     e68:	14 c1       	rjmp	.+552    	; 0x1092 <vfprintf+0x44e>
     e6a:	f7 fe       	sbrs	r15, 7
     e6c:	12 c0       	rjmp	.+36     	; 0xe92 <vfprintf+0x24e>
     e6e:	bc 0c       	add	r11, r12
     e70:	24 fe       	sbrs	r2, 4
     e72:	04 c0       	rjmp	.+8      	; 0xe7c <vfprintf+0x238>
     e74:	8a 81       	ldd	r24, Y+2	; 0x02
     e76:	81 33       	cpi	r24, 0x31	; 49
     e78:	09 f4       	brne	.+2      	; 0xe7c <vfprintf+0x238>
     e7a:	ba 94       	dec	r11
     e7c:	1b 14       	cp	r1, r11
     e7e:	1c f0       	brlt	.+6      	; 0xe86 <vfprintf+0x242>
     e80:	bb 24       	eor	r11, r11
     e82:	b3 94       	inc	r11
     e84:	2d c0       	rjmp	.+90     	; 0xee0 <vfprintf+0x29c>
     e86:	f8 e0       	ldi	r31, 0x08	; 8
     e88:	fb 15       	cp	r31, r11
     e8a:	50 f5       	brcc	.+84     	; 0xee0 <vfprintf+0x29c>
     e8c:	38 e0       	ldi	r19, 0x08	; 8
     e8e:	b3 2e       	mov	r11, r19
     e90:	27 c0       	rjmp	.+78     	; 0xee0 <vfprintf+0x29c>
     e92:	f6 fc       	sbrc	r15, 6
     e94:	25 c0       	rjmp	.+74     	; 0xee0 <vfprintf+0x29c>
     e96:	89 2d       	mov	r24, r9
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	8c 15       	cp	r24, r12
     e9c:	9d 05       	cpc	r25, r13
     e9e:	4c f0       	brlt	.+18     	; 0xeb2 <vfprintf+0x26e>
     ea0:	2c ef       	ldi	r18, 0xFC	; 252
     ea2:	c2 16       	cp	r12, r18
     ea4:	2f ef       	ldi	r18, 0xFF	; 255
     ea6:	d2 06       	cpc	r13, r18
     ea8:	24 f0       	brlt	.+8      	; 0xeb2 <vfprintf+0x26e>
     eaa:	30 e8       	ldi	r19, 0x80	; 128
     eac:	f3 2a       	or	r15, r19
     eae:	01 c0       	rjmp	.+2      	; 0xeb2 <vfprintf+0x26e>
     eb0:	9a 94       	dec	r9
     eb2:	99 20       	and	r9, r9
     eb4:	49 f0       	breq	.+18     	; 0xec8 <vfprintf+0x284>
     eb6:	e2 e0       	ldi	r30, 0x02	; 2
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	ec 0f       	add	r30, r28
     ebc:	fd 1f       	adc	r31, r29
     ebe:	e9 0d       	add	r30, r9
     ec0:	f1 1d       	adc	r31, r1
     ec2:	80 81       	ld	r24, Z
     ec4:	80 33       	cpi	r24, 0x30	; 48
     ec6:	a1 f3       	breq	.-24     	; 0xeb0 <vfprintf+0x26c>
     ec8:	f7 fe       	sbrs	r15, 7
     eca:	0a c0       	rjmp	.+20     	; 0xee0 <vfprintf+0x29c>
     ecc:	b9 2c       	mov	r11, r9
     ece:	b3 94       	inc	r11
     ed0:	89 2d       	mov	r24, r9
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	c8 16       	cp	r12, r24
     ed6:	d9 06       	cpc	r13, r25
     ed8:	14 f0       	brlt	.+4      	; 0xede <vfprintf+0x29a>
     eda:	99 24       	eor	r9, r9
     edc:	01 c0       	rjmp	.+2      	; 0xee0 <vfprintf+0x29c>
     ede:	9c 18       	sub	r9, r12
     ee0:	f7 fc       	sbrc	r15, 7
     ee2:	03 c0       	rjmp	.+6      	; 0xeea <vfprintf+0x2a6>
     ee4:	25 e0       	ldi	r18, 0x05	; 5
     ee6:	30 e0       	ldi	r19, 0x00	; 0
     ee8:	09 c0       	rjmp	.+18     	; 0xefc <vfprintf+0x2b8>
     eea:	1c 14       	cp	r1, r12
     eec:	1d 04       	cpc	r1, r13
     eee:	1c f0       	brlt	.+6      	; 0xef6 <vfprintf+0x2b2>
     ef0:	21 e0       	ldi	r18, 0x01	; 1
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <vfprintf+0x2b8>
     ef6:	96 01       	movw	r18, r12
     ef8:	2f 5f       	subi	r18, 0xFF	; 255
     efa:	3f 4f       	sbci	r19, 0xFF	; 255
     efc:	11 23       	and	r17, r17
     efe:	11 f0       	breq	.+4      	; 0xf04 <vfprintf+0x2c0>
     f00:	2f 5f       	subi	r18, 0xFF	; 255
     f02:	3f 4f       	sbci	r19, 0xFF	; 255
     f04:	99 20       	and	r9, r9
     f06:	29 f0       	breq	.+10     	; 0xf12 <vfprintf+0x2ce>
     f08:	89 2d       	mov	r24, r9
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	01 96       	adiw	r24, 0x01	; 1
     f0e:	28 0f       	add	r18, r24
     f10:	39 1f       	adc	r19, r25
     f12:	88 2d       	mov	r24, r8
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	28 17       	cp	r18, r24
     f18:	39 07       	cpc	r19, r25
     f1a:	14 f0       	brlt	.+4      	; 0xf20 <vfprintf+0x2dc>
     f1c:	88 24       	eor	r8, r8
     f1e:	01 c0       	rjmp	.+2      	; 0xf22 <vfprintf+0x2de>
     f20:	82 1a       	sub	r8, r18
     f22:	4f 2c       	mov	r4, r15
     f24:	55 24       	eor	r5, r5
     f26:	c2 01       	movw	r24, r4
     f28:	89 70       	andi	r24, 0x09	; 9
     f2a:	90 70       	andi	r25, 0x00	; 0
     f2c:	89 2b       	or	r24, r25
     f2e:	39 f0       	breq	.+14     	; 0xf3e <vfprintf+0x2fa>
     f30:	08 c0       	rjmp	.+16     	; 0xf42 <vfprintf+0x2fe>
     f32:	80 e2       	ldi	r24, 0x20	; 32
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	b3 01       	movw	r22, r6
     f38:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     f3c:	8a 94       	dec	r8
     f3e:	88 20       	and	r8, r8
     f40:	c1 f7       	brne	.-16     	; 0xf32 <vfprintf+0x2ee>
     f42:	11 23       	and	r17, r17
     f44:	29 f0       	breq	.+10     	; 0xf50 <vfprintf+0x30c>
     f46:	81 2f       	mov	r24, r17
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	b3 01       	movw	r22, r6
     f4c:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     f50:	43 fe       	sbrs	r4, 3
     f52:	07 c0       	rjmp	.+14     	; 0xf62 <vfprintf+0x31e>
     f54:	08 c0       	rjmp	.+16     	; 0xf66 <vfprintf+0x322>
     f56:	80 e3       	ldi	r24, 0x30	; 48
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	b3 01       	movw	r22, r6
     f5c:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     f60:	8a 94       	dec	r8
     f62:	88 20       	and	r8, r8
     f64:	c1 f7       	brne	.-16     	; 0xf56 <vfprintf+0x312>
     f66:	f7 fe       	sbrs	r15, 7
     f68:	46 c0       	rjmp	.+140    	; 0xff6 <vfprintf+0x3b2>
     f6a:	86 01       	movw	r16, r12
     f6c:	d7 fe       	sbrs	r13, 7
     f6e:	02 c0       	rjmp	.+4      	; 0xf74 <vfprintf+0x330>
     f70:	00 e0       	ldi	r16, 0x00	; 0
     f72:	10 e0       	ldi	r17, 0x00	; 0
     f74:	76 01       	movw	r14, r12
     f76:	08 94       	sec
     f78:	e1 1c       	adc	r14, r1
     f7a:	f1 1c       	adc	r15, r1
     f7c:	e0 1a       	sub	r14, r16
     f7e:	f1 0a       	sbc	r15, r17
     f80:	41 e0       	ldi	r20, 0x01	; 1
     f82:	50 e0       	ldi	r21, 0x00	; 0
     f84:	4c 0f       	add	r20, r28
     f86:	5d 1f       	adc	r21, r29
     f88:	e4 0e       	add	r14, r20
     f8a:	f5 1e       	adc	r15, r21
     f8c:	26 01       	movw	r4, r12
     f8e:	4b 18       	sub	r4, r11
     f90:	51 08       	sbc	r5, r1
     f92:	89 2d       	mov	r24, r9
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	aa 24       	eor	r10, r10
     f98:	bb 24       	eor	r11, r11
     f9a:	a8 1a       	sub	r10, r24
     f9c:	b9 0a       	sbc	r11, r25
     f9e:	5f ef       	ldi	r21, 0xFF	; 255
     fa0:	0f 3f       	cpi	r16, 0xFF	; 255
     fa2:	15 07       	cpc	r17, r21
     fa4:	29 f4       	brne	.+10     	; 0xfb0 <vfprintf+0x36c>
     fa6:	8e e2       	ldi	r24, 0x2E	; 46
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	b3 01       	movw	r22, r6
     fac:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     fb0:	c0 16       	cp	r12, r16
     fb2:	d1 06       	cpc	r13, r17
     fb4:	34 f0       	brlt	.+12     	; 0xfc2 <vfprintf+0x37e>
     fb6:	40 16       	cp	r4, r16
     fb8:	51 06       	cpc	r5, r17
     fba:	1c f4       	brge	.+6      	; 0xfc2 <vfprintf+0x37e>
     fbc:	f7 01       	movw	r30, r14
     fbe:	80 81       	ld	r24, Z
     fc0:	01 c0       	rjmp	.+2      	; 0xfc4 <vfprintf+0x380>
     fc2:	80 e3       	ldi	r24, 0x30	; 48
     fc4:	01 50       	subi	r16, 0x01	; 1
     fc6:	10 40       	sbci	r17, 0x00	; 0
     fc8:	08 94       	sec
     fca:	e1 1c       	adc	r14, r1
     fcc:	f1 1c       	adc	r15, r1
     fce:	0a 15       	cp	r16, r10
     fd0:	1b 05       	cpc	r17, r11
     fd2:	2c f0       	brlt	.+10     	; 0xfde <vfprintf+0x39a>
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	b3 01       	movw	r22, r6
     fd8:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
     fdc:	e0 cf       	rjmp	.-64     	; 0xf9e <vfprintf+0x35a>
     fde:	0c 15       	cp	r16, r12
     fe0:	1d 05       	cpc	r17, r13
     fe2:	39 f4       	brne	.+14     	; 0xff2 <vfprintf+0x3ae>
     fe4:	9a 81       	ldd	r25, Y+2	; 0x02
     fe6:	96 33       	cpi	r25, 0x36	; 54
     fe8:	18 f4       	brcc	.+6      	; 0xff0 <vfprintf+0x3ac>
     fea:	95 33       	cpi	r25, 0x35	; 53
     fec:	11 f4       	brne	.+4      	; 0xff2 <vfprintf+0x3ae>
     fee:	24 fe       	sbrs	r2, 4
     ff0:	81 e3       	ldi	r24, 0x31	; 49
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	4b c0       	rjmp	.+150    	; 0x108c <vfprintf+0x448>
     ff6:	8a 81       	ldd	r24, Y+2	; 0x02
     ff8:	81 33       	cpi	r24, 0x31	; 49
     ffa:	09 f0       	breq	.+2      	; 0xffe <vfprintf+0x3ba>
     ffc:	0f 7e       	andi	r16, 0xEF	; 239
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	b3 01       	movw	r22, r6
    1002:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1006:	99 20       	and	r9, r9
    1008:	a1 f0       	breq	.+40     	; 0x1032 <vfprintf+0x3ee>
    100a:	8e e2       	ldi	r24, 0x2E	; 46
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	b3 01       	movw	r22, r6
    1010:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1014:	12 e0       	ldi	r17, 0x02	; 2
    1016:	e1 e0       	ldi	r30, 0x01	; 1
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	ec 0f       	add	r30, r28
    101c:	fd 1f       	adc	r31, r29
    101e:	e1 0f       	add	r30, r17
    1020:	f1 1d       	adc	r31, r1
    1022:	1f 5f       	subi	r17, 0xFF	; 255
    1024:	80 81       	ld	r24, Z
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	b3 01       	movw	r22, r6
    102a:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    102e:	9a 94       	dec	r9
    1030:	91 f7       	brne	.-28     	; 0x1016 <vfprintf+0x3d2>
    1032:	44 fc       	sbrc	r4, 4
    1034:	03 c0       	rjmp	.+6      	; 0x103c <vfprintf+0x3f8>
    1036:	85 e6       	ldi	r24, 0x65	; 101
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <vfprintf+0x3fc>
    103c:	85 e4       	ldi	r24, 0x45	; 69
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	b3 01       	movw	r22, r6
    1042:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1046:	d7 fc       	sbrc	r13, 7
    1048:	05 c0       	rjmp	.+10     	; 0x1054 <vfprintf+0x410>
    104a:	c1 14       	cp	r12, r1
    104c:	d1 04       	cpc	r13, r1
    104e:	41 f4       	brne	.+16     	; 0x1060 <vfprintf+0x41c>
    1050:	04 ff       	sbrs	r16, 4
    1052:	06 c0       	rjmp	.+12     	; 0x1060 <vfprintf+0x41c>
    1054:	d0 94       	com	r13
    1056:	c1 94       	neg	r12
    1058:	d1 08       	sbc	r13, r1
    105a:	d3 94       	inc	r13
    105c:	8d e2       	ldi	r24, 0x2D	; 45
    105e:	01 c0       	rjmp	.+2      	; 0x1062 <vfprintf+0x41e>
    1060:	8b e2       	ldi	r24, 0x2B	; 43
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	b3 01       	movw	r22, r6
    1066:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    106a:	80 e3       	ldi	r24, 0x30	; 48
    106c:	05 c0       	rjmp	.+10     	; 0x1078 <vfprintf+0x434>
    106e:	8f 5f       	subi	r24, 0xFF	; 255
    1070:	26 ef       	ldi	r18, 0xF6	; 246
    1072:	3f ef       	ldi	r19, 0xFF	; 255
    1074:	c2 0e       	add	r12, r18
    1076:	d3 1e       	adc	r13, r19
    1078:	3a e0       	ldi	r19, 0x0A	; 10
    107a:	c3 16       	cp	r12, r19
    107c:	d1 04       	cpc	r13, r1
    107e:	bc f7       	brge	.-18     	; 0x106e <vfprintf+0x42a>
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	b3 01       	movw	r22, r6
    1084:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1088:	c6 01       	movw	r24, r12
    108a:	c0 96       	adiw	r24, 0x30	; 48
    108c:	b3 01       	movw	r22, r6
    108e:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1092:	cc 84       	ldd	r12, Y+12	; 0x0c
    1094:	dd 84       	ldd	r13, Y+13	; 0x0d
    1096:	52 c1       	rjmp	.+676    	; 0x133c <vfprintf+0x6f8>
    1098:	93 36       	cpi	r25, 0x63	; 99
    109a:	31 f0       	breq	.+12     	; 0x10a8 <vfprintf+0x464>
    109c:	93 37       	cpi	r25, 0x73	; 115
    109e:	99 f0       	breq	.+38     	; 0x10c6 <vfprintf+0x482>
    10a0:	93 35       	cpi	r25, 0x53	; 83
    10a2:	09 f0       	breq	.+2      	; 0x10a6 <vfprintf+0x462>
    10a4:	59 c0       	rjmp	.+178    	; 0x1158 <vfprintf+0x514>
    10a6:	23 c0       	rjmp	.+70     	; 0x10ee <vfprintf+0x4aa>
    10a8:	f6 01       	movw	r30, r12
    10aa:	80 81       	ld	r24, Z
    10ac:	89 83       	std	Y+1, r24	; 0x01
    10ae:	5e 01       	movw	r10, r28
    10b0:	08 94       	sec
    10b2:	a1 1c       	adc	r10, r1
    10b4:	b1 1c       	adc	r11, r1
    10b6:	22 e0       	ldi	r18, 0x02	; 2
    10b8:	30 e0       	ldi	r19, 0x00	; 0
    10ba:	c2 0e       	add	r12, r18
    10bc:	d3 1e       	adc	r13, r19
    10be:	21 e0       	ldi	r18, 0x01	; 1
    10c0:	e2 2e       	mov	r14, r18
    10c2:	f1 2c       	mov	r15, r1
    10c4:	12 c0       	rjmp	.+36     	; 0x10ea <vfprintf+0x4a6>
    10c6:	f6 01       	movw	r30, r12
    10c8:	a0 80       	ld	r10, Z
    10ca:	b1 80       	ldd	r11, Z+1	; 0x01
    10cc:	16 fd       	sbrc	r17, 6
    10ce:	03 c0       	rjmp	.+6      	; 0x10d6 <vfprintf+0x492>
    10d0:	6f ef       	ldi	r22, 0xFF	; 255
    10d2:	7f ef       	ldi	r23, 0xFF	; 255
    10d4:	02 c0       	rjmp	.+4      	; 0x10da <vfprintf+0x496>
    10d6:	69 2d       	mov	r22, r9
    10d8:	70 e0       	ldi	r23, 0x00	; 0
    10da:	22 e0       	ldi	r18, 0x02	; 2
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	c2 0e       	add	r12, r18
    10e0:	d3 1e       	adc	r13, r19
    10e2:	c5 01       	movw	r24, r10
    10e4:	0e 94 1b 0d 	call	0x1a36	; 0x1a36 <strnlen>
    10e8:	7c 01       	movw	r14, r24
    10ea:	1f 77       	andi	r17, 0x7F	; 127
    10ec:	13 c0       	rjmp	.+38     	; 0x1114 <vfprintf+0x4d0>
    10ee:	f6 01       	movw	r30, r12
    10f0:	a0 80       	ld	r10, Z
    10f2:	b1 80       	ldd	r11, Z+1	; 0x01
    10f4:	16 fd       	sbrc	r17, 6
    10f6:	03 c0       	rjmp	.+6      	; 0x10fe <vfprintf+0x4ba>
    10f8:	6f ef       	ldi	r22, 0xFF	; 255
    10fa:	7f ef       	ldi	r23, 0xFF	; 255
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <vfprintf+0x4be>
    10fe:	69 2d       	mov	r22, r9
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	22 e0       	ldi	r18, 0x02	; 2
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	c2 0e       	add	r12, r18
    1108:	d3 1e       	adc	r13, r19
    110a:	c5 01       	movw	r24, r10
    110c:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <strnlen_P>
    1110:	7c 01       	movw	r14, r24
    1112:	10 68       	ori	r17, 0x80	; 128
    1114:	13 ff       	sbrs	r17, 3
    1116:	07 c0       	rjmp	.+14     	; 0x1126 <vfprintf+0x4e2>
    1118:	1b c0       	rjmp	.+54     	; 0x1150 <vfprintf+0x50c>
    111a:	80 e2       	ldi	r24, 0x20	; 32
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	b3 01       	movw	r22, r6
    1120:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1124:	8a 94       	dec	r8
    1126:	88 2d       	mov	r24, r8
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	e8 16       	cp	r14, r24
    112c:	f9 06       	cpc	r15, r25
    112e:	a8 f3       	brcs	.-22     	; 0x111a <vfprintf+0x4d6>
    1130:	0f c0       	rjmp	.+30     	; 0x1150 <vfprintf+0x50c>
    1132:	f5 01       	movw	r30, r10
    1134:	17 fd       	sbrc	r17, 7
    1136:	85 91       	lpm	r24, Z+
    1138:	17 ff       	sbrs	r17, 7
    113a:	81 91       	ld	r24, Z+
    113c:	5f 01       	movw	r10, r30
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	b3 01       	movw	r22, r6
    1142:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1146:	81 10       	cpse	r8, r1
    1148:	8a 94       	dec	r8
    114a:	08 94       	sec
    114c:	e1 08       	sbc	r14, r1
    114e:	f1 08       	sbc	r15, r1
    1150:	e1 14       	cp	r14, r1
    1152:	f1 04       	cpc	r15, r1
    1154:	71 f7       	brne	.-36     	; 0x1132 <vfprintf+0x4ee>
    1156:	f2 c0       	rjmp	.+484    	; 0x133c <vfprintf+0x6f8>
    1158:	94 36       	cpi	r25, 0x64	; 100
    115a:	11 f0       	breq	.+4      	; 0x1160 <vfprintf+0x51c>
    115c:	99 36       	cpi	r25, 0x69	; 105
    115e:	89 f5       	brne	.+98     	; 0x11c2 <vfprintf+0x57e>
    1160:	17 ff       	sbrs	r17, 7
    1162:	08 c0       	rjmp	.+16     	; 0x1174 <vfprintf+0x530>
    1164:	f6 01       	movw	r30, r12
    1166:	20 81       	ld	r18, Z
    1168:	31 81       	ldd	r19, Z+1	; 0x01
    116a:	42 81       	ldd	r20, Z+2	; 0x02
    116c:	53 81       	ldd	r21, Z+3	; 0x03
    116e:	84 e0       	ldi	r24, 0x04	; 4
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	0a c0       	rjmp	.+20     	; 0x1188 <vfprintf+0x544>
    1174:	f6 01       	movw	r30, r12
    1176:	80 81       	ld	r24, Z
    1178:	91 81       	ldd	r25, Z+1	; 0x01
    117a:	9c 01       	movw	r18, r24
    117c:	44 27       	eor	r20, r20
    117e:	37 fd       	sbrc	r19, 7
    1180:	40 95       	com	r20
    1182:	54 2f       	mov	r21, r20
    1184:	82 e0       	ldi	r24, 0x02	; 2
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	c8 0e       	add	r12, r24
    118a:	d9 1e       	adc	r13, r25
    118c:	9f e6       	ldi	r25, 0x6F	; 111
    118e:	f9 2e       	mov	r15, r25
    1190:	f1 22       	and	r15, r17
    1192:	57 ff       	sbrs	r21, 7
    1194:	09 c0       	rjmp	.+18     	; 0x11a8 <vfprintf+0x564>
    1196:	50 95       	com	r21
    1198:	40 95       	com	r20
    119a:	30 95       	com	r19
    119c:	21 95       	neg	r18
    119e:	3f 4f       	sbci	r19, 0xFF	; 255
    11a0:	4f 4f       	sbci	r20, 0xFF	; 255
    11a2:	5f 4f       	sbci	r21, 0xFF	; 255
    11a4:	90 e8       	ldi	r25, 0x80	; 128
    11a6:	f9 2a       	or	r15, r25
    11a8:	ca 01       	movw	r24, r20
    11aa:	b9 01       	movw	r22, r18
    11ac:	ae 01       	movw	r20, r28
    11ae:	4f 5f       	subi	r20, 0xFF	; 255
    11b0:	5f 4f       	sbci	r21, 0xFF	; 255
    11b2:	2a e0       	ldi	r18, 0x0A	; 10
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	0e 94 76 0d 	call	0x1aec	; 0x1aec <__ultoa_invert>
    11ba:	e8 2e       	mov	r14, r24
    11bc:	e8 89       	ldd	r30, Y+16	; 0x10
    11be:	ee 1a       	sub	r14, r30
    11c0:	41 c0       	rjmp	.+130    	; 0x1244 <vfprintf+0x600>
    11c2:	95 37       	cpi	r25, 0x75	; 117
    11c4:	21 f4       	brne	.+8      	; 0x11ce <vfprintf+0x58a>
    11c6:	1f 7e       	andi	r17, 0xEF	; 239
    11c8:	2a e0       	ldi	r18, 0x0A	; 10
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	1c c0       	rjmp	.+56     	; 0x1206 <vfprintf+0x5c2>
    11ce:	19 7f       	andi	r17, 0xF9	; 249
    11d0:	9f 36       	cpi	r25, 0x6F	; 111
    11d2:	61 f0       	breq	.+24     	; 0x11ec <vfprintf+0x5a8>
    11d4:	90 37       	cpi	r25, 0x70	; 112
    11d6:	20 f4       	brcc	.+8      	; 0x11e0 <vfprintf+0x59c>
    11d8:	98 35       	cpi	r25, 0x58	; 88
    11da:	09 f0       	breq	.+2      	; 0x11de <vfprintf+0x59a>
    11dc:	b2 c0       	rjmp	.+356    	; 0x1342 <vfprintf+0x6fe>
    11de:	0f c0       	rjmp	.+30     	; 0x11fe <vfprintf+0x5ba>
    11e0:	90 37       	cpi	r25, 0x70	; 112
    11e2:	39 f0       	breq	.+14     	; 0x11f2 <vfprintf+0x5ae>
    11e4:	98 37       	cpi	r25, 0x78	; 120
    11e6:	09 f0       	breq	.+2      	; 0x11ea <vfprintf+0x5a6>
    11e8:	ac c0       	rjmp	.+344    	; 0x1342 <vfprintf+0x6fe>
    11ea:	04 c0       	rjmp	.+8      	; 0x11f4 <vfprintf+0x5b0>
    11ec:	28 e0       	ldi	r18, 0x08	; 8
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	0a c0       	rjmp	.+20     	; 0x1206 <vfprintf+0x5c2>
    11f2:	10 61       	ori	r17, 0x10	; 16
    11f4:	14 fd       	sbrc	r17, 4
    11f6:	14 60       	ori	r17, 0x04	; 4
    11f8:	20 e1       	ldi	r18, 0x10	; 16
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	04 c0       	rjmp	.+8      	; 0x1206 <vfprintf+0x5c2>
    11fe:	14 fd       	sbrc	r17, 4
    1200:	16 60       	ori	r17, 0x06	; 6
    1202:	20 e1       	ldi	r18, 0x10	; 16
    1204:	32 e0       	ldi	r19, 0x02	; 2
    1206:	17 ff       	sbrs	r17, 7
    1208:	08 c0       	rjmp	.+16     	; 0x121a <vfprintf+0x5d6>
    120a:	f6 01       	movw	r30, r12
    120c:	60 81       	ld	r22, Z
    120e:	71 81       	ldd	r23, Z+1	; 0x01
    1210:	82 81       	ldd	r24, Z+2	; 0x02
    1212:	93 81       	ldd	r25, Z+3	; 0x03
    1214:	44 e0       	ldi	r20, 0x04	; 4
    1216:	50 e0       	ldi	r21, 0x00	; 0
    1218:	08 c0       	rjmp	.+16     	; 0x122a <vfprintf+0x5e6>
    121a:	f6 01       	movw	r30, r12
    121c:	80 81       	ld	r24, Z
    121e:	91 81       	ldd	r25, Z+1	; 0x01
    1220:	bc 01       	movw	r22, r24
    1222:	80 e0       	ldi	r24, 0x00	; 0
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	42 e0       	ldi	r20, 0x02	; 2
    1228:	50 e0       	ldi	r21, 0x00	; 0
    122a:	c4 0e       	add	r12, r20
    122c:	d5 1e       	adc	r13, r21
    122e:	ae 01       	movw	r20, r28
    1230:	4f 5f       	subi	r20, 0xFF	; 255
    1232:	5f 4f       	sbci	r21, 0xFF	; 255
    1234:	0e 94 76 0d 	call	0x1aec	; 0x1aec <__ultoa_invert>
    1238:	e8 2e       	mov	r14, r24
    123a:	58 89       	ldd	r21, Y+16	; 0x10
    123c:	e5 1a       	sub	r14, r21
    123e:	8f e7       	ldi	r24, 0x7F	; 127
    1240:	f8 2e       	mov	r15, r24
    1242:	f1 22       	and	r15, r17
    1244:	f6 fe       	sbrs	r15, 6
    1246:	0b c0       	rjmp	.+22     	; 0x125e <vfprintf+0x61a>
    1248:	8e ef       	ldi	r24, 0xFE	; 254
    124a:	f8 22       	and	r15, r24
    124c:	e9 14       	cp	r14, r9
    124e:	38 f4       	brcc	.+14     	; 0x125e <vfprintf+0x61a>
    1250:	f4 fe       	sbrs	r15, 4
    1252:	07 c0       	rjmp	.+14     	; 0x1262 <vfprintf+0x61e>
    1254:	f2 fc       	sbrc	r15, 2
    1256:	05 c0       	rjmp	.+10     	; 0x1262 <vfprintf+0x61e>
    1258:	9f ee       	ldi	r25, 0xEF	; 239
    125a:	f9 22       	and	r15, r25
    125c:	02 c0       	rjmp	.+4      	; 0x1262 <vfprintf+0x61e>
    125e:	1e 2d       	mov	r17, r14
    1260:	01 c0       	rjmp	.+2      	; 0x1264 <vfprintf+0x620>
    1262:	19 2d       	mov	r17, r9
    1264:	f4 fe       	sbrs	r15, 4
    1266:	0d c0       	rjmp	.+26     	; 0x1282 <vfprintf+0x63e>
    1268:	fe 01       	movw	r30, r28
    126a:	ee 0d       	add	r30, r14
    126c:	f1 1d       	adc	r31, r1
    126e:	80 81       	ld	r24, Z
    1270:	80 33       	cpi	r24, 0x30	; 48
    1272:	19 f4       	brne	.+6      	; 0x127a <vfprintf+0x636>
    1274:	e9 ee       	ldi	r30, 0xE9	; 233
    1276:	fe 22       	and	r15, r30
    1278:	08 c0       	rjmp	.+16     	; 0x128a <vfprintf+0x646>
    127a:	1f 5f       	subi	r17, 0xFF	; 255
    127c:	f2 fe       	sbrs	r15, 2
    127e:	05 c0       	rjmp	.+10     	; 0x128a <vfprintf+0x646>
    1280:	03 c0       	rjmp	.+6      	; 0x1288 <vfprintf+0x644>
    1282:	8f 2d       	mov	r24, r15
    1284:	86 78       	andi	r24, 0x86	; 134
    1286:	09 f0       	breq	.+2      	; 0x128a <vfprintf+0x646>
    1288:	1f 5f       	subi	r17, 0xFF	; 255
    128a:	0f 2d       	mov	r16, r15
    128c:	f3 fc       	sbrc	r15, 3
    128e:	14 c0       	rjmp	.+40     	; 0x12b8 <vfprintf+0x674>
    1290:	f0 fe       	sbrs	r15, 0
    1292:	0f c0       	rjmp	.+30     	; 0x12b2 <vfprintf+0x66e>
    1294:	18 15       	cp	r17, r8
    1296:	10 f0       	brcs	.+4      	; 0x129c <vfprintf+0x658>
    1298:	9e 2c       	mov	r9, r14
    129a:	0b c0       	rjmp	.+22     	; 0x12b2 <vfprintf+0x66e>
    129c:	9e 2c       	mov	r9, r14
    129e:	98 0c       	add	r9, r8
    12a0:	91 1a       	sub	r9, r17
    12a2:	18 2d       	mov	r17, r8
    12a4:	06 c0       	rjmp	.+12     	; 0x12b2 <vfprintf+0x66e>
    12a6:	80 e2       	ldi	r24, 0x20	; 32
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	b3 01       	movw	r22, r6
    12ac:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    12b0:	1f 5f       	subi	r17, 0xFF	; 255
    12b2:	18 15       	cp	r17, r8
    12b4:	c0 f3       	brcs	.-16     	; 0x12a6 <vfprintf+0x662>
    12b6:	04 c0       	rjmp	.+8      	; 0x12c0 <vfprintf+0x67c>
    12b8:	18 15       	cp	r17, r8
    12ba:	10 f4       	brcc	.+4      	; 0x12c0 <vfprintf+0x67c>
    12bc:	81 1a       	sub	r8, r17
    12be:	01 c0       	rjmp	.+2      	; 0x12c2 <vfprintf+0x67e>
    12c0:	88 24       	eor	r8, r8
    12c2:	04 ff       	sbrs	r16, 4
    12c4:	0f c0       	rjmp	.+30     	; 0x12e4 <vfprintf+0x6a0>
    12c6:	80 e3       	ldi	r24, 0x30	; 48
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	b3 01       	movw	r22, r6
    12cc:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    12d0:	02 ff       	sbrs	r16, 2
    12d2:	1d c0       	rjmp	.+58     	; 0x130e <vfprintf+0x6ca>
    12d4:	01 fd       	sbrc	r16, 1
    12d6:	03 c0       	rjmp	.+6      	; 0x12de <vfprintf+0x69a>
    12d8:	88 e7       	ldi	r24, 0x78	; 120
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e c0       	rjmp	.+28     	; 0x12fa <vfprintf+0x6b6>
    12de:	88 e5       	ldi	r24, 0x58	; 88
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	0b c0       	rjmp	.+22     	; 0x12fa <vfprintf+0x6b6>
    12e4:	80 2f       	mov	r24, r16
    12e6:	86 78       	andi	r24, 0x86	; 134
    12e8:	91 f0       	breq	.+36     	; 0x130e <vfprintf+0x6ca>
    12ea:	01 ff       	sbrs	r16, 1
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <vfprintf+0x6ae>
    12ee:	8b e2       	ldi	r24, 0x2B	; 43
    12f0:	01 c0       	rjmp	.+2      	; 0x12f4 <vfprintf+0x6b0>
    12f2:	80 e2       	ldi	r24, 0x20	; 32
    12f4:	f7 fc       	sbrc	r15, 7
    12f6:	8d e2       	ldi	r24, 0x2D	; 45
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	b3 01       	movw	r22, r6
    12fc:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    1300:	06 c0       	rjmp	.+12     	; 0x130e <vfprintf+0x6ca>
    1302:	80 e3       	ldi	r24, 0x30	; 48
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	b3 01       	movw	r22, r6
    1308:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    130c:	9a 94       	dec	r9
    130e:	e9 14       	cp	r14, r9
    1310:	c0 f3       	brcs	.-16     	; 0x1302 <vfprintf+0x6be>
    1312:	ea 94       	dec	r14
    1314:	e1 e0       	ldi	r30, 0x01	; 1
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	ec 0f       	add	r30, r28
    131a:	fd 1f       	adc	r31, r29
    131c:	ee 0d       	add	r30, r14
    131e:	f1 1d       	adc	r31, r1
    1320:	80 81       	ld	r24, Z
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	b3 01       	movw	r22, r6
    1326:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    132a:	ee 20       	and	r14, r14
    132c:	91 f7       	brne	.-28     	; 0x1312 <vfprintf+0x6ce>
    132e:	06 c0       	rjmp	.+12     	; 0x133c <vfprintf+0x6f8>
    1330:	80 e2       	ldi	r24, 0x20	; 32
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	b3 01       	movw	r22, r6
    1336:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <fputc>
    133a:	8a 94       	dec	r8
    133c:	88 20       	and	r8, r8
    133e:	c1 f7       	brne	.-16     	; 0x1330 <vfprintf+0x6ec>
    1340:	99 cc       	rjmp	.-1742   	; 0xc74 <vfprintf+0x30>
    1342:	f3 01       	movw	r30, r6
    1344:	66 81       	ldd	r22, Z+6	; 0x06
    1346:	77 81       	ldd	r23, Z+7	; 0x07
    1348:	cb 01       	movw	r24, r22
    134a:	61 96       	adiw	r28, 0x11	; 17
    134c:	e2 e1       	ldi	r30, 0x12	; 18
    134e:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__epilogue_restores__>

00001352 <__subsf3>:
    1352:	50 58       	subi	r21, 0x80	; 128

00001354 <__addsf3>:
    1354:	bb 27       	eor	r27, r27
    1356:	aa 27       	eor	r26, r26
    1358:	0e d0       	rcall	.+28     	; 0x1376 <__addsf3x>
    135a:	75 c1       	rjmp	.+746    	; 0x1646 <__fp_round>
    135c:	66 d1       	rcall	.+716    	; 0x162a <__fp_pscA>
    135e:	30 f0       	brcs	.+12     	; 0x136c <__addsf3+0x18>
    1360:	6b d1       	rcall	.+726    	; 0x1638 <__fp_pscB>
    1362:	20 f0       	brcs	.+8      	; 0x136c <__addsf3+0x18>
    1364:	31 f4       	brne	.+12     	; 0x1372 <__addsf3+0x1e>
    1366:	9f 3f       	cpi	r25, 0xFF	; 255
    1368:	11 f4       	brne	.+4      	; 0x136e <__addsf3+0x1a>
    136a:	1e f4       	brtc	.+6      	; 0x1372 <__addsf3+0x1e>
    136c:	5b c1       	rjmp	.+694    	; 0x1624 <__fp_nan>
    136e:	0e f4       	brtc	.+2      	; 0x1372 <__addsf3+0x1e>
    1370:	e0 95       	com	r30
    1372:	e7 fb       	bst	r30, 7
    1374:	51 c1       	rjmp	.+674    	; 0x1618 <__fp_inf>

00001376 <__addsf3x>:
    1376:	e9 2f       	mov	r30, r25
    1378:	77 d1       	rcall	.+750    	; 0x1668 <__fp_split3>
    137a:	80 f3       	brcs	.-32     	; 0x135c <__addsf3+0x8>
    137c:	ba 17       	cp	r27, r26
    137e:	62 07       	cpc	r22, r18
    1380:	73 07       	cpc	r23, r19
    1382:	84 07       	cpc	r24, r20
    1384:	95 07       	cpc	r25, r21
    1386:	18 f0       	brcs	.+6      	; 0x138e <__addsf3x+0x18>
    1388:	71 f4       	brne	.+28     	; 0x13a6 <__addsf3x+0x30>
    138a:	9e f5       	brtc	.+102    	; 0x13f2 <__addsf3x+0x7c>
    138c:	8f c1       	rjmp	.+798    	; 0x16ac <__fp_zero>
    138e:	0e f4       	brtc	.+2      	; 0x1392 <__addsf3x+0x1c>
    1390:	e0 95       	com	r30
    1392:	0b 2e       	mov	r0, r27
    1394:	ba 2f       	mov	r27, r26
    1396:	a0 2d       	mov	r26, r0
    1398:	0b 01       	movw	r0, r22
    139a:	b9 01       	movw	r22, r18
    139c:	90 01       	movw	r18, r0
    139e:	0c 01       	movw	r0, r24
    13a0:	ca 01       	movw	r24, r20
    13a2:	a0 01       	movw	r20, r0
    13a4:	11 24       	eor	r1, r1
    13a6:	ff 27       	eor	r31, r31
    13a8:	59 1b       	sub	r21, r25
    13aa:	99 f0       	breq	.+38     	; 0x13d2 <__addsf3x+0x5c>
    13ac:	59 3f       	cpi	r21, 0xF9	; 249
    13ae:	50 f4       	brcc	.+20     	; 0x13c4 <__addsf3x+0x4e>
    13b0:	50 3e       	cpi	r21, 0xE0	; 224
    13b2:	68 f1       	brcs	.+90     	; 0x140e <__addsf3x+0x98>
    13b4:	1a 16       	cp	r1, r26
    13b6:	f0 40       	sbci	r31, 0x00	; 0
    13b8:	a2 2f       	mov	r26, r18
    13ba:	23 2f       	mov	r18, r19
    13bc:	34 2f       	mov	r19, r20
    13be:	44 27       	eor	r20, r20
    13c0:	58 5f       	subi	r21, 0xF8	; 248
    13c2:	f3 cf       	rjmp	.-26     	; 0x13aa <__addsf3x+0x34>
    13c4:	46 95       	lsr	r20
    13c6:	37 95       	ror	r19
    13c8:	27 95       	ror	r18
    13ca:	a7 95       	ror	r26
    13cc:	f0 40       	sbci	r31, 0x00	; 0
    13ce:	53 95       	inc	r21
    13d0:	c9 f7       	brne	.-14     	; 0x13c4 <__addsf3x+0x4e>
    13d2:	7e f4       	brtc	.+30     	; 0x13f2 <__addsf3x+0x7c>
    13d4:	1f 16       	cp	r1, r31
    13d6:	ba 0b       	sbc	r27, r26
    13d8:	62 0b       	sbc	r22, r18
    13da:	73 0b       	sbc	r23, r19
    13dc:	84 0b       	sbc	r24, r20
    13de:	ba f0       	brmi	.+46     	; 0x140e <__addsf3x+0x98>
    13e0:	91 50       	subi	r25, 0x01	; 1
    13e2:	a1 f0       	breq	.+40     	; 0x140c <__addsf3x+0x96>
    13e4:	ff 0f       	add	r31, r31
    13e6:	bb 1f       	adc	r27, r27
    13e8:	66 1f       	adc	r22, r22
    13ea:	77 1f       	adc	r23, r23
    13ec:	88 1f       	adc	r24, r24
    13ee:	c2 f7       	brpl	.-16     	; 0x13e0 <__addsf3x+0x6a>
    13f0:	0e c0       	rjmp	.+28     	; 0x140e <__addsf3x+0x98>
    13f2:	ba 0f       	add	r27, r26
    13f4:	62 1f       	adc	r22, r18
    13f6:	73 1f       	adc	r23, r19
    13f8:	84 1f       	adc	r24, r20
    13fa:	48 f4       	brcc	.+18     	; 0x140e <__addsf3x+0x98>
    13fc:	87 95       	ror	r24
    13fe:	77 95       	ror	r23
    1400:	67 95       	ror	r22
    1402:	b7 95       	ror	r27
    1404:	f7 95       	ror	r31
    1406:	9e 3f       	cpi	r25, 0xFE	; 254
    1408:	08 f0       	brcs	.+2      	; 0x140c <__addsf3x+0x96>
    140a:	b3 cf       	rjmp	.-154    	; 0x1372 <__addsf3+0x1e>
    140c:	93 95       	inc	r25
    140e:	88 0f       	add	r24, r24
    1410:	08 f0       	brcs	.+2      	; 0x1414 <__addsf3x+0x9e>
    1412:	99 27       	eor	r25, r25
    1414:	ee 0f       	add	r30, r30
    1416:	97 95       	ror	r25
    1418:	87 95       	ror	r24
    141a:	08 95       	ret

0000141c <__cmpsf2>:
    141c:	d9 d0       	rcall	.+434    	; 0x15d0 <__fp_cmp>
    141e:	08 f4       	brcc	.+2      	; 0x1422 <__cmpsf2+0x6>
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	08 95       	ret

00001424 <__divsf3>:
    1424:	0c d0       	rcall	.+24     	; 0x143e <__divsf3x>
    1426:	0f c1       	rjmp	.+542    	; 0x1646 <__fp_round>
    1428:	07 d1       	rcall	.+526    	; 0x1638 <__fp_pscB>
    142a:	40 f0       	brcs	.+16     	; 0x143c <__divsf3+0x18>
    142c:	fe d0       	rcall	.+508    	; 0x162a <__fp_pscA>
    142e:	30 f0       	brcs	.+12     	; 0x143c <__divsf3+0x18>
    1430:	21 f4       	brne	.+8      	; 0x143a <__divsf3+0x16>
    1432:	5f 3f       	cpi	r21, 0xFF	; 255
    1434:	19 f0       	breq	.+6      	; 0x143c <__divsf3+0x18>
    1436:	f0 c0       	rjmp	.+480    	; 0x1618 <__fp_inf>
    1438:	51 11       	cpse	r21, r1
    143a:	39 c1       	rjmp	.+626    	; 0x16ae <__fp_szero>
    143c:	f3 c0       	rjmp	.+486    	; 0x1624 <__fp_nan>

0000143e <__divsf3x>:
    143e:	14 d1       	rcall	.+552    	; 0x1668 <__fp_split3>
    1440:	98 f3       	brcs	.-26     	; 0x1428 <__divsf3+0x4>

00001442 <__divsf3_pse>:
    1442:	99 23       	and	r25, r25
    1444:	c9 f3       	breq	.-14     	; 0x1438 <__divsf3+0x14>
    1446:	55 23       	and	r21, r21
    1448:	b1 f3       	breq	.-20     	; 0x1436 <__divsf3+0x12>
    144a:	95 1b       	sub	r25, r21
    144c:	55 0b       	sbc	r21, r21
    144e:	bb 27       	eor	r27, r27
    1450:	aa 27       	eor	r26, r26
    1452:	62 17       	cp	r22, r18
    1454:	73 07       	cpc	r23, r19
    1456:	84 07       	cpc	r24, r20
    1458:	38 f0       	brcs	.+14     	; 0x1468 <__divsf3_pse+0x26>
    145a:	9f 5f       	subi	r25, 0xFF	; 255
    145c:	5f 4f       	sbci	r21, 0xFF	; 255
    145e:	22 0f       	add	r18, r18
    1460:	33 1f       	adc	r19, r19
    1462:	44 1f       	adc	r20, r20
    1464:	aa 1f       	adc	r26, r26
    1466:	a9 f3       	breq	.-22     	; 0x1452 <__divsf3_pse+0x10>
    1468:	33 d0       	rcall	.+102    	; 0x14d0 <__divsf3_pse+0x8e>
    146a:	0e 2e       	mov	r0, r30
    146c:	3a f0       	brmi	.+14     	; 0x147c <__divsf3_pse+0x3a>
    146e:	e0 e8       	ldi	r30, 0x80	; 128
    1470:	30 d0       	rcall	.+96     	; 0x14d2 <__divsf3_pse+0x90>
    1472:	91 50       	subi	r25, 0x01	; 1
    1474:	50 40       	sbci	r21, 0x00	; 0
    1476:	e6 95       	lsr	r30
    1478:	00 1c       	adc	r0, r0
    147a:	ca f7       	brpl	.-14     	; 0x146e <__divsf3_pse+0x2c>
    147c:	29 d0       	rcall	.+82     	; 0x14d0 <__divsf3_pse+0x8e>
    147e:	fe 2f       	mov	r31, r30
    1480:	27 d0       	rcall	.+78     	; 0x14d0 <__divsf3_pse+0x8e>
    1482:	66 0f       	add	r22, r22
    1484:	77 1f       	adc	r23, r23
    1486:	88 1f       	adc	r24, r24
    1488:	bb 1f       	adc	r27, r27
    148a:	26 17       	cp	r18, r22
    148c:	37 07       	cpc	r19, r23
    148e:	48 07       	cpc	r20, r24
    1490:	ab 07       	cpc	r26, r27
    1492:	b0 e8       	ldi	r27, 0x80	; 128
    1494:	09 f0       	breq	.+2      	; 0x1498 <__divsf3_pse+0x56>
    1496:	bb 0b       	sbc	r27, r27
    1498:	80 2d       	mov	r24, r0
    149a:	bf 01       	movw	r22, r30
    149c:	ff 27       	eor	r31, r31
    149e:	93 58       	subi	r25, 0x83	; 131
    14a0:	5f 4f       	sbci	r21, 0xFF	; 255
    14a2:	2a f0       	brmi	.+10     	; 0x14ae <__divsf3_pse+0x6c>
    14a4:	9e 3f       	cpi	r25, 0xFE	; 254
    14a6:	51 05       	cpc	r21, r1
    14a8:	68 f0       	brcs	.+26     	; 0x14c4 <__divsf3_pse+0x82>
    14aa:	b6 c0       	rjmp	.+364    	; 0x1618 <__fp_inf>
    14ac:	00 c1       	rjmp	.+512    	; 0x16ae <__fp_szero>
    14ae:	5f 3f       	cpi	r21, 0xFF	; 255
    14b0:	ec f3       	brlt	.-6      	; 0x14ac <__divsf3_pse+0x6a>
    14b2:	98 3e       	cpi	r25, 0xE8	; 232
    14b4:	dc f3       	brlt	.-10     	; 0x14ac <__divsf3_pse+0x6a>
    14b6:	86 95       	lsr	r24
    14b8:	77 95       	ror	r23
    14ba:	67 95       	ror	r22
    14bc:	b7 95       	ror	r27
    14be:	f7 95       	ror	r31
    14c0:	9f 5f       	subi	r25, 0xFF	; 255
    14c2:	c9 f7       	brne	.-14     	; 0x14b6 <__divsf3_pse+0x74>
    14c4:	88 0f       	add	r24, r24
    14c6:	91 1d       	adc	r25, r1
    14c8:	96 95       	lsr	r25
    14ca:	87 95       	ror	r24
    14cc:	97 f9       	bld	r25, 7
    14ce:	08 95       	ret
    14d0:	e1 e0       	ldi	r30, 0x01	; 1
    14d2:	66 0f       	add	r22, r22
    14d4:	77 1f       	adc	r23, r23
    14d6:	88 1f       	adc	r24, r24
    14d8:	bb 1f       	adc	r27, r27
    14da:	62 17       	cp	r22, r18
    14dc:	73 07       	cpc	r23, r19
    14de:	84 07       	cpc	r24, r20
    14e0:	ba 07       	cpc	r27, r26
    14e2:	20 f0       	brcs	.+8      	; 0x14ec <__divsf3_pse+0xaa>
    14e4:	62 1b       	sub	r22, r18
    14e6:	73 0b       	sbc	r23, r19
    14e8:	84 0b       	sbc	r24, r20
    14ea:	ba 0b       	sbc	r27, r26
    14ec:	ee 1f       	adc	r30, r30
    14ee:	88 f7       	brcc	.-30     	; 0x14d2 <__divsf3_pse+0x90>
    14f0:	e0 95       	com	r30
    14f2:	08 95       	ret

000014f4 <__fixsfsi>:
    14f4:	04 d0       	rcall	.+8      	; 0x14fe <__fixunssfsi>
    14f6:	68 94       	set
    14f8:	b1 11       	cpse	r27, r1
    14fa:	d9 c0       	rjmp	.+434    	; 0x16ae <__fp_szero>
    14fc:	08 95       	ret

000014fe <__fixunssfsi>:
    14fe:	bc d0       	rcall	.+376    	; 0x1678 <__fp_splitA>
    1500:	88 f0       	brcs	.+34     	; 0x1524 <__fixunssfsi+0x26>
    1502:	9f 57       	subi	r25, 0x7F	; 127
    1504:	90 f0       	brcs	.+36     	; 0x152a <__fixunssfsi+0x2c>
    1506:	b9 2f       	mov	r27, r25
    1508:	99 27       	eor	r25, r25
    150a:	b7 51       	subi	r27, 0x17	; 23
    150c:	a0 f0       	brcs	.+40     	; 0x1536 <__fixunssfsi+0x38>
    150e:	d1 f0       	breq	.+52     	; 0x1544 <__fixunssfsi+0x46>
    1510:	66 0f       	add	r22, r22
    1512:	77 1f       	adc	r23, r23
    1514:	88 1f       	adc	r24, r24
    1516:	99 1f       	adc	r25, r25
    1518:	1a f0       	brmi	.+6      	; 0x1520 <__fixunssfsi+0x22>
    151a:	ba 95       	dec	r27
    151c:	c9 f7       	brne	.-14     	; 0x1510 <__fixunssfsi+0x12>
    151e:	12 c0       	rjmp	.+36     	; 0x1544 <__fixunssfsi+0x46>
    1520:	b1 30       	cpi	r27, 0x01	; 1
    1522:	81 f0       	breq	.+32     	; 0x1544 <__fixunssfsi+0x46>
    1524:	c3 d0       	rcall	.+390    	; 0x16ac <__fp_zero>
    1526:	b1 e0       	ldi	r27, 0x01	; 1
    1528:	08 95       	ret
    152a:	c0 c0       	rjmp	.+384    	; 0x16ac <__fp_zero>
    152c:	67 2f       	mov	r22, r23
    152e:	78 2f       	mov	r23, r24
    1530:	88 27       	eor	r24, r24
    1532:	b8 5f       	subi	r27, 0xF8	; 248
    1534:	39 f0       	breq	.+14     	; 0x1544 <__fixunssfsi+0x46>
    1536:	b9 3f       	cpi	r27, 0xF9	; 249
    1538:	cc f3       	brlt	.-14     	; 0x152c <__fixunssfsi+0x2e>
    153a:	86 95       	lsr	r24
    153c:	77 95       	ror	r23
    153e:	67 95       	ror	r22
    1540:	b3 95       	inc	r27
    1542:	d9 f7       	brne	.-10     	; 0x153a <__fixunssfsi+0x3c>
    1544:	3e f4       	brtc	.+14     	; 0x1554 <__fixunssfsi+0x56>
    1546:	90 95       	com	r25
    1548:	80 95       	com	r24
    154a:	70 95       	com	r23
    154c:	61 95       	neg	r22
    154e:	7f 4f       	sbci	r23, 0xFF	; 255
    1550:	8f 4f       	sbci	r24, 0xFF	; 255
    1552:	9f 4f       	sbci	r25, 0xFF	; 255
    1554:	08 95       	ret

00001556 <__floatunsisf>:
    1556:	e8 94       	clt
    1558:	09 c0       	rjmp	.+18     	; 0x156c <__floatsisf+0x12>

0000155a <__floatsisf>:
    155a:	97 fb       	bst	r25, 7
    155c:	3e f4       	brtc	.+14     	; 0x156c <__floatsisf+0x12>
    155e:	90 95       	com	r25
    1560:	80 95       	com	r24
    1562:	70 95       	com	r23
    1564:	61 95       	neg	r22
    1566:	7f 4f       	sbci	r23, 0xFF	; 255
    1568:	8f 4f       	sbci	r24, 0xFF	; 255
    156a:	9f 4f       	sbci	r25, 0xFF	; 255
    156c:	99 23       	and	r25, r25
    156e:	a9 f0       	breq	.+42     	; 0x159a <__floatsisf+0x40>
    1570:	f9 2f       	mov	r31, r25
    1572:	96 e9       	ldi	r25, 0x96	; 150
    1574:	bb 27       	eor	r27, r27
    1576:	93 95       	inc	r25
    1578:	f6 95       	lsr	r31
    157a:	87 95       	ror	r24
    157c:	77 95       	ror	r23
    157e:	67 95       	ror	r22
    1580:	b7 95       	ror	r27
    1582:	f1 11       	cpse	r31, r1
    1584:	f8 cf       	rjmp	.-16     	; 0x1576 <__floatsisf+0x1c>
    1586:	fa f4       	brpl	.+62     	; 0x15c6 <__floatsisf+0x6c>
    1588:	bb 0f       	add	r27, r27
    158a:	11 f4       	brne	.+4      	; 0x1590 <__floatsisf+0x36>
    158c:	60 ff       	sbrs	r22, 0
    158e:	1b c0       	rjmp	.+54     	; 0x15c6 <__floatsisf+0x6c>
    1590:	6f 5f       	subi	r22, 0xFF	; 255
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	8f 4f       	sbci	r24, 0xFF	; 255
    1596:	9f 4f       	sbci	r25, 0xFF	; 255
    1598:	16 c0       	rjmp	.+44     	; 0x15c6 <__floatsisf+0x6c>
    159a:	88 23       	and	r24, r24
    159c:	11 f0       	breq	.+4      	; 0x15a2 <__floatsisf+0x48>
    159e:	96 e9       	ldi	r25, 0x96	; 150
    15a0:	11 c0       	rjmp	.+34     	; 0x15c4 <__floatsisf+0x6a>
    15a2:	77 23       	and	r23, r23
    15a4:	21 f0       	breq	.+8      	; 0x15ae <__floatsisf+0x54>
    15a6:	9e e8       	ldi	r25, 0x8E	; 142
    15a8:	87 2f       	mov	r24, r23
    15aa:	76 2f       	mov	r23, r22
    15ac:	05 c0       	rjmp	.+10     	; 0x15b8 <__floatsisf+0x5e>
    15ae:	66 23       	and	r22, r22
    15b0:	71 f0       	breq	.+28     	; 0x15ce <__floatsisf+0x74>
    15b2:	96 e8       	ldi	r25, 0x86	; 134
    15b4:	86 2f       	mov	r24, r22
    15b6:	70 e0       	ldi	r23, 0x00	; 0
    15b8:	60 e0       	ldi	r22, 0x00	; 0
    15ba:	2a f0       	brmi	.+10     	; 0x15c6 <__floatsisf+0x6c>
    15bc:	9a 95       	dec	r25
    15be:	66 0f       	add	r22, r22
    15c0:	77 1f       	adc	r23, r23
    15c2:	88 1f       	adc	r24, r24
    15c4:	da f7       	brpl	.-10     	; 0x15bc <__floatsisf+0x62>
    15c6:	88 0f       	add	r24, r24
    15c8:	96 95       	lsr	r25
    15ca:	87 95       	ror	r24
    15cc:	97 f9       	bld	r25, 7
    15ce:	08 95       	ret

000015d0 <__fp_cmp>:
    15d0:	99 0f       	add	r25, r25
    15d2:	00 08       	sbc	r0, r0
    15d4:	55 0f       	add	r21, r21
    15d6:	aa 0b       	sbc	r26, r26
    15d8:	e0 e8       	ldi	r30, 0x80	; 128
    15da:	fe ef       	ldi	r31, 0xFE	; 254
    15dc:	16 16       	cp	r1, r22
    15de:	17 06       	cpc	r1, r23
    15e0:	e8 07       	cpc	r30, r24
    15e2:	f9 07       	cpc	r31, r25
    15e4:	c0 f0       	brcs	.+48     	; 0x1616 <__fp_cmp+0x46>
    15e6:	12 16       	cp	r1, r18
    15e8:	13 06       	cpc	r1, r19
    15ea:	e4 07       	cpc	r30, r20
    15ec:	f5 07       	cpc	r31, r21
    15ee:	98 f0       	brcs	.+38     	; 0x1616 <__fp_cmp+0x46>
    15f0:	62 1b       	sub	r22, r18
    15f2:	73 0b       	sbc	r23, r19
    15f4:	84 0b       	sbc	r24, r20
    15f6:	95 0b       	sbc	r25, r21
    15f8:	39 f4       	brne	.+14     	; 0x1608 <__fp_cmp+0x38>
    15fa:	0a 26       	eor	r0, r26
    15fc:	61 f0       	breq	.+24     	; 0x1616 <__fp_cmp+0x46>
    15fe:	23 2b       	or	r18, r19
    1600:	24 2b       	or	r18, r20
    1602:	25 2b       	or	r18, r21
    1604:	21 f4       	brne	.+8      	; 0x160e <__fp_cmp+0x3e>
    1606:	08 95       	ret
    1608:	0a 26       	eor	r0, r26
    160a:	09 f4       	brne	.+2      	; 0x160e <__fp_cmp+0x3e>
    160c:	a1 40       	sbci	r26, 0x01	; 1
    160e:	a6 95       	lsr	r26
    1610:	8f ef       	ldi	r24, 0xFF	; 255
    1612:	81 1d       	adc	r24, r1
    1614:	81 1d       	adc	r24, r1
    1616:	08 95       	ret

00001618 <__fp_inf>:
    1618:	97 f9       	bld	r25, 7
    161a:	9f 67       	ori	r25, 0x7F	; 127
    161c:	80 e8       	ldi	r24, 0x80	; 128
    161e:	70 e0       	ldi	r23, 0x00	; 0
    1620:	60 e0       	ldi	r22, 0x00	; 0
    1622:	08 95       	ret

00001624 <__fp_nan>:
    1624:	9f ef       	ldi	r25, 0xFF	; 255
    1626:	80 ec       	ldi	r24, 0xC0	; 192
    1628:	08 95       	ret

0000162a <__fp_pscA>:
    162a:	00 24       	eor	r0, r0
    162c:	0a 94       	dec	r0
    162e:	16 16       	cp	r1, r22
    1630:	17 06       	cpc	r1, r23
    1632:	18 06       	cpc	r1, r24
    1634:	09 06       	cpc	r0, r25
    1636:	08 95       	ret

00001638 <__fp_pscB>:
    1638:	00 24       	eor	r0, r0
    163a:	0a 94       	dec	r0
    163c:	12 16       	cp	r1, r18
    163e:	13 06       	cpc	r1, r19
    1640:	14 06       	cpc	r1, r20
    1642:	05 06       	cpc	r0, r21
    1644:	08 95       	ret

00001646 <__fp_round>:
    1646:	09 2e       	mov	r0, r25
    1648:	03 94       	inc	r0
    164a:	00 0c       	add	r0, r0
    164c:	11 f4       	brne	.+4      	; 0x1652 <__fp_round+0xc>
    164e:	88 23       	and	r24, r24
    1650:	52 f0       	brmi	.+20     	; 0x1666 <__fp_round+0x20>
    1652:	bb 0f       	add	r27, r27
    1654:	40 f4       	brcc	.+16     	; 0x1666 <__fp_round+0x20>
    1656:	bf 2b       	or	r27, r31
    1658:	11 f4       	brne	.+4      	; 0x165e <__fp_round+0x18>
    165a:	60 ff       	sbrs	r22, 0
    165c:	04 c0       	rjmp	.+8      	; 0x1666 <__fp_round+0x20>
    165e:	6f 5f       	subi	r22, 0xFF	; 255
    1660:	7f 4f       	sbci	r23, 0xFF	; 255
    1662:	8f 4f       	sbci	r24, 0xFF	; 255
    1664:	9f 4f       	sbci	r25, 0xFF	; 255
    1666:	08 95       	ret

00001668 <__fp_split3>:
    1668:	57 fd       	sbrc	r21, 7
    166a:	90 58       	subi	r25, 0x80	; 128
    166c:	44 0f       	add	r20, r20
    166e:	55 1f       	adc	r21, r21
    1670:	59 f0       	breq	.+22     	; 0x1688 <__fp_splitA+0x10>
    1672:	5f 3f       	cpi	r21, 0xFF	; 255
    1674:	71 f0       	breq	.+28     	; 0x1692 <__fp_splitA+0x1a>
    1676:	47 95       	ror	r20

00001678 <__fp_splitA>:
    1678:	88 0f       	add	r24, r24
    167a:	97 fb       	bst	r25, 7
    167c:	99 1f       	adc	r25, r25
    167e:	61 f0       	breq	.+24     	; 0x1698 <__fp_splitA+0x20>
    1680:	9f 3f       	cpi	r25, 0xFF	; 255
    1682:	79 f0       	breq	.+30     	; 0x16a2 <__fp_splitA+0x2a>
    1684:	87 95       	ror	r24
    1686:	08 95       	ret
    1688:	12 16       	cp	r1, r18
    168a:	13 06       	cpc	r1, r19
    168c:	14 06       	cpc	r1, r20
    168e:	55 1f       	adc	r21, r21
    1690:	f2 cf       	rjmp	.-28     	; 0x1676 <__fp_split3+0xe>
    1692:	46 95       	lsr	r20
    1694:	f1 df       	rcall	.-30     	; 0x1678 <__fp_splitA>
    1696:	08 c0       	rjmp	.+16     	; 0x16a8 <__fp_splitA+0x30>
    1698:	16 16       	cp	r1, r22
    169a:	17 06       	cpc	r1, r23
    169c:	18 06       	cpc	r1, r24
    169e:	99 1f       	adc	r25, r25
    16a0:	f1 cf       	rjmp	.-30     	; 0x1684 <__fp_splitA+0xc>
    16a2:	86 95       	lsr	r24
    16a4:	71 05       	cpc	r23, r1
    16a6:	61 05       	cpc	r22, r1
    16a8:	08 94       	sec
    16aa:	08 95       	ret

000016ac <__fp_zero>:
    16ac:	e8 94       	clt

000016ae <__fp_szero>:
    16ae:	bb 27       	eor	r27, r27
    16b0:	66 27       	eor	r22, r22
    16b2:	77 27       	eor	r23, r23
    16b4:	cb 01       	movw	r24, r22
    16b6:	97 f9       	bld	r25, 7
    16b8:	08 95       	ret

000016ba <__gesf2>:
    16ba:	8a df       	rcall	.-236    	; 0x15d0 <__fp_cmp>
    16bc:	08 f4       	brcc	.+2      	; 0x16c0 <__gesf2+0x6>
    16be:	8f ef       	ldi	r24, 0xFF	; 255
    16c0:	08 95       	ret

000016c2 <__mulsf3>:
    16c2:	0b d0       	rcall	.+22     	; 0x16da <__mulsf3x>
    16c4:	c0 cf       	rjmp	.-128    	; 0x1646 <__fp_round>
    16c6:	b1 df       	rcall	.-158    	; 0x162a <__fp_pscA>
    16c8:	28 f0       	brcs	.+10     	; 0x16d4 <__mulsf3+0x12>
    16ca:	b6 df       	rcall	.-148    	; 0x1638 <__fp_pscB>
    16cc:	18 f0       	brcs	.+6      	; 0x16d4 <__mulsf3+0x12>
    16ce:	95 23       	and	r25, r21
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <__mulsf3+0x12>
    16d2:	a2 cf       	rjmp	.-188    	; 0x1618 <__fp_inf>
    16d4:	a7 cf       	rjmp	.-178    	; 0x1624 <__fp_nan>
    16d6:	11 24       	eor	r1, r1
    16d8:	ea cf       	rjmp	.-44     	; 0x16ae <__fp_szero>

000016da <__mulsf3x>:
    16da:	c6 df       	rcall	.-116    	; 0x1668 <__fp_split3>
    16dc:	a0 f3       	brcs	.-24     	; 0x16c6 <__mulsf3+0x4>

000016de <__mulsf3_pse>:
    16de:	95 9f       	mul	r25, r21
    16e0:	d1 f3       	breq	.-12     	; 0x16d6 <__mulsf3+0x14>
    16e2:	95 0f       	add	r25, r21
    16e4:	50 e0       	ldi	r21, 0x00	; 0
    16e6:	55 1f       	adc	r21, r21
    16e8:	62 9f       	mul	r22, r18
    16ea:	f0 01       	movw	r30, r0
    16ec:	72 9f       	mul	r23, r18
    16ee:	bb 27       	eor	r27, r27
    16f0:	f0 0d       	add	r31, r0
    16f2:	b1 1d       	adc	r27, r1
    16f4:	63 9f       	mul	r22, r19
    16f6:	aa 27       	eor	r26, r26
    16f8:	f0 0d       	add	r31, r0
    16fa:	b1 1d       	adc	r27, r1
    16fc:	aa 1f       	adc	r26, r26
    16fe:	64 9f       	mul	r22, r20
    1700:	66 27       	eor	r22, r22
    1702:	b0 0d       	add	r27, r0
    1704:	a1 1d       	adc	r26, r1
    1706:	66 1f       	adc	r22, r22
    1708:	82 9f       	mul	r24, r18
    170a:	22 27       	eor	r18, r18
    170c:	b0 0d       	add	r27, r0
    170e:	a1 1d       	adc	r26, r1
    1710:	62 1f       	adc	r22, r18
    1712:	73 9f       	mul	r23, r19
    1714:	b0 0d       	add	r27, r0
    1716:	a1 1d       	adc	r26, r1
    1718:	62 1f       	adc	r22, r18
    171a:	83 9f       	mul	r24, r19
    171c:	a0 0d       	add	r26, r0
    171e:	61 1d       	adc	r22, r1
    1720:	22 1f       	adc	r18, r18
    1722:	74 9f       	mul	r23, r20
    1724:	33 27       	eor	r19, r19
    1726:	a0 0d       	add	r26, r0
    1728:	61 1d       	adc	r22, r1
    172a:	23 1f       	adc	r18, r19
    172c:	84 9f       	mul	r24, r20
    172e:	60 0d       	add	r22, r0
    1730:	21 1d       	adc	r18, r1
    1732:	82 2f       	mov	r24, r18
    1734:	76 2f       	mov	r23, r22
    1736:	6a 2f       	mov	r22, r26
    1738:	11 24       	eor	r1, r1
    173a:	9f 57       	subi	r25, 0x7F	; 127
    173c:	50 40       	sbci	r21, 0x00	; 0
    173e:	8a f0       	brmi	.+34     	; 0x1762 <__mulsf3_pse+0x84>
    1740:	e1 f0       	breq	.+56     	; 0x177a <__mulsf3_pse+0x9c>
    1742:	88 23       	and	r24, r24
    1744:	4a f0       	brmi	.+18     	; 0x1758 <__mulsf3_pse+0x7a>
    1746:	ee 0f       	add	r30, r30
    1748:	ff 1f       	adc	r31, r31
    174a:	bb 1f       	adc	r27, r27
    174c:	66 1f       	adc	r22, r22
    174e:	77 1f       	adc	r23, r23
    1750:	88 1f       	adc	r24, r24
    1752:	91 50       	subi	r25, 0x01	; 1
    1754:	50 40       	sbci	r21, 0x00	; 0
    1756:	a9 f7       	brne	.-22     	; 0x1742 <__mulsf3_pse+0x64>
    1758:	9e 3f       	cpi	r25, 0xFE	; 254
    175a:	51 05       	cpc	r21, r1
    175c:	70 f0       	brcs	.+28     	; 0x177a <__mulsf3_pse+0x9c>
    175e:	5c cf       	rjmp	.-328    	; 0x1618 <__fp_inf>
    1760:	a6 cf       	rjmp	.-180    	; 0x16ae <__fp_szero>
    1762:	5f 3f       	cpi	r21, 0xFF	; 255
    1764:	ec f3       	brlt	.-6      	; 0x1760 <__mulsf3_pse+0x82>
    1766:	98 3e       	cpi	r25, 0xE8	; 232
    1768:	dc f3       	brlt	.-10     	; 0x1760 <__mulsf3_pse+0x82>
    176a:	86 95       	lsr	r24
    176c:	77 95       	ror	r23
    176e:	67 95       	ror	r22
    1770:	b7 95       	ror	r27
    1772:	f7 95       	ror	r31
    1774:	e7 95       	ror	r30
    1776:	9f 5f       	subi	r25, 0xFF	; 255
    1778:	c1 f7       	brne	.-16     	; 0x176a <__mulsf3_pse+0x8c>
    177a:	fe 2b       	or	r31, r30
    177c:	88 0f       	add	r24, r24
    177e:	91 1d       	adc	r25, r1
    1780:	96 95       	lsr	r25
    1782:	87 95       	ror	r24
    1784:	97 f9       	bld	r25, 7
    1786:	08 95       	ret

00001788 <__divmodsi4>:
    1788:	97 fb       	bst	r25, 7
    178a:	09 2e       	mov	r0, r25
    178c:	05 26       	eor	r0, r21
    178e:	0e d0       	rcall	.+28     	; 0x17ac <__divmodsi4_neg1>
    1790:	57 fd       	sbrc	r21, 7
    1792:	04 d0       	rcall	.+8      	; 0x179c <__divmodsi4_neg2>
    1794:	4b d0       	rcall	.+150    	; 0x182c <__udivmodsi4>
    1796:	0a d0       	rcall	.+20     	; 0x17ac <__divmodsi4_neg1>
    1798:	00 1c       	adc	r0, r0
    179a:	38 f4       	brcc	.+14     	; 0x17aa <__divmodsi4_exit>

0000179c <__divmodsi4_neg2>:
    179c:	50 95       	com	r21
    179e:	40 95       	com	r20
    17a0:	30 95       	com	r19
    17a2:	21 95       	neg	r18
    17a4:	3f 4f       	sbci	r19, 0xFF	; 255
    17a6:	4f 4f       	sbci	r20, 0xFF	; 255
    17a8:	5f 4f       	sbci	r21, 0xFF	; 255

000017aa <__divmodsi4_exit>:
    17aa:	08 95       	ret

000017ac <__divmodsi4_neg1>:
    17ac:	f6 f7       	brtc	.-4      	; 0x17aa <__divmodsi4_exit>
    17ae:	90 95       	com	r25
    17b0:	80 95       	com	r24
    17b2:	70 95       	com	r23
    17b4:	61 95       	neg	r22
    17b6:	7f 4f       	sbci	r23, 0xFF	; 255
    17b8:	8f 4f       	sbci	r24, 0xFF	; 255
    17ba:	9f 4f       	sbci	r25, 0xFF	; 255
    17bc:	08 95       	ret

000017be <__prologue_saves__>:
    17be:	2f 92       	push	r2
    17c0:	3f 92       	push	r3
    17c2:	4f 92       	push	r4
    17c4:	5f 92       	push	r5
    17c6:	6f 92       	push	r6
    17c8:	7f 92       	push	r7
    17ca:	8f 92       	push	r8
    17cc:	9f 92       	push	r9
    17ce:	af 92       	push	r10
    17d0:	bf 92       	push	r11
    17d2:	cf 92       	push	r12
    17d4:	df 92       	push	r13
    17d6:	ef 92       	push	r14
    17d8:	ff 92       	push	r15
    17da:	0f 93       	push	r16
    17dc:	1f 93       	push	r17
    17de:	cf 93       	push	r28
    17e0:	df 93       	push	r29
    17e2:	cd b7       	in	r28, 0x3d	; 61
    17e4:	de b7       	in	r29, 0x3e	; 62
    17e6:	ca 1b       	sub	r28, r26
    17e8:	db 0b       	sbc	r29, r27
    17ea:	0f b6       	in	r0, 0x3f	; 63
    17ec:	f8 94       	cli
    17ee:	de bf       	out	0x3e, r29	; 62
    17f0:	0f be       	out	0x3f, r0	; 63
    17f2:	cd bf       	out	0x3d, r28	; 61
    17f4:	09 94       	ijmp

000017f6 <__epilogue_restores__>:
    17f6:	2a 88       	ldd	r2, Y+18	; 0x12
    17f8:	39 88       	ldd	r3, Y+17	; 0x11
    17fa:	48 88       	ldd	r4, Y+16	; 0x10
    17fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    17fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    1800:	7d 84       	ldd	r7, Y+13	; 0x0d
    1802:	8c 84       	ldd	r8, Y+12	; 0x0c
    1804:	9b 84       	ldd	r9, Y+11	; 0x0b
    1806:	aa 84       	ldd	r10, Y+10	; 0x0a
    1808:	b9 84       	ldd	r11, Y+9	; 0x09
    180a:	c8 84       	ldd	r12, Y+8	; 0x08
    180c:	df 80       	ldd	r13, Y+7	; 0x07
    180e:	ee 80       	ldd	r14, Y+6	; 0x06
    1810:	fd 80       	ldd	r15, Y+5	; 0x05
    1812:	0c 81       	ldd	r16, Y+4	; 0x04
    1814:	1b 81       	ldd	r17, Y+3	; 0x03
    1816:	aa 81       	ldd	r26, Y+2	; 0x02
    1818:	b9 81       	ldd	r27, Y+1	; 0x01
    181a:	ce 0f       	add	r28, r30
    181c:	d1 1d       	adc	r29, r1
    181e:	0f b6       	in	r0, 0x3f	; 63
    1820:	f8 94       	cli
    1822:	de bf       	out	0x3e, r29	; 62
    1824:	0f be       	out	0x3f, r0	; 63
    1826:	cd bf       	out	0x3d, r28	; 61
    1828:	ed 01       	movw	r28, r26
    182a:	08 95       	ret

0000182c <__udivmodsi4>:
    182c:	a1 e2       	ldi	r26, 0x21	; 33
    182e:	1a 2e       	mov	r1, r26
    1830:	aa 1b       	sub	r26, r26
    1832:	bb 1b       	sub	r27, r27
    1834:	fd 01       	movw	r30, r26
    1836:	0d c0       	rjmp	.+26     	; 0x1852 <__udivmodsi4_ep>

00001838 <__udivmodsi4_loop>:
    1838:	aa 1f       	adc	r26, r26
    183a:	bb 1f       	adc	r27, r27
    183c:	ee 1f       	adc	r30, r30
    183e:	ff 1f       	adc	r31, r31
    1840:	a2 17       	cp	r26, r18
    1842:	b3 07       	cpc	r27, r19
    1844:	e4 07       	cpc	r30, r20
    1846:	f5 07       	cpc	r31, r21
    1848:	20 f0       	brcs	.+8      	; 0x1852 <__udivmodsi4_ep>
    184a:	a2 1b       	sub	r26, r18
    184c:	b3 0b       	sbc	r27, r19
    184e:	e4 0b       	sbc	r30, r20
    1850:	f5 0b       	sbc	r31, r21

00001852 <__udivmodsi4_ep>:
    1852:	66 1f       	adc	r22, r22
    1854:	77 1f       	adc	r23, r23
    1856:	88 1f       	adc	r24, r24
    1858:	99 1f       	adc	r25, r25
    185a:	1a 94       	dec	r1
    185c:	69 f7       	brne	.-38     	; 0x1838 <__udivmodsi4_loop>
    185e:	60 95       	com	r22
    1860:	70 95       	com	r23
    1862:	80 95       	com	r24
    1864:	90 95       	com	r25
    1866:	9b 01       	movw	r18, r22
    1868:	ac 01       	movw	r20, r24
    186a:	bd 01       	movw	r22, r26
    186c:	cf 01       	movw	r24, r30
    186e:	08 95       	ret

00001870 <__ftoa_engine>:
    1870:	28 30       	cpi	r18, 0x08	; 8
    1872:	08 f0       	brcs	.+2      	; 0x1876 <__ftoa_engine+0x6>
    1874:	27 e0       	ldi	r18, 0x07	; 7
    1876:	33 27       	eor	r19, r19
    1878:	da 01       	movw	r26, r20
    187a:	99 0f       	add	r25, r25
    187c:	31 1d       	adc	r19, r1
    187e:	87 fd       	sbrc	r24, 7
    1880:	91 60       	ori	r25, 0x01	; 1
    1882:	00 96       	adiw	r24, 0x00	; 0
    1884:	61 05       	cpc	r22, r1
    1886:	71 05       	cpc	r23, r1
    1888:	39 f4       	brne	.+14     	; 0x1898 <__ftoa_engine+0x28>
    188a:	32 60       	ori	r19, 0x02	; 2
    188c:	2e 5f       	subi	r18, 0xFE	; 254
    188e:	3d 93       	st	X+, r19
    1890:	30 e3       	ldi	r19, 0x30	; 48
    1892:	2a 95       	dec	r18
    1894:	e1 f7       	brne	.-8      	; 0x188e <__ftoa_engine+0x1e>
    1896:	08 95       	ret
    1898:	9f 3f       	cpi	r25, 0xFF	; 255
    189a:	30 f0       	brcs	.+12     	; 0x18a8 <__ftoa_engine+0x38>
    189c:	80 38       	cpi	r24, 0x80	; 128
    189e:	71 05       	cpc	r23, r1
    18a0:	61 05       	cpc	r22, r1
    18a2:	09 f0       	breq	.+2      	; 0x18a6 <__ftoa_engine+0x36>
    18a4:	3c 5f       	subi	r19, 0xFC	; 252
    18a6:	3c 5f       	subi	r19, 0xFC	; 252
    18a8:	3d 93       	st	X+, r19
    18aa:	91 30       	cpi	r25, 0x01	; 1
    18ac:	08 f0       	brcs	.+2      	; 0x18b0 <__ftoa_engine+0x40>
    18ae:	80 68       	ori	r24, 0x80	; 128
    18b0:	91 1d       	adc	r25, r1
    18b2:	df 93       	push	r29
    18b4:	cf 93       	push	r28
    18b6:	1f 93       	push	r17
    18b8:	0f 93       	push	r16
    18ba:	ff 92       	push	r15
    18bc:	ef 92       	push	r14
    18be:	19 2f       	mov	r17, r25
    18c0:	98 7f       	andi	r25, 0xF8	; 248
    18c2:	96 95       	lsr	r25
    18c4:	e9 2f       	mov	r30, r25
    18c6:	96 95       	lsr	r25
    18c8:	96 95       	lsr	r25
    18ca:	e9 0f       	add	r30, r25
    18cc:	ff 27       	eor	r31, r31
    18ce:	e2 5f       	subi	r30, 0xF2	; 242
    18d0:	fe 4f       	sbci	r31, 0xFE	; 254
    18d2:	99 27       	eor	r25, r25
    18d4:	33 27       	eor	r19, r19
    18d6:	ee 24       	eor	r14, r14
    18d8:	ff 24       	eor	r15, r15
    18da:	a7 01       	movw	r20, r14
    18dc:	e7 01       	movw	r28, r14
    18de:	05 90       	lpm	r0, Z+
    18e0:	08 94       	sec
    18e2:	07 94       	ror	r0
    18e4:	28 f4       	brcc	.+10     	; 0x18f0 <__ftoa_engine+0x80>
    18e6:	36 0f       	add	r19, r22
    18e8:	e7 1e       	adc	r14, r23
    18ea:	f8 1e       	adc	r15, r24
    18ec:	49 1f       	adc	r20, r25
    18ee:	51 1d       	adc	r21, r1
    18f0:	66 0f       	add	r22, r22
    18f2:	77 1f       	adc	r23, r23
    18f4:	88 1f       	adc	r24, r24
    18f6:	99 1f       	adc	r25, r25
    18f8:	06 94       	lsr	r0
    18fa:	a1 f7       	brne	.-24     	; 0x18e4 <__ftoa_engine+0x74>
    18fc:	05 90       	lpm	r0, Z+
    18fe:	07 94       	ror	r0
    1900:	28 f4       	brcc	.+10     	; 0x190c <__ftoa_engine+0x9c>
    1902:	e7 0e       	add	r14, r23
    1904:	f8 1e       	adc	r15, r24
    1906:	49 1f       	adc	r20, r25
    1908:	56 1f       	adc	r21, r22
    190a:	c1 1d       	adc	r28, r1
    190c:	77 0f       	add	r23, r23
    190e:	88 1f       	adc	r24, r24
    1910:	99 1f       	adc	r25, r25
    1912:	66 1f       	adc	r22, r22
    1914:	06 94       	lsr	r0
    1916:	a1 f7       	brne	.-24     	; 0x1900 <__ftoa_engine+0x90>
    1918:	05 90       	lpm	r0, Z+
    191a:	07 94       	ror	r0
    191c:	28 f4       	brcc	.+10     	; 0x1928 <__ftoa_engine+0xb8>
    191e:	f8 0e       	add	r15, r24
    1920:	49 1f       	adc	r20, r25
    1922:	56 1f       	adc	r21, r22
    1924:	c7 1f       	adc	r28, r23
    1926:	d1 1d       	adc	r29, r1
    1928:	88 0f       	add	r24, r24
    192a:	99 1f       	adc	r25, r25
    192c:	66 1f       	adc	r22, r22
    192e:	77 1f       	adc	r23, r23
    1930:	06 94       	lsr	r0
    1932:	a1 f7       	brne	.-24     	; 0x191c <__ftoa_engine+0xac>
    1934:	05 90       	lpm	r0, Z+
    1936:	07 94       	ror	r0
    1938:	20 f4       	brcc	.+8      	; 0x1942 <__ftoa_engine+0xd2>
    193a:	49 0f       	add	r20, r25
    193c:	56 1f       	adc	r21, r22
    193e:	c7 1f       	adc	r28, r23
    1940:	d8 1f       	adc	r29, r24
    1942:	99 0f       	add	r25, r25
    1944:	66 1f       	adc	r22, r22
    1946:	77 1f       	adc	r23, r23
    1948:	88 1f       	adc	r24, r24
    194a:	06 94       	lsr	r0
    194c:	a9 f7       	brne	.-22     	; 0x1938 <__ftoa_engine+0xc8>
    194e:	84 91       	lpm	r24, Z+
    1950:	10 95       	com	r17
    1952:	17 70       	andi	r17, 0x07	; 7
    1954:	41 f0       	breq	.+16     	; 0x1966 <__ftoa_engine+0xf6>
    1956:	d6 95       	lsr	r29
    1958:	c7 95       	ror	r28
    195a:	57 95       	ror	r21
    195c:	47 95       	ror	r20
    195e:	f7 94       	ror	r15
    1960:	e7 94       	ror	r14
    1962:	1a 95       	dec	r17
    1964:	c1 f7       	brne	.-16     	; 0x1956 <__ftoa_engine+0xe6>
    1966:	e4 eb       	ldi	r30, 0xB4	; 180
    1968:	f0 e0       	ldi	r31, 0x00	; 0
    196a:	68 94       	set
    196c:	15 90       	lpm	r1, Z+
    196e:	15 91       	lpm	r17, Z+
    1970:	35 91       	lpm	r19, Z+
    1972:	65 91       	lpm	r22, Z+
    1974:	95 91       	lpm	r25, Z+
    1976:	05 90       	lpm	r0, Z+
    1978:	7f e2       	ldi	r23, 0x2F	; 47
    197a:	73 95       	inc	r23
    197c:	e1 18       	sub	r14, r1
    197e:	f1 0a       	sbc	r15, r17
    1980:	43 0b       	sbc	r20, r19
    1982:	56 0b       	sbc	r21, r22
    1984:	c9 0b       	sbc	r28, r25
    1986:	d0 09       	sbc	r29, r0
    1988:	c0 f7       	brcc	.-16     	; 0x197a <__ftoa_engine+0x10a>
    198a:	e1 0c       	add	r14, r1
    198c:	f1 1e       	adc	r15, r17
    198e:	43 1f       	adc	r20, r19
    1990:	56 1f       	adc	r21, r22
    1992:	c9 1f       	adc	r28, r25
    1994:	d0 1d       	adc	r29, r0
    1996:	7e f4       	brtc	.+30     	; 0x19b6 <__ftoa_engine+0x146>
    1998:	70 33       	cpi	r23, 0x30	; 48
    199a:	11 f4       	brne	.+4      	; 0x19a0 <__ftoa_engine+0x130>
    199c:	8a 95       	dec	r24
    199e:	e6 cf       	rjmp	.-52     	; 0x196c <__ftoa_engine+0xfc>
    19a0:	e8 94       	clt
    19a2:	01 50       	subi	r16, 0x01	; 1
    19a4:	30 f0       	brcs	.+12     	; 0x19b2 <__ftoa_engine+0x142>
    19a6:	08 0f       	add	r16, r24
    19a8:	0a f4       	brpl	.+2      	; 0x19ac <__ftoa_engine+0x13c>
    19aa:	00 27       	eor	r16, r16
    19ac:	02 17       	cp	r16, r18
    19ae:	08 f4       	brcc	.+2      	; 0x19b2 <__ftoa_engine+0x142>
    19b0:	20 2f       	mov	r18, r16
    19b2:	23 95       	inc	r18
    19b4:	02 2f       	mov	r16, r18
    19b6:	7a 33       	cpi	r23, 0x3A	; 58
    19b8:	28 f0       	brcs	.+10     	; 0x19c4 <__ftoa_engine+0x154>
    19ba:	79 e3       	ldi	r23, 0x39	; 57
    19bc:	7d 93       	st	X+, r23
    19be:	2a 95       	dec	r18
    19c0:	e9 f7       	brne	.-6      	; 0x19bc <__ftoa_engine+0x14c>
    19c2:	10 c0       	rjmp	.+32     	; 0x19e4 <__ftoa_engine+0x174>
    19c4:	7d 93       	st	X+, r23
    19c6:	2a 95       	dec	r18
    19c8:	89 f6       	brne	.-94     	; 0x196c <__ftoa_engine+0xfc>
    19ca:	06 94       	lsr	r0
    19cc:	97 95       	ror	r25
    19ce:	67 95       	ror	r22
    19d0:	37 95       	ror	r19
    19d2:	17 95       	ror	r17
    19d4:	17 94       	ror	r1
    19d6:	e1 18       	sub	r14, r1
    19d8:	f1 0a       	sbc	r15, r17
    19da:	43 0b       	sbc	r20, r19
    19dc:	56 0b       	sbc	r21, r22
    19de:	c9 0b       	sbc	r28, r25
    19e0:	d0 09       	sbc	r29, r0
    19e2:	98 f0       	brcs	.+38     	; 0x1a0a <__ftoa_engine+0x19a>
    19e4:	23 95       	inc	r18
    19e6:	7e 91       	ld	r23, -X
    19e8:	73 95       	inc	r23
    19ea:	7a 33       	cpi	r23, 0x3A	; 58
    19ec:	08 f0       	brcs	.+2      	; 0x19f0 <__ftoa_engine+0x180>
    19ee:	70 e3       	ldi	r23, 0x30	; 48
    19f0:	7c 93       	st	X, r23
    19f2:	20 13       	cpse	r18, r16
    19f4:	b8 f7       	brcc	.-18     	; 0x19e4 <__ftoa_engine+0x174>
    19f6:	7e 91       	ld	r23, -X
    19f8:	70 61       	ori	r23, 0x10	; 16
    19fa:	7d 93       	st	X+, r23
    19fc:	30 f0       	brcs	.+12     	; 0x1a0a <__ftoa_engine+0x19a>
    19fe:	83 95       	inc	r24
    1a00:	71 e3       	ldi	r23, 0x31	; 49
    1a02:	7d 93       	st	X+, r23
    1a04:	70 e3       	ldi	r23, 0x30	; 48
    1a06:	2a 95       	dec	r18
    1a08:	e1 f7       	brne	.-8      	; 0x1a02 <__ftoa_engine+0x192>
    1a0a:	11 24       	eor	r1, r1
    1a0c:	ef 90       	pop	r14
    1a0e:	ff 90       	pop	r15
    1a10:	0f 91       	pop	r16
    1a12:	1f 91       	pop	r17
    1a14:	cf 91       	pop	r28
    1a16:	df 91       	pop	r29
    1a18:	99 27       	eor	r25, r25
    1a1a:	87 fd       	sbrc	r24, 7
    1a1c:	90 95       	com	r25
    1a1e:	08 95       	ret

00001a20 <strnlen_P>:
    1a20:	fc 01       	movw	r30, r24
    1a22:	05 90       	lpm	r0, Z+
    1a24:	61 50       	subi	r22, 0x01	; 1
    1a26:	70 40       	sbci	r23, 0x00	; 0
    1a28:	01 10       	cpse	r0, r1
    1a2a:	d8 f7       	brcc	.-10     	; 0x1a22 <strnlen_P+0x2>
    1a2c:	80 95       	com	r24
    1a2e:	90 95       	com	r25
    1a30:	8e 0f       	add	r24, r30
    1a32:	9f 1f       	adc	r25, r31
    1a34:	08 95       	ret

00001a36 <strnlen>:
    1a36:	fc 01       	movw	r30, r24
    1a38:	61 50       	subi	r22, 0x01	; 1
    1a3a:	70 40       	sbci	r23, 0x00	; 0
    1a3c:	01 90       	ld	r0, Z+
    1a3e:	01 10       	cpse	r0, r1
    1a40:	d8 f7       	brcc	.-10     	; 0x1a38 <strnlen+0x2>
    1a42:	80 95       	com	r24
    1a44:	90 95       	com	r25
    1a46:	8e 0f       	add	r24, r30
    1a48:	9f 1f       	adc	r25, r31
    1a4a:	08 95       	ret

00001a4c <fputc>:
    1a4c:	0f 93       	push	r16
    1a4e:	1f 93       	push	r17
    1a50:	cf 93       	push	r28
    1a52:	df 93       	push	r29
    1a54:	8c 01       	movw	r16, r24
    1a56:	eb 01       	movw	r28, r22
    1a58:	8b 81       	ldd	r24, Y+3	; 0x03
    1a5a:	81 ff       	sbrs	r24, 1
    1a5c:	1b c0       	rjmp	.+54     	; 0x1a94 <fputc+0x48>
    1a5e:	82 ff       	sbrs	r24, 2
    1a60:	0d c0       	rjmp	.+26     	; 0x1a7c <fputc+0x30>
    1a62:	2e 81       	ldd	r18, Y+6	; 0x06
    1a64:	3f 81       	ldd	r19, Y+7	; 0x07
    1a66:	8c 81       	ldd	r24, Y+4	; 0x04
    1a68:	9d 81       	ldd	r25, Y+5	; 0x05
    1a6a:	28 17       	cp	r18, r24
    1a6c:	39 07       	cpc	r19, r25
    1a6e:	64 f4       	brge	.+24     	; 0x1a88 <fputc+0x3c>
    1a70:	e8 81       	ld	r30, Y
    1a72:	f9 81       	ldd	r31, Y+1	; 0x01
    1a74:	01 93       	st	Z+, r16
    1a76:	f9 83       	std	Y+1, r31	; 0x01
    1a78:	e8 83       	st	Y, r30
    1a7a:	06 c0       	rjmp	.+12     	; 0x1a88 <fputc+0x3c>
    1a7c:	e8 85       	ldd	r30, Y+8	; 0x08
    1a7e:	f9 85       	ldd	r31, Y+9	; 0x09
    1a80:	80 2f       	mov	r24, r16
    1a82:	09 95       	icall
    1a84:	89 2b       	or	r24, r25
    1a86:	31 f4       	brne	.+12     	; 0x1a94 <fputc+0x48>
    1a88:	8e 81       	ldd	r24, Y+6	; 0x06
    1a8a:	9f 81       	ldd	r25, Y+7	; 0x07
    1a8c:	01 96       	adiw	r24, 0x01	; 1
    1a8e:	9f 83       	std	Y+7, r25	; 0x07
    1a90:	8e 83       	std	Y+6, r24	; 0x06
    1a92:	02 c0       	rjmp	.+4      	; 0x1a98 <fputc+0x4c>
    1a94:	0f ef       	ldi	r16, 0xFF	; 255
    1a96:	1f ef       	ldi	r17, 0xFF	; 255
    1a98:	c8 01       	movw	r24, r16
    1a9a:	df 91       	pop	r29
    1a9c:	cf 91       	pop	r28
    1a9e:	1f 91       	pop	r17
    1aa0:	0f 91       	pop	r16
    1aa2:	08 95       	ret

00001aa4 <sprintf>:
    1aa4:	ae e0       	ldi	r26, 0x0E	; 14
    1aa6:	b0 e0       	ldi	r27, 0x00	; 0
    1aa8:	e8 e5       	ldi	r30, 0x58	; 88
    1aaa:	fd e0       	ldi	r31, 0x0D	; 13
    1aac:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__prologue_saves__+0x1c>
    1ab0:	0d 89       	ldd	r16, Y+21	; 0x15
    1ab2:	1e 89       	ldd	r17, Y+22	; 0x16
    1ab4:	86 e0       	ldi	r24, 0x06	; 6
    1ab6:	8c 83       	std	Y+4, r24	; 0x04
    1ab8:	1a 83       	std	Y+2, r17	; 0x02
    1aba:	09 83       	std	Y+1, r16	; 0x01
    1abc:	8f ef       	ldi	r24, 0xFF	; 255
    1abe:	9f e7       	ldi	r25, 0x7F	; 127
    1ac0:	9e 83       	std	Y+6, r25	; 0x06
    1ac2:	8d 83       	std	Y+5, r24	; 0x05
    1ac4:	9e 01       	movw	r18, r28
    1ac6:	27 5e       	subi	r18, 0xE7	; 231
    1ac8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aca:	ce 01       	movw	r24, r28
    1acc:	01 96       	adiw	r24, 0x01	; 1
    1ace:	6f 89       	ldd	r22, Y+23	; 0x17
    1ad0:	78 8d       	ldd	r23, Y+24	; 0x18
    1ad2:	a9 01       	movw	r20, r18
    1ad4:	0e 94 22 06 	call	0xc44	; 0xc44 <vfprintf>
    1ad8:	2f 81       	ldd	r18, Y+7	; 0x07
    1ada:	38 85       	ldd	r19, Y+8	; 0x08
    1adc:	02 0f       	add	r16, r18
    1ade:	13 1f       	adc	r17, r19
    1ae0:	f8 01       	movw	r30, r16
    1ae2:	10 82       	st	Z, r1
    1ae4:	2e 96       	adiw	r28, 0x0e	; 14
    1ae6:	e4 e0       	ldi	r30, 0x04	; 4
    1ae8:	0c 94 09 0c 	jmp	0x1812	; 0x1812 <__epilogue_restores__+0x1c>

00001aec <__ultoa_invert>:
    1aec:	fa 01       	movw	r30, r20
    1aee:	aa 27       	eor	r26, r26
    1af0:	28 30       	cpi	r18, 0x08	; 8
    1af2:	51 f1       	breq	.+84     	; 0x1b48 <__ultoa_invert+0x5c>
    1af4:	20 31       	cpi	r18, 0x10	; 16
    1af6:	81 f1       	breq	.+96     	; 0x1b58 <__ultoa_invert+0x6c>
    1af8:	e8 94       	clt
    1afa:	6f 93       	push	r22
    1afc:	6e 7f       	andi	r22, 0xFE	; 254
    1afe:	6e 5f       	subi	r22, 0xFE	; 254
    1b00:	7f 4f       	sbci	r23, 0xFF	; 255
    1b02:	8f 4f       	sbci	r24, 0xFF	; 255
    1b04:	9f 4f       	sbci	r25, 0xFF	; 255
    1b06:	af 4f       	sbci	r26, 0xFF	; 255
    1b08:	b1 e0       	ldi	r27, 0x01	; 1
    1b0a:	3e d0       	rcall	.+124    	; 0x1b88 <__ultoa_invert+0x9c>
    1b0c:	b4 e0       	ldi	r27, 0x04	; 4
    1b0e:	3c d0       	rcall	.+120    	; 0x1b88 <__ultoa_invert+0x9c>
    1b10:	67 0f       	add	r22, r23
    1b12:	78 1f       	adc	r23, r24
    1b14:	89 1f       	adc	r24, r25
    1b16:	9a 1f       	adc	r25, r26
    1b18:	a1 1d       	adc	r26, r1
    1b1a:	68 0f       	add	r22, r24
    1b1c:	79 1f       	adc	r23, r25
    1b1e:	8a 1f       	adc	r24, r26
    1b20:	91 1d       	adc	r25, r1
    1b22:	a1 1d       	adc	r26, r1
    1b24:	6a 0f       	add	r22, r26
    1b26:	71 1d       	adc	r23, r1
    1b28:	81 1d       	adc	r24, r1
    1b2a:	91 1d       	adc	r25, r1
    1b2c:	a1 1d       	adc	r26, r1
    1b2e:	20 d0       	rcall	.+64     	; 0x1b70 <__ultoa_invert+0x84>
    1b30:	09 f4       	brne	.+2      	; 0x1b34 <__ultoa_invert+0x48>
    1b32:	68 94       	set
    1b34:	3f 91       	pop	r19
    1b36:	2a e0       	ldi	r18, 0x0A	; 10
    1b38:	26 9f       	mul	r18, r22
    1b3a:	11 24       	eor	r1, r1
    1b3c:	30 19       	sub	r19, r0
    1b3e:	30 5d       	subi	r19, 0xD0	; 208
    1b40:	31 93       	st	Z+, r19
    1b42:	de f6       	brtc	.-74     	; 0x1afa <__ultoa_invert+0xe>
    1b44:	cf 01       	movw	r24, r30
    1b46:	08 95       	ret
    1b48:	46 2f       	mov	r20, r22
    1b4a:	47 70       	andi	r20, 0x07	; 7
    1b4c:	40 5d       	subi	r20, 0xD0	; 208
    1b4e:	41 93       	st	Z+, r20
    1b50:	b3 e0       	ldi	r27, 0x03	; 3
    1b52:	0f d0       	rcall	.+30     	; 0x1b72 <__ultoa_invert+0x86>
    1b54:	c9 f7       	brne	.-14     	; 0x1b48 <__ultoa_invert+0x5c>
    1b56:	f6 cf       	rjmp	.-20     	; 0x1b44 <__ultoa_invert+0x58>
    1b58:	46 2f       	mov	r20, r22
    1b5a:	4f 70       	andi	r20, 0x0F	; 15
    1b5c:	40 5d       	subi	r20, 0xD0	; 208
    1b5e:	4a 33       	cpi	r20, 0x3A	; 58
    1b60:	18 f0       	brcs	.+6      	; 0x1b68 <__ultoa_invert+0x7c>
    1b62:	49 5d       	subi	r20, 0xD9	; 217
    1b64:	31 fd       	sbrc	r19, 1
    1b66:	40 52       	subi	r20, 0x20	; 32
    1b68:	41 93       	st	Z+, r20
    1b6a:	02 d0       	rcall	.+4      	; 0x1b70 <__ultoa_invert+0x84>
    1b6c:	a9 f7       	brne	.-22     	; 0x1b58 <__ultoa_invert+0x6c>
    1b6e:	ea cf       	rjmp	.-44     	; 0x1b44 <__ultoa_invert+0x58>
    1b70:	b4 e0       	ldi	r27, 0x04	; 4
    1b72:	a6 95       	lsr	r26
    1b74:	97 95       	ror	r25
    1b76:	87 95       	ror	r24
    1b78:	77 95       	ror	r23
    1b7a:	67 95       	ror	r22
    1b7c:	ba 95       	dec	r27
    1b7e:	c9 f7       	brne	.-14     	; 0x1b72 <__ultoa_invert+0x86>
    1b80:	00 97       	sbiw	r24, 0x00	; 0
    1b82:	61 05       	cpc	r22, r1
    1b84:	71 05       	cpc	r23, r1
    1b86:	08 95       	ret
    1b88:	9b 01       	movw	r18, r22
    1b8a:	ac 01       	movw	r20, r24
    1b8c:	0a 2e       	mov	r0, r26
    1b8e:	06 94       	lsr	r0
    1b90:	57 95       	ror	r21
    1b92:	47 95       	ror	r20
    1b94:	37 95       	ror	r19
    1b96:	27 95       	ror	r18
    1b98:	ba 95       	dec	r27
    1b9a:	c9 f7       	brne	.-14     	; 0x1b8e <__ultoa_invert+0xa2>
    1b9c:	62 0f       	add	r22, r18
    1b9e:	73 1f       	adc	r23, r19
    1ba0:	84 1f       	adc	r24, r20
    1ba2:	95 1f       	adc	r25, r21
    1ba4:	a0 1d       	adc	r26, r0
    1ba6:	08 95       	ret

00001ba8 <_exit>:
    1ba8:	f8 94       	cli

00001baa <__stop_program>:
    1baa:	ff cf       	rjmp	.-2      	; 0x1baa <__stop_program>
