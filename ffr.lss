
ffr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ad6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000034  00800100  00800100  00001b4a  2**0
                  ALLOC
  2 .debug_aranges 00000080  00000000  00000000  00001b4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000018e  00000000  00000000  00001bca  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000009b7  00000000  00000000  00001d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000480  00000000  00000000  0000270f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000728  00000000  00000000  00002b8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000150  00000000  00000000  000032b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000310  00000000  00000000  00003408  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000003a5  00000000  00000000  00003718  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00003abd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__ctors_end>
       4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
       c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      10:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      14:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      18:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      1c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      20:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      24:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      28:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      2c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      30:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      34:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      38:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      3c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      40:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      44:	0c 94 15 02 	jmp	0x42a	; 0x42a <__vector_17>
      48:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      4c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      50:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      54:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__vector_21>
      58:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      5c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      60:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      64:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      68:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      6c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      70:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      74:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      78:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      7c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      80:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__vector_32>
      84:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      88:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      8c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      90:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      94:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      98:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      9c:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      a0:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      a4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>
      a8:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__bad_interrupt>

000000ac <__c.1790>:
      ac:	6e 61 6e 00                                         nan.

000000b0 <__c.1788>:
      b0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     100:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     110:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     120:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     130:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     140:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     150:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     160:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     170:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     180:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     190:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ae <__ctors_end>:
     1ae:	11 24       	eor	r1, r1
     1b0:	1f be       	out	0x3f, r1	; 63
     1b2:	cf ef       	ldi	r28, 0xFF	; 255
     1b4:	da e0       	ldi	r29, 0x0A	; 10
     1b6:	de bf       	out	0x3e, r29	; 62
     1b8:	cd bf       	out	0x3d, r28	; 61

000001ba <__do_clear_bss>:
     1ba:	11 e0       	ldi	r17, 0x01	; 1
     1bc:	a0 e0       	ldi	r26, 0x00	; 0
     1be:	b1 e0       	ldi	r27, 0x01	; 1
     1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <.do_clear_bss_start>

000001c2 <.do_clear_bss_loop>:
     1c2:	1d 92       	st	X+, r1

000001c4 <.do_clear_bss_start>:
     1c4:	a4 33       	cpi	r26, 0x34	; 52
     1c6:	b1 07       	cpc	r27, r17
     1c8:	e1 f7       	brne	.-8      	; 0x1c2 <.do_clear_bss_loop>
     1ca:	0e 94 38 01 	call	0x270	; 0x270 <main>
     1ce:	0c 94 69 0d 	jmp	0x1ad2	; 0x1ad2 <_exit>

000001d2 <__bad_interrupt>:
     1d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d6 <startTimer>:
}

void startTimer()
{
	//Refresh Loop Timer1  
	TCCR0A = (1 << WGM01);//Set CTC
     1d6:	82 e0       	ldi	r24, 0x02	; 2
     1d8:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00) | (1 << CS01);//prescalar to
     1da:	93 e0       	ldi	r25, 0x03	; 3
     1dc:	95 bd       	out	0x25, r25	; 37
	OCR0A = 250;//Compare Ticks 
     1de:	9a ef       	ldi	r25, 0xFA	; 250
     1e0:	97 bd       	out	0x27, r25	; 39
    TIMSK0 = (1 << OCIE0A);//Enable Timer Interrupts
     1e2:	80 93 6e 00 	sts	0x006E, r24
	
	milliseconds = 0;
     1e6:	10 92 00 01 	sts	0x0100, r1
     1ea:	10 92 01 01 	sts	0x0101, r1
     1ee:	10 92 02 01 	sts	0x0102, r1
     1f2:	10 92 03 01 	sts	0x0103, r1
}
     1f6:	08 95       	ret

000001f8 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     1f8:	1f 92       	push	r1
     1fa:	0f 92       	push	r0
     1fc:	0f b6       	in	r0, 0x3f	; 63
     1fe:	0f 92       	push	r0
     200:	11 24       	eor	r1, r1
     202:	2f 93       	push	r18
     204:	3f 93       	push	r19
     206:	4f 93       	push	r20
     208:	5f 93       	push	r21
     20a:	6f 93       	push	r22
     20c:	7f 93       	push	r23
     20e:	8f 93       	push	r24
     210:	9f 93       	push	r25
     212:	af 93       	push	r26
     214:	bf 93       	push	r27
     216:	ef 93       	push	r30
     218:	ff 93       	push	r31
	milliseconds++;	
     21a:	80 91 00 01 	lds	r24, 0x0100
     21e:	90 91 01 01 	lds	r25, 0x0101
     222:	a0 91 02 01 	lds	r26, 0x0102
     226:	b0 91 03 01 	lds	r27, 0x0103
     22a:	01 96       	adiw	r24, 0x01	; 1
     22c:	a1 1d       	adc	r26, r1
     22e:	b1 1d       	adc	r27, r1
     230:	80 93 00 01 	sts	0x0100, r24
     234:	90 93 01 01 	sts	0x0101, r25
     238:	a0 93 02 01 	sts	0x0102, r26
     23c:	b0 93 03 01 	sts	0x0103, r27
	getIRSensorValue(&PORTD, PD4, 0);
     240:	8b e2       	ldi	r24, 0x2B	; 43
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	64 e0       	ldi	r22, 0x04	; 4
     246:	40 e0       	ldi	r20, 0x00	; 0
     248:	50 e0       	ldi	r21, 0x00	; 0
     24a:	0e 94 a9 05 	call	0xb52	; 0xb52 <getIRSensorValue>
}
     24e:	ff 91       	pop	r31
     250:	ef 91       	pop	r30
     252:	bf 91       	pop	r27
     254:	af 91       	pop	r26
     256:	9f 91       	pop	r25
     258:	8f 91       	pop	r24
     25a:	7f 91       	pop	r23
     25c:	6f 91       	pop	r22
     25e:	5f 91       	pop	r21
     260:	4f 91       	pop	r20
     262:	3f 91       	pop	r19
     264:	2f 91       	pop	r18
     266:	0f 90       	pop	r0
     268:	0f be       	out	0x3f, r0	; 63
     26a:	0f 90       	pop	r0
     26c:	1f 90       	pop	r1
     26e:	18 95       	reti

00000270 <main>:
extern StepperMotor rightMotor;
volatile unsigned long milliseconds;
void startTimer(void);

int main(void)
{
     270:	cf 92       	push	r12
     272:	df 92       	push	r13
     274:	ef 92       	push	r14
     276:	ff 92       	push	r15
     278:	0f 93       	push	r16
     27a:	1f 93       	push	r17
	setupStepperMotor();
     27c:	0e 94 81 01 	call	0x302	; 0x302 <setupStepperMotor>
}

void startTimer()
{
	//Refresh Loop Timer1  
	TCCR0A = (1 << WGM01);//Set CTC
     280:	82 e0       	ldi	r24, 0x02	; 2
     282:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00) | (1 << CS01);//prescalar to
     284:	93 e0       	ldi	r25, 0x03	; 3
     286:	95 bd       	out	0x25, r25	; 37
	OCR0A = 250;//Compare Ticks 
     288:	9a ef       	ldi	r25, 0xFA	; 250
     28a:	97 bd       	out	0x27, r25	; 39
    TIMSK0 = (1 << OCIE0A);//Enable Timer Interrupts
     28c:	80 93 6e 00 	sts	0x006E, r24
	
	milliseconds = 0;
     290:	10 92 00 01 	sts	0x0100, r1
     294:	10 92 01 01 	sts	0x0101, r1
     298:	10 92 02 01 	sts	0x0102, r1
     29c:	10 92 03 01 	sts	0x0103, r1

int main(void)
{
	setupStepperMotor();
	startTimer();
	setupADC();
     2a0:	0e 94 a1 05 	call	0xb42	; 0xb42 <setupADC>
	
//	USART_init();
	
	turnOnTimers(1,1);
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	61 e0       	ldi	r22, 0x01	; 1
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	0e 94 aa 02 	call	0x554	; 0x554 <turnOnTimers>
	setDirection(0,0);
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	60 e0       	ldi	r22, 0x00	; 0
     2b6:	70 e0       	ldi	r23, 0x00	; 0
     2b8:	0e 94 6d 02 	call	0x4da	; 0x4da <setDirection>
	enableDrive(1);
     2bc:	81 e0       	ldi	r24, 0x01	; 1
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 a4 01 	call	0x348	; 0x348 <enableDrive>
	
	straight(4000, 0, 4000, 0, 4000, 4000);
     2c4:	60 ea       	ldi	r22, 0xA0	; 160
     2c6:	7f e0       	ldi	r23, 0x0F	; 15
     2c8:	80 e0       	ldi	r24, 0x00	; 0
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	40 e0       	ldi	r20, 0x00	; 0
     2ce:	50 e0       	ldi	r21, 0x00	; 0
     2d0:	20 ea       	ldi	r18, 0xA0	; 160
     2d2:	3f e0       	ldi	r19, 0x0F	; 15
     2d4:	00 e0       	ldi	r16, 0x00	; 0
     2d6:	10 e0       	ldi	r17, 0x00	; 0
     2d8:	f0 ea       	ldi	r31, 0xA0	; 160
     2da:	ef 2e       	mov	r14, r31
     2dc:	ff e0       	ldi	r31, 0x0F	; 15
     2de:	ff 2e       	mov	r15, r31
     2e0:	e0 ea       	ldi	r30, 0xA0	; 160
     2e2:	ce 2e       	mov	r12, r30
     2e4:	ef e0       	ldi	r30, 0x0F	; 15
     2e6:	de 2e       	mov	r13, r30
     2e8:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <straight>
	
	turnOnTimers(0, 0);
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	70 e0       	ldi	r23, 0x00	; 0
     2f4:	0e 94 aa 02 	call	0x554	; 0x554 <turnOnTimers>
	enableDrive(0);
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	0e 94 a4 01 	call	0x348	; 0x348 <enableDrive>
     300:	ff cf       	rjmp	.-2      	; 0x300 <main+0x90>

00000302 <setupStepperMotor>:
}

void setupStepperMotor()
{
	//Motor Pins are D2 and D4 on arduino nano
	DDRD |= (1 << PORTD1) | (1 << PORTD2) | (1 << PORTD3);
     302:	8a b1       	in	r24, 0x0a	; 10
     304:	8e 60       	ori	r24, 0x0E	; 14
     306:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << PORTB1) | (1 << PORTB0) | (1 << PORTB6) | (1 << PORTB7);
     308:	84 b1       	in	r24, 0x04	; 4
     30a:	83 6c       	ori	r24, 0xC3	; 195
     30c:	84 b9       	out	0x04, r24	; 4
	
	//Set to CTC
	TCCR1B = (1 << WGM12);
     30e:	88 e0       	ldi	r24, 0x08	; 8
     310:	80 93 81 00 	sts	0x0081, r24
	TCCR3B = (1 << WGM32);
     314:	80 93 91 00 	sts	0x0091, r24
	
	//Compare Ticks
	OCR1A = 0;
     318:	10 92 89 00 	sts	0x0089, r1
     31c:	10 92 88 00 	sts	0x0088, r1
	OCR3A = 0;
     320:	10 92 99 00 	sts	0x0099, r1
     324:	10 92 98 00 	sts	0x0098, r1
	
	//Enable Interrupts
	TIMSK1 = (1 << OCIE1A);
     328:	82 e0       	ldi	r24, 0x02	; 2
     32a:	80 93 6f 00 	sts	0x006F, r24
	TIMSK3 = (1 << OCIE3A);
     32e:	80 93 71 00 	sts	0x0071, r24
	
	//Set Prescalar to 0
	OCR1B = 0;
     332:	10 92 8b 00 	sts	0x008B, r1
     336:	10 92 8a 00 	sts	0x008A, r1
	OCR3B = 0;
     33a:	10 92 9b 00 	sts	0x009B, r1
     33e:	10 92 9a 00 	sts	0x009A, r1
	
	//Enable Interrupts
	sei(); 
     342:	78 94       	sei
{
	
	if(left)
		PORTB &= ~(1 << PB6);
	else
		PORTB |= (1 << PB6);
     344:	2e 9a       	sbi	0x05, 6	; 5
	
	//Enable Interrupts
	sei(); 
	
	enableDrive(0);	
}
     346:	08 95       	ret

00000348 <enableDrive>:

void enableDrive(int left)
{
	
	if(left)
     348:	89 2b       	or	r24, r25
     34a:	11 f0       	breq	.+4      	; 0x350 <enableDrive+0x8>
		PORTB &= ~(1 << PB6);
     34c:	2e 98       	cbi	0x05, 6	; 5
     34e:	08 95       	ret
	else
		PORTB |= (1 << PB6);
     350:	2e 9a       	sbi	0x05, 6	; 5
     352:	08 95       	ret

00000354 <pulseMotor>:
}

/* Pulse port and pin for 10 microseconds */
void pulseMotor(volatile uint8_t *port, uint8_t pin)
{
     354:	fc 01       	movw	r30, r24
	//Send Pulse to Motor
	(*port) |= (1 << pin);
     356:	20 81       	ld	r18, Z
     358:	81 e0       	ldi	r24, 0x01	; 1
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	02 c0       	rjmp	.+4      	; 0x362 <pulseMotor+0xe>
     35e:	88 0f       	add	r24, r24
     360:	99 1f       	adc	r25, r25
     362:	6a 95       	dec	r22
     364:	e2 f7       	brpl	.-8      	; 0x35e <pulseMotor+0xa>
     366:	28 2b       	or	r18, r24
     368:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     36a:	9a e1       	ldi	r25, 0x1A	; 26
     36c:	9a 95       	dec	r25
     36e:	f1 f7       	brne	.-4      	; 0x36c <pulseMotor+0x18>
	_delay_us(5);
	(*port) &= ~(1 << pin);
     370:	20 81       	ld	r18, Z
     372:	80 95       	com	r24
     374:	82 23       	and	r24, r18
     376:	80 83       	st	Z, r24
}
     378:	08 95       	ret

0000037a <__vector_32>:
	OCR1A = leftMotor.delayCounter;
}

/* RIGHT MOTOR CONTROL */
ISR(TIMER3_COMPA_vect)
{	
     37a:	1f 92       	push	r1
     37c:	0f 92       	push	r0
     37e:	0f b6       	in	r0, 0x3f	; 63
     380:	0f 92       	push	r0
     382:	11 24       	eor	r1, r1
     384:	2f 93       	push	r18
     386:	3f 93       	push	r19
     388:	4f 93       	push	r20
     38a:	5f 93       	push	r21
     38c:	6f 93       	push	r22
     38e:	7f 93       	push	r23
     390:	8f 93       	push	r24
     392:	9f 93       	push	r25
     394:	af 93       	push	r26
     396:	bf 93       	push	r27
     398:	ef 93       	push	r30
     39a:	ff 93       	push	r31
	//Pulse and increment motor
	pulseMotor(&PORTB, PB7);
     39c:	85 e2       	ldi	r24, 0x25	; 37
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	67 e0       	ldi	r22, 0x07	; 7
     3a2:	0e 94 aa 01 	call	0x354	; 0x354 <pulseMotor>
	rightMotor.stepCount++;
     3a6:	80 91 04 01 	lds	r24, 0x0104
     3aa:	90 91 05 01 	lds	r25, 0x0105
     3ae:	a0 91 06 01 	lds	r26, 0x0106
     3b2:	b0 91 07 01 	lds	r27, 0x0107
     3b6:	01 96       	adiw	r24, 0x01	; 1
     3b8:	a1 1d       	adc	r26, r1
     3ba:	b1 1d       	adc	r27, r1
     3bc:	80 93 04 01 	sts	0x0104, r24
     3c0:	90 93 05 01 	sts	0x0105, r25
     3c4:	a0 93 06 01 	sts	0x0106, r26
     3c8:	b0 93 07 01 	sts	0x0107, r27
	
	rightMotor.delayCounter = rightMotor.currentStepDelay;
     3cc:	80 91 08 01 	lds	r24, 0x0108
     3d0:	90 91 09 01 	lds	r25, 0x0109
     3d4:	a0 91 0a 01 	lds	r26, 0x010A
     3d8:	b0 91 0b 01 	lds	r27, 0x010B
     3dc:	80 93 0c 01 	sts	0x010C, r24
     3e0:	90 93 0d 01 	sts	0x010D, r25
     3e4:	a0 93 0e 01 	sts	0x010E, r26
     3e8:	b0 93 0f 01 	sts	0x010F, r27

	OCR3A = rightMotor.delayCounter;	
     3ec:	60 91 0c 01 	lds	r22, 0x010C
     3f0:	70 91 0d 01 	lds	r23, 0x010D
     3f4:	80 91 0e 01 	lds	r24, 0x010E
     3f8:	90 91 0f 01 	lds	r25, 0x010F
     3fc:	0e 94 38 0a 	call	0x1470	; 0x1470 <__fixunssfsi>
     400:	70 93 99 00 	sts	0x0099, r23
     404:	60 93 98 00 	sts	0x0098, r22
}
     408:	ff 91       	pop	r31
     40a:	ef 91       	pop	r30
     40c:	bf 91       	pop	r27
     40e:	af 91       	pop	r26
     410:	9f 91       	pop	r25
     412:	8f 91       	pop	r24
     414:	7f 91       	pop	r23
     416:	6f 91       	pop	r22
     418:	5f 91       	pop	r21
     41a:	4f 91       	pop	r20
     41c:	3f 91       	pop	r19
     41e:	2f 91       	pop	r18
     420:	0f 90       	pop	r0
     422:	0f be       	out	0x3f, r0	; 63
     424:	0f 90       	pop	r0
     426:	1f 90       	pop	r1
     428:	18 95       	reti

0000042a <__vector_17>:



/* LEFT MOTOR CONTROL */
ISR(TIMER1_COMPA_vect)
{
     42a:	1f 92       	push	r1
     42c:	0f 92       	push	r0
     42e:	0f b6       	in	r0, 0x3f	; 63
     430:	0f 92       	push	r0
     432:	11 24       	eor	r1, r1
     434:	2f 93       	push	r18
     436:	3f 93       	push	r19
     438:	4f 93       	push	r20
     43a:	5f 93       	push	r21
     43c:	6f 93       	push	r22
     43e:	7f 93       	push	r23
     440:	8f 93       	push	r24
     442:	9f 93       	push	r25
     444:	af 93       	push	r26
     446:	bf 93       	push	r27
     448:	ef 93       	push	r30
     44a:	ff 93       	push	r31
	pulseMotor(&PORTD, PD1);
     44c:	8b e2       	ldi	r24, 0x2B	; 43
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	0e 94 aa 01 	call	0x354	; 0x354 <pulseMotor>
	leftMotor.stepCount++;		
     456:	80 91 1c 01 	lds	r24, 0x011C
     45a:	90 91 1d 01 	lds	r25, 0x011D
     45e:	a0 91 1e 01 	lds	r26, 0x011E
     462:	b0 91 1f 01 	lds	r27, 0x011F
     466:	01 96       	adiw	r24, 0x01	; 1
     468:	a1 1d       	adc	r26, r1
     46a:	b1 1d       	adc	r27, r1
     46c:	80 93 1c 01 	sts	0x011C, r24
     470:	90 93 1d 01 	sts	0x011D, r25
     474:	a0 93 1e 01 	sts	0x011E, r26
     478:	b0 93 1f 01 	sts	0x011F, r27
	
	leftMotor.delayCounter = leftMotor.currentStepDelay;
     47c:	80 91 20 01 	lds	r24, 0x0120
     480:	90 91 21 01 	lds	r25, 0x0121
     484:	a0 91 22 01 	lds	r26, 0x0122
     488:	b0 91 23 01 	lds	r27, 0x0123
     48c:	80 93 24 01 	sts	0x0124, r24
     490:	90 93 25 01 	sts	0x0125, r25
     494:	a0 93 26 01 	sts	0x0126, r26
     498:	b0 93 27 01 	sts	0x0127, r27
	
	OCR1A = leftMotor.delayCounter;
     49c:	60 91 24 01 	lds	r22, 0x0124
     4a0:	70 91 25 01 	lds	r23, 0x0125
     4a4:	80 91 26 01 	lds	r24, 0x0126
     4a8:	90 91 27 01 	lds	r25, 0x0127
     4ac:	0e 94 38 0a 	call	0x1470	; 0x1470 <__fixunssfsi>
     4b0:	70 93 89 00 	sts	0x0089, r23
     4b4:	60 93 88 00 	sts	0x0088, r22
}
     4b8:	ff 91       	pop	r31
     4ba:	ef 91       	pop	r30
     4bc:	bf 91       	pop	r27
     4be:	af 91       	pop	r26
     4c0:	9f 91       	pop	r25
     4c2:	8f 91       	pop	r24
     4c4:	7f 91       	pop	r23
     4c6:	6f 91       	pop	r22
     4c8:	5f 91       	pop	r21
     4ca:	4f 91       	pop	r20
     4cc:	3f 91       	pop	r19
     4ce:	2f 91       	pop	r18
     4d0:	0f 90       	pop	r0
     4d2:	0f be       	out	0x3f, r0	; 63
     4d4:	0f 90       	pop	r0
     4d6:	1f 90       	pop	r1
     4d8:	18 95       	reti

000004da <setDirection>:
	(*port) &= ~(1 << pin);
}

void setDirection(int left, int right)
{
	if(left)
     4da:	89 2b       	or	r24, r25
     4dc:	11 f0       	breq	.+4      	; 0x4e2 <setDirection+0x8>
		PORTD &= ~(1 << PD0);
     4de:	58 98       	cbi	0x0b, 0	; 11
     4e0:	01 c0       	rjmp	.+2      	; 0x4e4 <setDirection+0xa>
	else
		PORTD |= (1 << PD0);
     4e2:	58 9a       	sbi	0x0b, 0	; 11
		
	if(right)
     4e4:	67 2b       	or	r22, r23
     4e6:	11 f0       	breq	.+4      	; 0x4ec <setDirection+0x12>
		PORTD |= (1 << PD6);
     4e8:	5e 9a       	sbi	0x0b, 6	; 11
     4ea:	08 95       	ret
	else
		PORTD &= ~(1 << PD6);
     4ec:	5e 98       	cbi	0x0b, 6	; 11
     4ee:	08 95       	ret

000004f0 <eightBitTimerFix>:
}


int eightBitTimerFix(struct StepperMotor *motor)
{
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	ec 01       	movw	r28, r24
	
	int returnNum;

	if(motor->delayCounter <= 255)
     4f6:	68 85       	ldd	r22, Y+8	; 0x08
     4f8:	79 85       	ldd	r23, Y+9	; 0x09
     4fa:	8a 85       	ldd	r24, Y+10	; 0x0a
     4fc:	9b 85       	ldd	r25, Y+11	; 0x0b
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	4f e7       	ldi	r20, 0x7F	; 127
     504:	53 e4       	ldi	r21, 0x43	; 67
     506:	0e 94 c7 09 	call	0x138e	; 0x138e <__cmpsf2>
     50a:	18 16       	cp	r1, r24
     50c:	7c f0       	brlt	.+30     	; 0x52c <eightBitTimerFix+0x3c>
	{
		returnNum = motor->delayCounter;
     50e:	68 85       	ldd	r22, Y+8	; 0x08
     510:	79 85       	ldd	r23, Y+9	; 0x09
     512:	8a 85       	ldd	r24, Y+10	; 0x0a
     514:	9b 85       	ldd	r25, Y+11	; 0x0b
     516:	0e 94 33 0a 	call	0x1466	; 0x1466 <__fixsfsi>
		motor->delayCounter = 0;	
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	a0 e0       	ldi	r26, 0x00	; 0
     520:	b0 e0       	ldi	r27, 0x00	; 0
     522:	88 87       	std	Y+8, r24	; 0x08
     524:	99 87       	std	Y+9, r25	; 0x09
     526:	aa 87       	std	Y+10, r26	; 0x0a
     528:	bb 87       	std	Y+11, r27	; 0x0b
     52a:	10 c0       	rjmp	.+32     	; 0x54c <eightBitTimerFix+0x5c>
	}
	else
	{
		motor->delayCounter -= 255;
     52c:	68 85       	ldd	r22, Y+8	; 0x08
     52e:	79 85       	ldd	r23, Y+9	; 0x09
     530:	8a 85       	ldd	r24, Y+10	; 0x0a
     532:	9b 85       	ldd	r25, Y+11	; 0x0b
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	4f e7       	ldi	r20, 0x7F	; 127
     53a:	53 e4       	ldi	r21, 0x43	; 67
     53c:	0e 94 62 09 	call	0x12c4	; 0x12c4 <__subsf3>
     540:	68 87       	std	Y+8, r22	; 0x08
     542:	79 87       	std	Y+9, r23	; 0x09
     544:	8a 87       	std	Y+10, r24	; 0x0a
     546:	9b 87       	std	Y+11, r25	; 0x0b
     548:	6f ef       	ldi	r22, 0xFF	; 255
     54a:	70 e0       	ldi	r23, 0x00	; 0
		returnNum = 255;
	}
	return returnNum;
}
     54c:	cb 01       	movw	r24, r22
     54e:	df 91       	pop	r29
     550:	cf 91       	pop	r28
     552:	08 95       	ret

00000554 <turnOnTimers>:

void turnOnTimers(int one, int two)
{
	if(one)
     554:	89 2b       	or	r24, r25
     556:	21 f0       	breq	.+8      	; 0x560 <turnOnTimers+0xc>
		TCCR1B |= (1 << CS11) | (1 << CS10);
     558:	80 91 81 00 	lds	r24, 0x0081
     55c:	83 60       	ori	r24, 0x03	; 3
     55e:	03 c0       	rjmp	.+6      	; 0x566 <turnOnTimers+0x12>
	else
		TCCR1B &= ~((1 << CS11) | (1 << CS10));
     560:	80 91 81 00 	lds	r24, 0x0081
     564:	8c 7f       	andi	r24, 0xFC	; 252
     566:	80 93 81 00 	sts	0x0081, r24
		
	if(two)
     56a:	67 2b       	or	r22, r23
     56c:	21 f0       	breq	.+8      	; 0x576 <turnOnTimers+0x22>
		TCCR3B |= (1 << CS31) | (1 << CS30);
     56e:	80 91 91 00 	lds	r24, 0x0091
     572:	83 60       	ori	r24, 0x03	; 3
     574:	03 c0       	rjmp	.+6      	; 0x57c <turnOnTimers+0x28>
	else	
		TCCR3B &= ~(1 << CS31) | (1 << CS30);
     576:	80 91 91 00 	lds	r24, 0x0091
     57a:	8d 7f       	andi	r24, 0xFD	; 253
     57c:	80 93 91 00 	sts	0x0091, r24
     580:	08 95       	ret

00000582 <getDelayFromVelocity>:
}

int getDelayFromVelocity(int stepsPerSecond)
{
	if(stepsPerSecond < 10)
     582:	8a 30       	cpi	r24, 0x0A	; 10
     584:	91 05       	cpc	r25, r1
     586:	1c f4       	brge	.+6      	; 0x58e <getDelayFromVelocity+0xc>
     588:	28 ea       	ldi	r18, 0xA8	; 168
     58a:	31 e6       	ldi	r19, 0x61	; 97
     58c:	0b c0       	rjmp	.+22     	; 0x5a4 <getDelayFromVelocity+0x22>
		return 25000;
	else
		return TIMER_FREQUENCY / stepsPerSecond;
     58e:	9c 01       	movw	r18, r24
     590:	44 27       	eor	r20, r20
     592:	37 fd       	sbrc	r19, 7
     594:	40 95       	com	r20
     596:	54 2f       	mov	r21, r20
     598:	60 e9       	ldi	r22, 0x90	; 144
     59a:	70 ed       	ldi	r23, 0xD0	; 208
     59c:	83 e0       	ldi	r24, 0x03	; 3
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__divmodsi4>
}
     5a4:	c9 01       	movw	r24, r18
     5a6:	08 95       	ret

000005a8 <straight>:
extern StepperMotor leftMotor;
extern StepperMotor rightMotor;
extern volatile unsigned long milliseconds;

void straight(long stepTarget, int inSpeed, int maxSpeed, int exitSpeed, int accel, int decel)
{	
     5a8:	2f 92       	push	r2
     5aa:	3f 92       	push	r3
     5ac:	4f 92       	push	r4
     5ae:	5f 92       	push	r5
     5b0:	6f 92       	push	r6
     5b2:	7f 92       	push	r7
     5b4:	8f 92       	push	r8
     5b6:	9f 92       	push	r9
     5b8:	af 92       	push	r10
     5ba:	bf 92       	push	r11
     5bc:	cf 92       	push	r12
     5be:	df 92       	push	r13
     5c0:	ef 92       	push	r14
     5c2:	ff 92       	push	r15
     5c4:	0f 93       	push	r16
     5c6:	1f 93       	push	r17
     5c8:	df 93       	push	r29
     5ca:	cf 93       	push	r28
     5cc:	cd b7       	in	r28, 0x3d	; 61
     5ce:	de b7       	in	r29, 0x3e	; 62
     5d0:	ac 97       	sbiw	r28, 0x2c	; 44
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	de bf       	out	0x3e, r29	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	cd bf       	out	0x3d, r28	; 61
     5dc:	69 87       	std	Y+9, r22	; 0x09
     5de:	7a 87       	std	Y+10, r23	; 0x0a
     5e0:	8b 87       	std	Y+11, r24	; 0x0b
     5e2:	9c 87       	std	Y+12, r25	; 0x0c
     5e4:	3e 87       	std	Y+14, r19	; 0x0e
     5e6:	2d 87       	std	Y+13, r18	; 0x0d
     5e8:	18 8b       	std	Y+16, r17	; 0x10
     5ea:	0f 87       	std	Y+15, r16	; 0x0f
     5ec:	da 8a       	std	Y+18, r13	; 0x12
     5ee:	c9 8a       	std	Y+17, r12	; 0x11
	unsigned long startTime = milliseconds;
     5f0:	80 91 00 01 	lds	r24, 0x0100
     5f4:	90 91 01 01 	lds	r25, 0x0101
     5f8:	a0 91 02 01 	lds	r26, 0x0102
     5fc:	b0 91 03 01 	lds	r27, 0x0103
     600:	8d 83       	std	Y+5, r24	; 0x05
     602:	9e 83       	std	Y+6, r25	; 0x06
     604:	af 83       	std	Y+7, r26	; 0x07
     606:	b8 87       	std	Y+8, r27	; 0x08
	
	while(inSpeed + accel*(float)((milliseconds-startTime)/1000.0) < maxSpeed)
     608:	ca 01       	movw	r24, r20
     60a:	aa 27       	eor	r26, r26
     60c:	97 fd       	sbrc	r25, 7
     60e:	a0 95       	com	r26
     610:	ba 2f       	mov	r27, r26
     612:	8f 8b       	std	Y+23, r24	; 0x17
     614:	98 8f       	std	Y+24, r25	; 0x18
     616:	a9 8f       	std	Y+25, r26	; 0x19
     618:	ba 8f       	std	Y+26, r27	; 0x1a
     61a:	97 01       	movw	r18, r14
     61c:	44 27       	eor	r20, r20
     61e:	37 fd       	sbrc	r19, 7
     620:	40 95       	com	r20
     622:	54 2f       	mov	r21, r20
     624:	2b 8f       	std	Y+27, r18	; 0x1b
     626:	3c 8f       	std	Y+28, r19	; 0x1c
     628:	4d 8f       	std	Y+29, r20	; 0x1d
     62a:	5e 8f       	std	Y+30, r21	; 0x1e
     62c:	8d 85       	ldd	r24, Y+13	; 0x0d
     62e:	9e 85       	ldd	r25, Y+14	; 0x0e
     630:	aa 27       	eor	r26, r26
     632:	97 fd       	sbrc	r25, 7
     634:	a0 95       	com	r26
     636:	ba 2f       	mov	r27, r26
     638:	8f 8f       	std	Y+31, r24	; 0x1f
     63a:	98 a3       	std	Y+32, r25	; 0x20
     63c:	a9 a3       	std	Y+33, r26	; 0x21
     63e:	ba a3       	std	Y+34, r27	; 0x22
	{
		float curSpeed = inSpeed + accel*(float)((milliseconds-startTime)/1000.0);
		
		leftMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
		rightMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
		float decelStepsUntilStop = curSpeed*curSpeed / (2.0 * decel) - (float)exitSpeed * (float)exitSpeed / (2.0 * decel);
     640:	96 01       	movw	r18, r12
     642:	44 27       	eor	r20, r20
     644:	37 fd       	sbrc	r19, 7
     646:	40 95       	com	r20
     648:	54 2f       	mov	r21, r20
     64a:	2b a3       	std	Y+35, r18	; 0x23
     64c:	3c a3       	std	Y+36, r19	; 0x24
     64e:	4d a3       	std	Y+37, r20	; 0x25
     650:	5e a3       	std	Y+38, r21	; 0x26
     652:	c8 01       	movw	r24, r16
     654:	aa 27       	eor	r26, r26
     656:	97 fd       	sbrc	r25, 7
     658:	a0 95       	com	r26
     65a:	ba 2f       	mov	r27, r26
     65c:	8f a3       	std	Y+39, r24	; 0x27
     65e:	98 a7       	std	Y+40, r25	; 0x28
     660:	a9 a7       	std	Y+41, r26	; 0x29
     662:	ba a7       	std	Y+42, r27	; 0x2a
     664:	be c0       	rjmp	.+380    	; 0x7e2 <straight+0x23a>
{	
	unsigned long startTime = milliseconds;
	
	while(inSpeed + accel*(float)((milliseconds-startTime)/1000.0) < maxSpeed)
	{
		float curSpeed = inSpeed + accel*(float)((milliseconds-startTime)/1000.0);
     666:	60 91 00 01 	lds	r22, 0x0100
     66a:	70 91 01 01 	lds	r23, 0x0101
     66e:	80 91 02 01 	lds	r24, 0x0102
     672:	90 91 03 01 	lds	r25, 0x0103
     676:	2d 81       	ldd	r18, Y+5	; 0x05
     678:	3e 81       	ldd	r19, Y+6	; 0x06
     67a:	4f 81       	ldd	r20, Y+7	; 0x07
     67c:	58 85       	ldd	r21, Y+8	; 0x08
     67e:	62 1b       	sub	r22, r18
     680:	73 0b       	sbc	r23, r19
     682:	84 0b       	sbc	r24, r20
     684:	95 0b       	sbc	r25, r21
     686:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__floatunsisf>
     68a:	20 e0       	ldi	r18, 0x00	; 0
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	4a e7       	ldi	r20, 0x7A	; 122
     690:	54 e4       	ldi	r21, 0x44	; 68
     692:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     696:	9b 01       	movw	r18, r22
     698:	ac 01       	movw	r20, r24
     69a:	c6 01       	movw	r24, r12
     69c:	b5 01       	movw	r22, r10
     69e:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     6a2:	9b 01       	movw	r18, r22
     6a4:	ac 01       	movw	r20, r24
     6a6:	c4 01       	movw	r24, r8
     6a8:	b3 01       	movw	r22, r6
     6aa:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     6ae:	3b 01       	movw	r6, r22
     6b0:	4c 01       	movw	r8, r24
		
		leftMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
     6b2:	0e 94 33 0a 	call	0x1466	; 0x1466 <__fixsfsi>
     6b6:	7b 01       	movw	r14, r22
     6b8:	8c 01       	movw	r16, r24
     6ba:	7c a7       	std	Y+44, r23	; 0x2c
     6bc:	6b a7       	std	Y+43, r22	; 0x2b
     6be:	cb 01       	movw	r24, r22
     6c0:	0e 94 c1 02 	call	0x582	; 0x582 <getDelayFromVelocity>
     6c4:	aa 27       	eor	r26, r26
     6c6:	97 fd       	sbrc	r25, 7
     6c8:	a0 95       	com	r26
     6ca:	ba 2f       	mov	r27, r26
     6cc:	bc 01       	movw	r22, r24
     6ce:	cd 01       	movw	r24, r26
     6d0:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     6d4:	60 93 20 01 	sts	0x0120, r22
     6d8:	70 93 21 01 	sts	0x0121, r23
     6dc:	80 93 22 01 	sts	0x0122, r24
     6e0:	90 93 23 01 	sts	0x0123, r25
		rightMotor.currentStepDelay = getDelayFromVelocity(curSpeed);
     6e4:	c7 01       	movw	r24, r14
     6e6:	0e 94 c1 02 	call	0x582	; 0x582 <getDelayFromVelocity>
     6ea:	aa 27       	eor	r26, r26
     6ec:	97 fd       	sbrc	r25, 7
     6ee:	a0 95       	com	r26
     6f0:	ba 2f       	mov	r27, r26
     6f2:	bc 01       	movw	r22, r24
     6f4:	cd 01       	movw	r24, r26
     6f6:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     6fa:	60 93 08 01 	sts	0x0108, r22
     6fe:	70 93 09 01 	sts	0x0109, r23
     702:	80 93 0a 01 	sts	0x010A, r24
     706:	90 93 0b 01 	sts	0x010B, r25
		float decelStepsUntilStop = curSpeed*curSpeed / (2.0 * decel) - (float)exitSpeed * (float)exitSpeed / (2.0 * decel);
     70a:	6b a1       	ldd	r22, Y+35	; 0x23
     70c:	7c a1       	ldd	r23, Y+36	; 0x24
     70e:	8d a1       	ldd	r24, Y+37	; 0x25
     710:	9e a1       	ldd	r25, Y+38	; 0x26
     712:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     716:	5b 01       	movw	r10, r22
     718:	6c 01       	movw	r12, r24
     71a:	6f a1       	ldd	r22, Y+39	; 0x27
     71c:	78 a5       	ldd	r23, Y+40	; 0x28
     71e:	89 a5       	ldd	r24, Y+41	; 0x29
     720:	9a a5       	ldd	r25, Y+42	; 0x2a
     722:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     726:	1b 01       	movw	r2, r22
     728:	2c 01       	movw	r4, r24
		
		//If we need to start decelerating
		if(leftMotor.stepCount + decelStepsUntilStop >= stepTarget)
     72a:	60 91 1c 01 	lds	r22, 0x011C
     72e:	70 91 1d 01 	lds	r23, 0x011D
     732:	80 91 1e 01 	lds	r24, 0x011E
     736:	90 91 1f 01 	lds	r25, 0x011F
     73a:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     73e:	6b 8b       	std	Y+19, r22	; 0x13
     740:	7c 8b       	std	Y+20, r23	; 0x14
     742:	8d 8b       	std	Y+21, r24	; 0x15
     744:	9e 8b       	std	Y+22, r25	; 0x16
     746:	c4 01       	movw	r24, r8
     748:	b3 01       	movw	r22, r6
     74a:	a4 01       	movw	r20, r8
     74c:	93 01       	movw	r18, r6
     74e:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     752:	7b 01       	movw	r14, r22
     754:	8c 01       	movw	r16, r24
     756:	c6 01       	movw	r24, r12
     758:	b5 01       	movw	r22, r10
     75a:	a6 01       	movw	r20, r12
     75c:	95 01       	movw	r18, r10
     75e:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     762:	9b 01       	movw	r18, r22
     764:	ac 01       	movw	r20, r24
     766:	c8 01       	movw	r24, r16
     768:	b7 01       	movw	r22, r14
     76a:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     76e:	3b 01       	movw	r6, r22
     770:	4c 01       	movw	r8, r24
     772:	c2 01       	movw	r24, r4
     774:	b1 01       	movw	r22, r2
     776:	a2 01       	movw	r20, r4
     778:	91 01       	movw	r18, r2
     77a:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     77e:	7b 01       	movw	r14, r22
     780:	8c 01       	movw	r16, r24
     782:	c6 01       	movw	r24, r12
     784:	b5 01       	movw	r22, r10
     786:	20 e0       	ldi	r18, 0x00	; 0
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	40 e0       	ldi	r20, 0x00	; 0
     78c:	50 ec       	ldi	r21, 0xC0	; 192
     78e:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     792:	9b 01       	movw	r18, r22
     794:	ac 01       	movw	r20, r24
     796:	c8 01       	movw	r24, r16
     798:	b7 01       	movw	r22, r14
     79a:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     79e:	9b 01       	movw	r18, r22
     7a0:	ac 01       	movw	r20, r24
     7a2:	c4 01       	movw	r24, r8
     7a4:	b3 01       	movw	r22, r6
     7a6:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	6b 89       	ldd	r22, Y+19	; 0x13
     7b0:	7c 89       	ldd	r23, Y+20	; 0x14
     7b2:	8d 89       	ldd	r24, Y+21	; 0x15
     7b4:	9e 89       	ldd	r25, Y+22	; 0x16
     7b6:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     7ba:	7b 01       	movw	r14, r22
     7bc:	8c 01       	movw	r16, r24
     7be:	69 85       	ldd	r22, Y+9	; 0x09
     7c0:	7a 85       	ldd	r23, Y+10	; 0x0a
     7c2:	8b 85       	ldd	r24, Y+11	; 0x0b
     7c4:	9c 85       	ldd	r25, Y+12	; 0x0c
     7c6:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     7ca:	9b 01       	movw	r18, r22
     7cc:	ac 01       	movw	r20, r24
     7ce:	c8 01       	movw	r24, r16
     7d0:	b7 01       	movw	r22, r14
     7d2:	0e 94 16 0b 	call	0x162c	; 0x162c <__gesf2>
     7d6:	87 ff       	sbrs	r24, 7
     7d8:	4c c0       	rjmp	.+152    	; 0x872 <straight+0x2ca>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     7da:	80 ea       	ldi	r24, 0xA0	; 160
     7dc:	9f e0       	ldi	r25, 0x0F	; 15
     7de:	01 97       	sbiw	r24, 0x01	; 1
     7e0:	f1 f7       	brne	.-4      	; 0x7de <straight+0x236>

void straight(long stepTarget, int inSpeed, int maxSpeed, int exitSpeed, int accel, int decel)
{	
	unsigned long startTime = milliseconds;
	
	while(inSpeed + accel*(float)((milliseconds-startTime)/1000.0) < maxSpeed)
     7e2:	6f 89       	ldd	r22, Y+23	; 0x17
     7e4:	78 8d       	ldd	r23, Y+24	; 0x18
     7e6:	89 8d       	ldd	r24, Y+25	; 0x19
     7e8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     7ea:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     7ee:	3b 01       	movw	r6, r22
     7f0:	4c 01       	movw	r8, r24
     7f2:	6b 8d       	ldd	r22, Y+27	; 0x1b
     7f4:	7c 8d       	ldd	r23, Y+28	; 0x1c
     7f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     7f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     7fa:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     7fe:	5b 01       	movw	r10, r22
     800:	6c 01       	movw	r12, r24
     802:	60 91 00 01 	lds	r22, 0x0100
     806:	70 91 01 01 	lds	r23, 0x0101
     80a:	80 91 02 01 	lds	r24, 0x0102
     80e:	90 91 03 01 	lds	r25, 0x0103
     812:	2d 81       	ldd	r18, Y+5	; 0x05
     814:	3e 81       	ldd	r19, Y+6	; 0x06
     816:	4f 81       	ldd	r20, Y+7	; 0x07
     818:	58 85       	ldd	r21, Y+8	; 0x08
     81a:	62 1b       	sub	r22, r18
     81c:	73 0b       	sbc	r23, r19
     81e:	84 0b       	sbc	r24, r20
     820:	95 0b       	sbc	r25, r21
     822:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__floatunsisf>
     826:	20 e0       	ldi	r18, 0x00	; 0
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	4a e7       	ldi	r20, 0x7A	; 122
     82c:	54 e4       	ldi	r21, 0x44	; 68
     82e:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     832:	9b 01       	movw	r18, r22
     834:	ac 01       	movw	r20, r24
     836:	c6 01       	movw	r24, r12
     838:	b5 01       	movw	r22, r10
     83a:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     83e:	9b 01       	movw	r18, r22
     840:	ac 01       	movw	r20, r24
     842:	c4 01       	movw	r24, r8
     844:	b3 01       	movw	r22, r6
     846:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     84a:	7b 01       	movw	r14, r22
     84c:	8c 01       	movw	r16, r24
     84e:	6f 8d       	ldd	r22, Y+31	; 0x1f
     850:	78 a1       	ldd	r23, Y+32	; 0x20
     852:	89 a1       	ldd	r24, Y+33	; 0x21
     854:	9a a1       	ldd	r25, Y+34	; 0x22
     856:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     85a:	9b 01       	movw	r18, r22
     85c:	ac 01       	movw	r20, r24
     85e:	c8 01       	movw	r24, r16
     860:	b7 01       	movw	r22, r14
     862:	0e 94 c7 09 	call	0x138e	; 0x138e <__cmpsf2>
     866:	87 fd       	sbrc	r24, 7
     868:	fe ce       	rjmp	.-516    	; 0x666 <straight+0xbe>
     86a:	4d 85       	ldd	r20, Y+13	; 0x0d
     86c:	5e 85       	ldd	r21, Y+14	; 0x0e
     86e:	5c a7       	std	Y+44, r21	; 0x2c
     870:	4b a7       	std	Y+43, r20	; 0x2b
		}
		_delay_ms(1);
	}	
	
	//Calculate when to start decelerating
	float decelSteps = (float)maxSpeed * (float)maxSpeed / (2.0 * decel) - (float)exitSpeed * (float)exitSpeed / (2.0 * decel);
     872:	ab a5       	ldd	r26, Y+43	; 0x2b
     874:	bc a5       	ldd	r27, Y+44	; 0x2c
     876:	bd 01       	movw	r22, r26
     878:	88 27       	eor	r24, r24
     87a:	77 fd       	sbrc	r23, 7
     87c:	80 95       	com	r24
     87e:	98 2f       	mov	r25, r24
     880:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     884:	1b 01       	movw	r2, r22
     886:	2c 01       	movw	r4, r24
     888:	e9 89       	ldd	r30, Y+17	; 0x11
     88a:	fa 89       	ldd	r31, Y+18	; 0x12
     88c:	bf 01       	movw	r22, r30
     88e:	88 27       	eor	r24, r24
     890:	77 fd       	sbrc	r23, 7
     892:	80 95       	com	r24
     894:	98 2f       	mov	r25, r24
     896:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     89a:	3b 01       	movw	r6, r22
     89c:	4c 01       	movw	r8, r24
     89e:	2f 85       	ldd	r18, Y+15	; 0x0f
     8a0:	38 89       	ldd	r19, Y+16	; 0x10
     8a2:	b9 01       	movw	r22, r18
     8a4:	88 27       	eor	r24, r24
     8a6:	77 fd       	sbrc	r23, 7
     8a8:	80 95       	com	r24
     8aa:	98 2f       	mov	r25, r24
     8ac:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     8b0:	69 83       	std	Y+1, r22	; 0x01
     8b2:	7a 83       	std	Y+2, r23	; 0x02
     8b4:	8b 83       	std	Y+3, r24	; 0x03
     8b6:	9c 83       	std	Y+4, r25	; 0x04
     8b8:	c2 01       	movw	r24, r4
     8ba:	b1 01       	movw	r22, r2
     8bc:	a2 01       	movw	r20, r4
     8be:	91 01       	movw	r18, r2
     8c0:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     8c4:	7b 01       	movw	r14, r22
     8c6:	8c 01       	movw	r16, r24
     8c8:	c4 01       	movw	r24, r8
     8ca:	b3 01       	movw	r22, r6
     8cc:	a4 01       	movw	r20, r8
     8ce:	93 01       	movw	r18, r6
     8d0:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     8d4:	9b 01       	movw	r18, r22
     8d6:	ac 01       	movw	r20, r24
     8d8:	c8 01       	movw	r24, r16
     8da:	b7 01       	movw	r22, r14
     8dc:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     8e0:	5b 01       	movw	r10, r22
     8e2:	6c 01       	movw	r12, r24
     8e4:	69 81       	ldd	r22, Y+1	; 0x01
     8e6:	7a 81       	ldd	r23, Y+2	; 0x02
     8e8:	8b 81       	ldd	r24, Y+3	; 0x03
     8ea:	9c 81       	ldd	r25, Y+4	; 0x04
     8ec:	9b 01       	movw	r18, r22
     8ee:	ac 01       	movw	r20, r24
     8f0:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     8f4:	7b 01       	movw	r14, r22
     8f6:	8c 01       	movw	r16, r24
     8f8:	c4 01       	movw	r24, r8
     8fa:	b3 01       	movw	r22, r6
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	40 e0       	ldi	r20, 0x00	; 0
     902:	50 ec       	ldi	r21, 0xC0	; 192
     904:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     908:	9b 01       	movw	r18, r22
     90a:	ac 01       	movw	r20, r24
     90c:	c8 01       	movw	r24, r16
     90e:	b7 01       	movw	r22, r14
     910:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     914:	9b 01       	movw	r18, r22
     916:	ac 01       	movw	r20, r24
     918:	c6 01       	movw	r24, r12
     91a:	b5 01       	movw	r22, r10
     91c:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     920:	5b 01       	movw	r10, r22
     922:	6c 01       	movw	r12, r24

	//Decelerate n stuff
	while(leftMotor.stepCount + decelSteps < stepTarget);
     924:	60 91 1c 01 	lds	r22, 0x011C
     928:	70 91 1d 01 	lds	r23, 0x011D
     92c:	80 91 1e 01 	lds	r24, 0x011E
     930:	90 91 1f 01 	lds	r25, 0x011F
     934:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     938:	a6 01       	movw	r20, r12
     93a:	95 01       	movw	r18, r10
     93c:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     940:	7b 01       	movw	r14, r22
     942:	8c 01       	movw	r16, r24
     944:	69 85       	ldd	r22, Y+9	; 0x09
     946:	7a 85       	ldd	r23, Y+10	; 0x0a
     948:	8b 85       	ldd	r24, Y+11	; 0x0b
     94a:	9c 85       	ldd	r25, Y+12	; 0x0c
     94c:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     950:	9b 01       	movw	r18, r22
     952:	ac 01       	movw	r20, r24
     954:	c8 01       	movw	r24, r16
     956:	b7 01       	movw	r22, r14
     958:	0e 94 c7 09 	call	0x138e	; 0x138e <__cmpsf2>
     95c:	87 fd       	sbrc	r24, 7
     95e:	e2 cf       	rjmp	.-60     	; 0x924 <straight+0x37c>
	
	startTime = milliseconds;
     960:	e0 90 00 01 	lds	r14, 0x0100
     964:	f0 90 01 01 	lds	r15, 0x0101
     968:	00 91 02 01 	lds	r16, 0x0102
     96c:	10 91 03 01 	lds	r17, 0x0103
     970:	80 ea       	ldi	r24, 0xA0	; 160
     972:	c8 2e       	mov	r12, r24
     974:	8f e0       	ldi	r24, 0x0F	; 15
     976:	d8 2e       	mov	r13, r24
     978:	6f c0       	rjmp	.+222    	; 0xa58 <straight+0x4b0>
		
	while(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0) > exitSpeed)
	{
		leftMotor.currentStepDelay =  getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
     97a:	60 91 00 01 	lds	r22, 0x0100
     97e:	70 91 01 01 	lds	r23, 0x0101
     982:	80 91 02 01 	lds	r24, 0x0102
     986:	90 91 03 01 	lds	r25, 0x0103
     98a:	6e 19       	sub	r22, r14
     98c:	7f 09       	sbc	r23, r15
     98e:	80 0b       	sbc	r24, r16
     990:	91 0b       	sbc	r25, r17
     992:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__floatunsisf>
     996:	20 e0       	ldi	r18, 0x00	; 0
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	4a e7       	ldi	r20, 0x7A	; 122
     99c:	54 ec       	ldi	r21, 0xC4	; 196
     99e:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     9a2:	9b 01       	movw	r18, r22
     9a4:	ac 01       	movw	r20, r24
     9a6:	c4 01       	movw	r24, r8
     9a8:	b3 01       	movw	r22, r6
     9aa:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     9ae:	9b 01       	movw	r18, r22
     9b0:	ac 01       	movw	r20, r24
     9b2:	c2 01       	movw	r24, r4
     9b4:	b1 01       	movw	r22, r2
     9b6:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     9ba:	0e 94 33 0a 	call	0x1466	; 0x1466 <__fixsfsi>
     9be:	dc 01       	movw	r26, r24
     9c0:	cb 01       	movw	r24, r22
     9c2:	0e 94 c1 02 	call	0x582	; 0x582 <getDelayFromVelocity>
     9c6:	aa 27       	eor	r26, r26
     9c8:	97 fd       	sbrc	r25, 7
     9ca:	a0 95       	com	r26
     9cc:	ba 2f       	mov	r27, r26
     9ce:	bc 01       	movw	r22, r24
     9d0:	cd 01       	movw	r24, r26
     9d2:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     9d6:	60 93 20 01 	sts	0x0120, r22
     9da:	70 93 21 01 	sts	0x0121, r23
     9de:	80 93 22 01 	sts	0x0122, r24
     9e2:	90 93 23 01 	sts	0x0123, r25
		rightMotor.currentStepDelay = getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
     9e6:	60 91 00 01 	lds	r22, 0x0100
     9ea:	70 91 01 01 	lds	r23, 0x0101
     9ee:	80 91 02 01 	lds	r24, 0x0102
     9f2:	90 91 03 01 	lds	r25, 0x0103
     9f6:	6e 19       	sub	r22, r14
     9f8:	7f 09       	sbc	r23, r15
     9fa:	80 0b       	sbc	r24, r16
     9fc:	91 0b       	sbc	r25, r17
     9fe:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__floatunsisf>
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	4a e7       	ldi	r20, 0x7A	; 122
     a08:	54 ec       	ldi	r21, 0xC4	; 196
     a0a:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     a0e:	9b 01       	movw	r18, r22
     a10:	ac 01       	movw	r20, r24
     a12:	c4 01       	movw	r24, r8
     a14:	b3 01       	movw	r22, r6
     a16:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     a1a:	9b 01       	movw	r18, r22
     a1c:	ac 01       	movw	r20, r24
     a1e:	c2 01       	movw	r24, r4
     a20:	b1 01       	movw	r22, r2
     a22:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     a26:	0e 94 33 0a 	call	0x1466	; 0x1466 <__fixsfsi>
     a2a:	dc 01       	movw	r26, r24
     a2c:	cb 01       	movw	r24, r22
     a2e:	0e 94 c1 02 	call	0x582	; 0x582 <getDelayFromVelocity>
     a32:	aa 27       	eor	r26, r26
     a34:	97 fd       	sbrc	r25, 7
     a36:	a0 95       	com	r26
     a38:	ba 2f       	mov	r27, r26
     a3a:	bc 01       	movw	r22, r24
     a3c:	cd 01       	movw	r24, r26
     a3e:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__floatsisf>
     a42:	60 93 08 01 	sts	0x0108, r22
     a46:	70 93 09 01 	sts	0x0109, r23
     a4a:	80 93 0a 01 	sts	0x010A, r24
     a4e:	90 93 0b 01 	sts	0x010B, r25
     a52:	c6 01       	movw	r24, r12
     a54:	01 97       	sbiw	r24, 0x01	; 1
     a56:	f1 f7       	brne	.-4      	; 0xa54 <straight+0x4ac>
	//Decelerate n stuff
	while(leftMotor.stepCount + decelSteps < stepTarget);
	
	startTime = milliseconds;
		
	while(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0) > exitSpeed)
     a58:	60 91 00 01 	lds	r22, 0x0100
     a5c:	70 91 01 01 	lds	r23, 0x0101
     a60:	80 91 02 01 	lds	r24, 0x0102
     a64:	90 91 03 01 	lds	r25, 0x0103
     a68:	6e 19       	sub	r22, r14
     a6a:	7f 09       	sbc	r23, r15
     a6c:	80 0b       	sbc	r24, r16
     a6e:	91 0b       	sbc	r25, r17
     a70:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <__floatunsisf>
     a74:	20 e0       	ldi	r18, 0x00	; 0
     a76:	30 e0       	ldi	r19, 0x00	; 0
     a78:	4a e7       	ldi	r20, 0x7A	; 122
     a7a:	54 ec       	ldi	r21, 0xC4	; 196
     a7c:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
     a80:	9b 01       	movw	r18, r22
     a82:	ac 01       	movw	r20, r24
     a84:	c4 01       	movw	r24, r8
     a86:	b3 01       	movw	r22, r6
     a88:	0e 94 1a 0b 	call	0x1634	; 0x1634 <__mulsf3>
     a8c:	9b 01       	movw	r18, r22
     a8e:	ac 01       	movw	r20, r24
     a90:	c2 01       	movw	r24, r4
     a92:	b1 01       	movw	r22, r2
     a94:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__addsf3>
     a98:	29 81       	ldd	r18, Y+1	; 0x01
     a9a:	3a 81       	ldd	r19, Y+2	; 0x02
     a9c:	4b 81       	ldd	r20, Y+3	; 0x03
     a9e:	5c 81       	ldd	r21, Y+4	; 0x04
     aa0:	0e 94 16 0b 	call	0x162c	; 0x162c <__gesf2>
     aa4:	18 16       	cp	r1, r24
     aa6:	0c f4       	brge	.+2      	; 0xaaa <straight+0x502>
     aa8:	68 cf       	rjmp	.-304    	; 0x97a <straight+0x3d2>
		leftMotor.currentStepDelay =  getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
		rightMotor.currentStepDelay = getDelayFromVelocity(maxSpeed - decel*(float)((milliseconds-startTime)/1000.0));
		_delay_ms(1);
	}
	
}
     aaa:	ac 96       	adiw	r28, 0x2c	; 44
     aac:	0f b6       	in	r0, 0x3f	; 63
     aae:	f8 94       	cli
     ab0:	de bf       	out	0x3e, r29	; 62
     ab2:	0f be       	out	0x3f, r0	; 63
     ab4:	cd bf       	out	0x3d, r28	; 61
     ab6:	cf 91       	pop	r28
     ab8:	df 91       	pop	r29
     aba:	1f 91       	pop	r17
     abc:	0f 91       	pop	r16
     abe:	ff 90       	pop	r15
     ac0:	ef 90       	pop	r14
     ac2:	df 90       	pop	r13
     ac4:	cf 90       	pop	r12
     ac6:	bf 90       	pop	r11
     ac8:	af 90       	pop	r10
     aca:	9f 90       	pop	r9
     acc:	8f 90       	pop	r8
     ace:	7f 90       	pop	r7
     ad0:	6f 90       	pop	r6
     ad2:	5f 90       	pop	r5
     ad4:	4f 90       	pop	r4
     ad6:	3f 90       	pop	r3
     ad8:	2f 90       	pop	r2
     ada:	08 95       	ret

00000adc <inPlaceTurn>:

void inPlaceTurn(int degrees, int maxSpeed, int accel, int decel)
{
     adc:	af 92       	push	r10
     ade:	bf 92       	push	r11
     ae0:	cf 92       	push	r12
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	b8 2e       	mov	r11, r24
     aee:	a9 2e       	mov	r10, r25
     af0:	8b 01       	movw	r16, r22
     af2:	7a 01       	movw	r14, r20
     af4:	69 01       	movw	r12, r18
	int turningConstant = 10;
	
	setDirection(0, 1);
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	61 e0       	ldi	r22, 0x01	; 1
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	0e 94 6d 02 	call	0x4da	; 0x4da <setDirection>
	straight(degrees * turningConstant, 0, maxSpeed, 0, accel, decel);
     b02:	2b 2d       	mov	r18, r11
     b04:	3a 2d       	mov	r19, r10
     b06:	b9 01       	movw	r22, r18
     b08:	43 e0       	ldi	r20, 0x03	; 3
     b0a:	66 0f       	add	r22, r22
     b0c:	77 1f       	adc	r23, r23
     b0e:	4a 95       	dec	r20
     b10:	e1 f7       	brne	.-8      	; 0xb0a <__stack+0xb>
     b12:	22 0f       	add	r18, r18
     b14:	33 1f       	adc	r19, r19
     b16:	62 0f       	add	r22, r18
     b18:	73 1f       	adc	r23, r19
     b1a:	88 27       	eor	r24, r24
     b1c:	77 fd       	sbrc	r23, 7
     b1e:	80 95       	com	r24
     b20:	98 2f       	mov	r25, r24
     b22:	40 e0       	ldi	r20, 0x00	; 0
     b24:	50 e0       	ldi	r21, 0x00	; 0
     b26:	98 01       	movw	r18, r16
     b28:	00 e0       	ldi	r16, 0x00	; 0
     b2a:	10 e0       	ldi	r17, 0x00	; 0
     b2c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <straight>
}
     b30:	1f 91       	pop	r17
     b32:	0f 91       	pop	r16
     b34:	ff 90       	pop	r15
     b36:	ef 90       	pop	r14
     b38:	df 90       	pop	r13
     b3a:	cf 90       	pop	r12
     b3c:	bf 90       	pop	r11
     b3e:	af 90       	pop	r10
     b40:	08 95       	ret

00000b42 <setupADC>:
#include <avr/interrupt.h>
#include "sensors.h"

void setupADC()
{
	ADMUX = (1 << REFS0);// | (1 << MUX0) | (1 << MUX1) | (1 << MUX2);
     b42:	80 e4       	ldi	r24, 0x40	; 64
     b44:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1 << ADEN) | (ADPS0) | (1 << ADPS1) | (1 << ADPS2);	
     b48:	86 e8       	ldi	r24, 0x86	; 134
     b4a:	80 93 7a 00 	sts	0x007A, r24
	
	DDRD |= (1 << PORTD4);
     b4e:	54 9a       	sbi	0x0a, 4	; 10
}
     b50:	08 95       	ret

00000b52 <getIRSensorValue>:
 * 
 * Turns on Emitter, waits, fetches an ADC 
 * value and returns a value
 ******************************************/
int getIRSensorValue(volatile uint8_t *port, uint8_t pin, int analogChannel)
{
     b52:	fc 01       	movw	r30, r24
	//Turn on Emitter
	(*port) |= (1 << pin);
     b54:	20 81       	ld	r18, Z
     b56:	81 e0       	ldi	r24, 0x01	; 1
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	02 c0       	rjmp	.+4      	; 0xb60 <getIRSensorValue+0xe>
     b5c:	88 0f       	add	r24, r24
     b5e:	99 1f       	adc	r25, r25
     b60:	6a 95       	dec	r22
     b62:	e2 f7       	brpl	.-8      	; 0xb5c <getIRSensorValue+0xa>
     b64:	28 2b       	or	r18, r24
     b66:	20 83       	st	Z, r18
     b68:	40 e4       	ldi	r20, 0x40	; 64
     b6a:	51 e0       	ldi	r21, 0x01	; 1
     b6c:	da 01       	movw	r26, r20
     b6e:	11 97       	sbiw	r26, 0x01	; 1
     b70:	f1 f7       	brne	.-4      	; 0xb6e <getIRSensorValue+0x1c>
	_delay_us(80);
	
	int emit = 0;//ReadADC(analogChannel);
	
	//Turn off Emitter
	(*port) &= ~(1 << pin);
     b72:	20 81       	ld	r18, Z
     b74:	80 95       	com	r24
     b76:	82 23       	and	r24, r18
     b78:	80 83       	st	Z, r24
     b7a:	ca 01       	movw	r24, r20
     b7c:	01 97       	sbiw	r24, 0x01	; 1
     b7e:	f1 f7       	brne	.-4      	; 0xb7c <getIRSensorValue+0x2a>
	
	_delay_us(80);
	
	return emit;	
}
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	08 95       	ret

00000b86 <ReadADC>:
//Copied from http://extremeelectronics.co.in/avr-tutorials/using-the-analog-to-digital-converter/
uint16_t ReadADC(uint8_t ch)
{
   //Select ADC Channel ch must be 0-7
   ch=ch&0b00000111;
   ADMUX= (1 << REFS0) | ch;
     b86:	87 70       	andi	r24, 0x07	; 7
     b88:	80 64       	ori	r24, 0x40	; 64
     b8a:	80 93 7c 00 	sts	0x007C, r24

   //Start Single conversion
   ADCSRA|=(1<<ADSC);
     b8e:	80 91 7a 00 	lds	r24, 0x007A
     b92:	80 64       	ori	r24, 0x40	; 64
     b94:	80 93 7a 00 	sts	0x007A, r24
	
   //Wait for conversion to complete
   while(!(ADCSRA & (1<<ADIF)));
     b98:	80 91 7a 00 	lds	r24, 0x007A
     b9c:	84 ff       	sbrs	r24, 4
     b9e:	fc cf       	rjmp	.-8      	; 0xb98 <ReadADC+0x12>

   ADCSRA|=(1<<ADIF);
     ba0:	80 91 7a 00 	lds	r24, 0x007A
     ba4:	80 61       	ori	r24, 0x10	; 16
     ba6:	80 93 7a 00 	sts	0x007A, r24

   return(ADC);
     baa:	20 91 78 00 	lds	r18, 0x0078
     bae:	30 91 79 00 	lds	r19, 0x0079
}
     bb2:	c9 01       	movw	r24, r18
     bb4:	08 95       	ret

00000bb6 <vfprintf>:
     bb6:	a1 e1       	ldi	r26, 0x11	; 17
     bb8:	b0 e0       	ldi	r27, 0x00	; 0
     bba:	e1 ee       	ldi	r30, 0xE1	; 225
     bbc:	f5 e0       	ldi	r31, 0x05	; 5
     bbe:	0c 94 98 0b 	jmp	0x1730	; 0x1730 <__prologue_saves__>
     bc2:	3c 01       	movw	r6, r24
     bc4:	7f 87       	std	Y+15, r23	; 0x0f
     bc6:	6e 87       	std	Y+14, r22	; 0x0e
     bc8:	6a 01       	movw	r12, r20
     bca:	fc 01       	movw	r30, r24
     bcc:	17 82       	std	Z+7, r1	; 0x07
     bce:	16 82       	std	Z+6, r1	; 0x06
     bd0:	83 81       	ldd	r24, Z+3	; 0x03
     bd2:	81 fd       	sbrc	r24, 1
     bd4:	03 c0       	rjmp	.+6      	; 0xbdc <vfprintf+0x26>
     bd6:	6f ef       	ldi	r22, 0xFF	; 255
     bd8:	7f ef       	ldi	r23, 0xFF	; 255
     bda:	6f c3       	rjmp	.+1758   	; 0x12ba <vfprintf+0x704>
     bdc:	9e 01       	movw	r18, r28
     bde:	2f 5f       	subi	r18, 0xFF	; 255
     be0:	3f 4f       	sbci	r19, 0xFF	; 255
     be2:	39 8b       	std	Y+17, r19	; 0x11
     be4:	28 8b       	std	Y+16, r18	; 0x10
     be6:	f3 01       	movw	r30, r6
     be8:	23 81       	ldd	r18, Z+3	; 0x03
     bea:	ee 85       	ldd	r30, Y+14	; 0x0e
     bec:	ff 85       	ldd	r31, Y+15	; 0x0f
     bee:	23 fd       	sbrc	r18, 3
     bf0:	85 91       	lpm	r24, Z+
     bf2:	23 ff       	sbrs	r18, 3
     bf4:	81 91       	ld	r24, Z+
     bf6:	ff 87       	std	Y+15, r31	; 0x0f
     bf8:	ee 87       	std	Y+14, r30	; 0x0e
     bfa:	88 23       	and	r24, r24
     bfc:	09 f4       	brne	.+2      	; 0xc00 <vfprintf+0x4a>
     bfe:	5a c3       	rjmp	.+1716   	; 0x12b4 <vfprintf+0x6fe>
     c00:	85 32       	cpi	r24, 0x25	; 37
     c02:	51 f4       	brne	.+20     	; 0xc18 <vfprintf+0x62>
     c04:	ee 85       	ldd	r30, Y+14	; 0x0e
     c06:	ff 85       	ldd	r31, Y+15	; 0x0f
     c08:	23 fd       	sbrc	r18, 3
     c0a:	85 91       	lpm	r24, Z+
     c0c:	23 ff       	sbrs	r18, 3
     c0e:	81 91       	ld	r24, Z+
     c10:	ff 87       	std	Y+15, r31	; 0x0f
     c12:	ee 87       	std	Y+14, r30	; 0x0e
     c14:	85 32       	cpi	r24, 0x25	; 37
     c16:	29 f4       	brne	.+10     	; 0xc22 <vfprintf+0x6c>
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	b3 01       	movw	r22, r6
     c1c:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     c20:	e2 cf       	rjmp	.-60     	; 0xbe6 <vfprintf+0x30>
     c22:	98 2f       	mov	r25, r24
     c24:	10 e0       	ldi	r17, 0x00	; 0
     c26:	88 24       	eor	r8, r8
     c28:	99 24       	eor	r9, r9
     c2a:	10 32       	cpi	r17, 0x20	; 32
     c2c:	b0 f4       	brcc	.+44     	; 0xc5a <vfprintf+0xa4>
     c2e:	9b 32       	cpi	r25, 0x2B	; 43
     c30:	69 f0       	breq	.+26     	; 0xc4c <vfprintf+0x96>
     c32:	9c 32       	cpi	r25, 0x2C	; 44
     c34:	28 f4       	brcc	.+10     	; 0xc40 <vfprintf+0x8a>
     c36:	90 32       	cpi	r25, 0x20	; 32
     c38:	51 f0       	breq	.+20     	; 0xc4e <vfprintf+0x98>
     c3a:	93 32       	cpi	r25, 0x23	; 35
     c3c:	71 f4       	brne	.+28     	; 0xc5a <vfprintf+0xa4>
     c3e:	0b c0       	rjmp	.+22     	; 0xc56 <vfprintf+0xa0>
     c40:	9d 32       	cpi	r25, 0x2D	; 45
     c42:	39 f0       	breq	.+14     	; 0xc52 <vfprintf+0x9c>
     c44:	90 33       	cpi	r25, 0x30	; 48
     c46:	49 f4       	brne	.+18     	; 0xc5a <vfprintf+0xa4>
     c48:	11 60       	ori	r17, 0x01	; 1
     c4a:	28 c0       	rjmp	.+80     	; 0xc9c <vfprintf+0xe6>
     c4c:	12 60       	ori	r17, 0x02	; 2
     c4e:	14 60       	ori	r17, 0x04	; 4
     c50:	25 c0       	rjmp	.+74     	; 0xc9c <vfprintf+0xe6>
     c52:	18 60       	ori	r17, 0x08	; 8
     c54:	23 c0       	rjmp	.+70     	; 0xc9c <vfprintf+0xe6>
     c56:	10 61       	ori	r17, 0x10	; 16
     c58:	21 c0       	rjmp	.+66     	; 0xc9c <vfprintf+0xe6>
     c5a:	17 fd       	sbrc	r17, 7
     c5c:	2a c0       	rjmp	.+84     	; 0xcb2 <vfprintf+0xfc>
     c5e:	89 2f       	mov	r24, r25
     c60:	80 53       	subi	r24, 0x30	; 48
     c62:	8a 30       	cpi	r24, 0x0A	; 10
     c64:	78 f4       	brcc	.+30     	; 0xc84 <vfprintf+0xce>
     c66:	16 ff       	sbrs	r17, 6
     c68:	06 c0       	rjmp	.+12     	; 0xc76 <vfprintf+0xc0>
     c6a:	fa e0       	ldi	r31, 0x0A	; 10
     c6c:	9f 9e       	mul	r9, r31
     c6e:	90 2c       	mov	r9, r0
     c70:	11 24       	eor	r1, r1
     c72:	98 0e       	add	r9, r24
     c74:	13 c0       	rjmp	.+38     	; 0xc9c <vfprintf+0xe6>
     c76:	3a e0       	ldi	r19, 0x0A	; 10
     c78:	83 9e       	mul	r8, r19
     c7a:	80 2c       	mov	r8, r0
     c7c:	11 24       	eor	r1, r1
     c7e:	88 0e       	add	r8, r24
     c80:	10 62       	ori	r17, 0x20	; 32
     c82:	0c c0       	rjmp	.+24     	; 0xc9c <vfprintf+0xe6>
     c84:	9e 32       	cpi	r25, 0x2E	; 46
     c86:	21 f4       	brne	.+8      	; 0xc90 <vfprintf+0xda>
     c88:	16 fd       	sbrc	r17, 6
     c8a:	14 c3       	rjmp	.+1576   	; 0x12b4 <vfprintf+0x6fe>
     c8c:	10 64       	ori	r17, 0x40	; 64
     c8e:	06 c0       	rjmp	.+12     	; 0xc9c <vfprintf+0xe6>
     c90:	9c 36       	cpi	r25, 0x6C	; 108
     c92:	11 f4       	brne	.+4      	; 0xc98 <vfprintf+0xe2>
     c94:	10 68       	ori	r17, 0x80	; 128
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0xe6>
     c98:	98 36       	cpi	r25, 0x68	; 104
     c9a:	59 f4       	brne	.+22     	; 0xcb2 <vfprintf+0xfc>
     c9c:	ee 85       	ldd	r30, Y+14	; 0x0e
     c9e:	ff 85       	ldd	r31, Y+15	; 0x0f
     ca0:	23 fd       	sbrc	r18, 3
     ca2:	95 91       	lpm	r25, Z+
     ca4:	23 ff       	sbrs	r18, 3
     ca6:	91 91       	ld	r25, Z+
     ca8:	ff 87       	std	Y+15, r31	; 0x0f
     caa:	ee 87       	std	Y+14, r30	; 0x0e
     cac:	99 23       	and	r25, r25
     cae:	09 f0       	breq	.+2      	; 0xcb2 <vfprintf+0xfc>
     cb0:	bc cf       	rjmp	.-136    	; 0xc2a <vfprintf+0x74>
     cb2:	89 2f       	mov	r24, r25
     cb4:	85 54       	subi	r24, 0x45	; 69
     cb6:	83 30       	cpi	r24, 0x03	; 3
     cb8:	20 f4       	brcc	.+8      	; 0xcc2 <vfprintf+0x10c>
     cba:	81 2f       	mov	r24, r17
     cbc:	80 61       	ori	r24, 0x10	; 16
     cbe:	90 5e       	subi	r25, 0xE0	; 224
     cc0:	07 c0       	rjmp	.+14     	; 0xcd0 <vfprintf+0x11a>
     cc2:	89 2f       	mov	r24, r25
     cc4:	85 56       	subi	r24, 0x65	; 101
     cc6:	83 30       	cpi	r24, 0x03	; 3
     cc8:	08 f0       	brcs	.+2      	; 0xccc <vfprintf+0x116>
     cca:	9f c1       	rjmp	.+830    	; 0x100a <vfprintf+0x454>
     ccc:	81 2f       	mov	r24, r17
     cce:	8f 7e       	andi	r24, 0xEF	; 239
     cd0:	86 fd       	sbrc	r24, 6
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <vfprintf+0x122>
     cd4:	76 e0       	ldi	r23, 0x06	; 6
     cd6:	97 2e       	mov	r9, r23
     cd8:	6f e3       	ldi	r22, 0x3F	; 63
     cda:	f6 2e       	mov	r15, r22
     cdc:	f8 22       	and	r15, r24
     cde:	95 36       	cpi	r25, 0x65	; 101
     ce0:	19 f4       	brne	.+6      	; 0xce8 <vfprintf+0x132>
     ce2:	f0 e4       	ldi	r31, 0x40	; 64
     ce4:	ff 2a       	or	r15, r31
     ce6:	07 c0       	rjmp	.+14     	; 0xcf6 <vfprintf+0x140>
     ce8:	96 36       	cpi	r25, 0x66	; 102
     cea:	19 f4       	brne	.+6      	; 0xcf2 <vfprintf+0x13c>
     cec:	20 e8       	ldi	r18, 0x80	; 128
     cee:	f2 2a       	or	r15, r18
     cf0:	02 c0       	rjmp	.+4      	; 0xcf6 <vfprintf+0x140>
     cf2:	91 10       	cpse	r9, r1
     cf4:	9a 94       	dec	r9
     cf6:	f7 fe       	sbrs	r15, 7
     cf8:	0a c0       	rjmp	.+20     	; 0xd0e <vfprintf+0x158>
     cfa:	3b e3       	ldi	r19, 0x3B	; 59
     cfc:	39 15       	cp	r19, r9
     cfe:	18 f4       	brcc	.+6      	; 0xd06 <vfprintf+0x150>
     d00:	5c e3       	ldi	r21, 0x3C	; 60
     d02:	b5 2e       	mov	r11, r21
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <vfprintf+0x154>
     d06:	b9 2c       	mov	r11, r9
     d08:	b3 94       	inc	r11
     d0a:	27 e0       	ldi	r18, 0x07	; 7
     d0c:	09 c0       	rjmp	.+18     	; 0xd20 <vfprintf+0x16a>
     d0e:	47 e0       	ldi	r20, 0x07	; 7
     d10:	49 15       	cp	r20, r9
     d12:	20 f4       	brcc	.+8      	; 0xd1c <vfprintf+0x166>
     d14:	bb 24       	eor	r11, r11
     d16:	47 e0       	ldi	r20, 0x07	; 7
     d18:	94 2e       	mov	r9, r20
     d1a:	f7 cf       	rjmp	.-18     	; 0xd0a <vfprintf+0x154>
     d1c:	29 2d       	mov	r18, r9
     d1e:	bb 24       	eor	r11, r11
     d20:	c6 01       	movw	r24, r12
     d22:	04 96       	adiw	r24, 0x04	; 4
     d24:	9d 87       	std	Y+13, r25	; 0x0d
     d26:	8c 87       	std	Y+12, r24	; 0x0c
     d28:	f6 01       	movw	r30, r12
     d2a:	60 81       	ld	r22, Z
     d2c:	71 81       	ldd	r23, Z+1	; 0x01
     d2e:	82 81       	ldd	r24, Z+2	; 0x02
     d30:	93 81       	ldd	r25, Z+3	; 0x03
     d32:	ae 01       	movw	r20, r28
     d34:	4f 5f       	subi	r20, 0xFF	; 255
     d36:	5f 4f       	sbci	r21, 0xFF	; 255
     d38:	0b 2d       	mov	r16, r11
     d3a:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__ftoa_engine>
     d3e:	6c 01       	movw	r12, r24
     d40:	09 81       	ldd	r16, Y+1	; 0x01
     d42:	20 2e       	mov	r2, r16
     d44:	33 24       	eor	r3, r3
     d46:	00 ff       	sbrs	r16, 0
     d48:	04 c0       	rjmp	.+8      	; 0xd52 <vfprintf+0x19c>
     d4a:	03 fd       	sbrc	r16, 3
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <vfprintf+0x19c>
     d4e:	1d e2       	ldi	r17, 0x2D	; 45
     d50:	09 c0       	rjmp	.+18     	; 0xd64 <vfprintf+0x1ae>
     d52:	f1 fe       	sbrs	r15, 1
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <vfprintf+0x1a4>
     d56:	1b e2       	ldi	r17, 0x2B	; 43
     d58:	05 c0       	rjmp	.+10     	; 0xd64 <vfprintf+0x1ae>
     d5a:	f2 fc       	sbrc	r15, 2
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <vfprintf+0x1ac>
     d5e:	10 e0       	ldi	r17, 0x00	; 0
     d60:	01 c0       	rjmp	.+2      	; 0xd64 <vfprintf+0x1ae>
     d62:	10 e2       	ldi	r17, 0x20	; 32
     d64:	c1 01       	movw	r24, r2
     d66:	8c 70       	andi	r24, 0x0C	; 12
     d68:	90 70       	andi	r25, 0x00	; 0
     d6a:	89 2b       	or	r24, r25
     d6c:	b9 f1       	breq	.+110    	; 0xddc <vfprintf+0x226>
     d6e:	11 23       	and	r17, r17
     d70:	11 f4       	brne	.+4      	; 0xd76 <vfprintf+0x1c0>
     d72:	83 e0       	ldi	r24, 0x03	; 3
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <vfprintf+0x1c2>
     d76:	84 e0       	ldi	r24, 0x04	; 4
     d78:	88 15       	cp	r24, r8
     d7a:	10 f0       	brcs	.+4      	; 0xd80 <vfprintf+0x1ca>
     d7c:	88 24       	eor	r8, r8
     d7e:	0a c0       	rjmp	.+20     	; 0xd94 <vfprintf+0x1de>
     d80:	88 1a       	sub	r8, r24
     d82:	f3 fc       	sbrc	r15, 3
     d84:	07 c0       	rjmp	.+14     	; 0xd94 <vfprintf+0x1de>
     d86:	80 e2       	ldi	r24, 0x20	; 32
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	b3 01       	movw	r22, r6
     d8c:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     d90:	8a 94       	dec	r8
     d92:	c9 f7       	brne	.-14     	; 0xd86 <vfprintf+0x1d0>
     d94:	11 23       	and	r17, r17
     d96:	29 f0       	breq	.+10     	; 0xda2 <vfprintf+0x1ec>
     d98:	81 2f       	mov	r24, r17
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	b3 01       	movw	r22, r6
     d9e:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     da2:	23 fe       	sbrs	r2, 3
     da4:	03 c0       	rjmp	.+6      	; 0xdac <vfprintf+0x1f6>
     da6:	0c ea       	ldi	r16, 0xAC	; 172
     da8:	10 e0       	ldi	r17, 0x00	; 0
     daa:	0e c0       	rjmp	.+28     	; 0xdc8 <vfprintf+0x212>
     dac:	00 eb       	ldi	r16, 0xB0	; 176
     dae:	10 e0       	ldi	r17, 0x00	; 0
     db0:	0b c0       	rjmp	.+22     	; 0xdc8 <vfprintf+0x212>
     db2:	e1 14       	cp	r14, r1
     db4:	f1 04       	cpc	r15, r1
     db6:	09 f0       	breq	.+2      	; 0xdba <vfprintf+0x204>
     db8:	80 52       	subi	r24, 0x20	; 32
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	b3 01       	movw	r22, r6
     dbe:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     dc2:	0f 5f       	subi	r16, 0xFF	; 255
     dc4:	1f 4f       	sbci	r17, 0xFF	; 255
     dc6:	05 c0       	rjmp	.+10     	; 0xdd2 <vfprintf+0x21c>
     dc8:	ef 2c       	mov	r14, r15
     dca:	ff 24       	eor	r15, r15
     dcc:	f0 e1       	ldi	r31, 0x10	; 16
     dce:	ef 22       	and	r14, r31
     dd0:	ff 24       	eor	r15, r15
     dd2:	f8 01       	movw	r30, r16
     dd4:	84 91       	lpm	r24, Z+
     dd6:	88 23       	and	r24, r24
     dd8:	61 f7       	brne	.-40     	; 0xdb2 <vfprintf+0x1fc>
     dda:	14 c1       	rjmp	.+552    	; 0x1004 <vfprintf+0x44e>
     ddc:	f7 fe       	sbrs	r15, 7
     dde:	12 c0       	rjmp	.+36     	; 0xe04 <vfprintf+0x24e>
     de0:	bc 0c       	add	r11, r12
     de2:	24 fe       	sbrs	r2, 4
     de4:	04 c0       	rjmp	.+8      	; 0xdee <vfprintf+0x238>
     de6:	8a 81       	ldd	r24, Y+2	; 0x02
     de8:	81 33       	cpi	r24, 0x31	; 49
     dea:	09 f4       	brne	.+2      	; 0xdee <vfprintf+0x238>
     dec:	ba 94       	dec	r11
     dee:	1b 14       	cp	r1, r11
     df0:	1c f0       	brlt	.+6      	; 0xdf8 <vfprintf+0x242>
     df2:	bb 24       	eor	r11, r11
     df4:	b3 94       	inc	r11
     df6:	2d c0       	rjmp	.+90     	; 0xe52 <vfprintf+0x29c>
     df8:	f8 e0       	ldi	r31, 0x08	; 8
     dfa:	fb 15       	cp	r31, r11
     dfc:	50 f5       	brcc	.+84     	; 0xe52 <vfprintf+0x29c>
     dfe:	38 e0       	ldi	r19, 0x08	; 8
     e00:	b3 2e       	mov	r11, r19
     e02:	27 c0       	rjmp	.+78     	; 0xe52 <vfprintf+0x29c>
     e04:	f6 fc       	sbrc	r15, 6
     e06:	25 c0       	rjmp	.+74     	; 0xe52 <vfprintf+0x29c>
     e08:	89 2d       	mov	r24, r9
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	8c 15       	cp	r24, r12
     e0e:	9d 05       	cpc	r25, r13
     e10:	4c f0       	brlt	.+18     	; 0xe24 <vfprintf+0x26e>
     e12:	2c ef       	ldi	r18, 0xFC	; 252
     e14:	c2 16       	cp	r12, r18
     e16:	2f ef       	ldi	r18, 0xFF	; 255
     e18:	d2 06       	cpc	r13, r18
     e1a:	24 f0       	brlt	.+8      	; 0xe24 <vfprintf+0x26e>
     e1c:	30 e8       	ldi	r19, 0x80	; 128
     e1e:	f3 2a       	or	r15, r19
     e20:	01 c0       	rjmp	.+2      	; 0xe24 <vfprintf+0x26e>
     e22:	9a 94       	dec	r9
     e24:	99 20       	and	r9, r9
     e26:	49 f0       	breq	.+18     	; 0xe3a <vfprintf+0x284>
     e28:	e2 e0       	ldi	r30, 0x02	; 2
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	ec 0f       	add	r30, r28
     e2e:	fd 1f       	adc	r31, r29
     e30:	e9 0d       	add	r30, r9
     e32:	f1 1d       	adc	r31, r1
     e34:	80 81       	ld	r24, Z
     e36:	80 33       	cpi	r24, 0x30	; 48
     e38:	a1 f3       	breq	.-24     	; 0xe22 <vfprintf+0x26c>
     e3a:	f7 fe       	sbrs	r15, 7
     e3c:	0a c0       	rjmp	.+20     	; 0xe52 <vfprintf+0x29c>
     e3e:	b9 2c       	mov	r11, r9
     e40:	b3 94       	inc	r11
     e42:	89 2d       	mov	r24, r9
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	c8 16       	cp	r12, r24
     e48:	d9 06       	cpc	r13, r25
     e4a:	14 f0       	brlt	.+4      	; 0xe50 <vfprintf+0x29a>
     e4c:	99 24       	eor	r9, r9
     e4e:	01 c0       	rjmp	.+2      	; 0xe52 <vfprintf+0x29c>
     e50:	9c 18       	sub	r9, r12
     e52:	f7 fc       	sbrc	r15, 7
     e54:	03 c0       	rjmp	.+6      	; 0xe5c <vfprintf+0x2a6>
     e56:	25 e0       	ldi	r18, 0x05	; 5
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	09 c0       	rjmp	.+18     	; 0xe6e <vfprintf+0x2b8>
     e5c:	1c 14       	cp	r1, r12
     e5e:	1d 04       	cpc	r1, r13
     e60:	1c f0       	brlt	.+6      	; 0xe68 <vfprintf+0x2b2>
     e62:	21 e0       	ldi	r18, 0x01	; 1
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	03 c0       	rjmp	.+6      	; 0xe6e <vfprintf+0x2b8>
     e68:	96 01       	movw	r18, r12
     e6a:	2f 5f       	subi	r18, 0xFF	; 255
     e6c:	3f 4f       	sbci	r19, 0xFF	; 255
     e6e:	11 23       	and	r17, r17
     e70:	11 f0       	breq	.+4      	; 0xe76 <vfprintf+0x2c0>
     e72:	2f 5f       	subi	r18, 0xFF	; 255
     e74:	3f 4f       	sbci	r19, 0xFF	; 255
     e76:	99 20       	and	r9, r9
     e78:	29 f0       	breq	.+10     	; 0xe84 <vfprintf+0x2ce>
     e7a:	89 2d       	mov	r24, r9
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	28 0f       	add	r18, r24
     e82:	39 1f       	adc	r19, r25
     e84:	88 2d       	mov	r24, r8
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	28 17       	cp	r18, r24
     e8a:	39 07       	cpc	r19, r25
     e8c:	14 f0       	brlt	.+4      	; 0xe92 <vfprintf+0x2dc>
     e8e:	88 24       	eor	r8, r8
     e90:	01 c0       	rjmp	.+2      	; 0xe94 <vfprintf+0x2de>
     e92:	82 1a       	sub	r8, r18
     e94:	4f 2c       	mov	r4, r15
     e96:	55 24       	eor	r5, r5
     e98:	c2 01       	movw	r24, r4
     e9a:	89 70       	andi	r24, 0x09	; 9
     e9c:	90 70       	andi	r25, 0x00	; 0
     e9e:	89 2b       	or	r24, r25
     ea0:	39 f0       	breq	.+14     	; 0xeb0 <vfprintf+0x2fa>
     ea2:	08 c0       	rjmp	.+16     	; 0xeb4 <vfprintf+0x2fe>
     ea4:	80 e2       	ldi	r24, 0x20	; 32
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	b3 01       	movw	r22, r6
     eaa:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     eae:	8a 94       	dec	r8
     eb0:	88 20       	and	r8, r8
     eb2:	c1 f7       	brne	.-16     	; 0xea4 <vfprintf+0x2ee>
     eb4:	11 23       	and	r17, r17
     eb6:	29 f0       	breq	.+10     	; 0xec2 <vfprintf+0x30c>
     eb8:	81 2f       	mov	r24, r17
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	b3 01       	movw	r22, r6
     ebe:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     ec2:	43 fe       	sbrs	r4, 3
     ec4:	07 c0       	rjmp	.+14     	; 0xed4 <vfprintf+0x31e>
     ec6:	08 c0       	rjmp	.+16     	; 0xed8 <vfprintf+0x322>
     ec8:	80 e3       	ldi	r24, 0x30	; 48
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	b3 01       	movw	r22, r6
     ece:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     ed2:	8a 94       	dec	r8
     ed4:	88 20       	and	r8, r8
     ed6:	c1 f7       	brne	.-16     	; 0xec8 <vfprintf+0x312>
     ed8:	f7 fe       	sbrs	r15, 7
     eda:	46 c0       	rjmp	.+140    	; 0xf68 <vfprintf+0x3b2>
     edc:	86 01       	movw	r16, r12
     ede:	d7 fe       	sbrs	r13, 7
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <vfprintf+0x330>
     ee2:	00 e0       	ldi	r16, 0x00	; 0
     ee4:	10 e0       	ldi	r17, 0x00	; 0
     ee6:	76 01       	movw	r14, r12
     ee8:	08 94       	sec
     eea:	e1 1c       	adc	r14, r1
     eec:	f1 1c       	adc	r15, r1
     eee:	e0 1a       	sub	r14, r16
     ef0:	f1 0a       	sbc	r15, r17
     ef2:	41 e0       	ldi	r20, 0x01	; 1
     ef4:	50 e0       	ldi	r21, 0x00	; 0
     ef6:	4c 0f       	add	r20, r28
     ef8:	5d 1f       	adc	r21, r29
     efa:	e4 0e       	add	r14, r20
     efc:	f5 1e       	adc	r15, r21
     efe:	26 01       	movw	r4, r12
     f00:	4b 18       	sub	r4, r11
     f02:	51 08       	sbc	r5, r1
     f04:	89 2d       	mov	r24, r9
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	aa 24       	eor	r10, r10
     f0a:	bb 24       	eor	r11, r11
     f0c:	a8 1a       	sub	r10, r24
     f0e:	b9 0a       	sbc	r11, r25
     f10:	5f ef       	ldi	r21, 0xFF	; 255
     f12:	0f 3f       	cpi	r16, 0xFF	; 255
     f14:	15 07       	cpc	r17, r21
     f16:	29 f4       	brne	.+10     	; 0xf22 <vfprintf+0x36c>
     f18:	8e e2       	ldi	r24, 0x2E	; 46
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	b3 01       	movw	r22, r6
     f1e:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     f22:	c0 16       	cp	r12, r16
     f24:	d1 06       	cpc	r13, r17
     f26:	34 f0       	brlt	.+12     	; 0xf34 <vfprintf+0x37e>
     f28:	40 16       	cp	r4, r16
     f2a:	51 06       	cpc	r5, r17
     f2c:	1c f4       	brge	.+6      	; 0xf34 <vfprintf+0x37e>
     f2e:	f7 01       	movw	r30, r14
     f30:	80 81       	ld	r24, Z
     f32:	01 c0       	rjmp	.+2      	; 0xf36 <vfprintf+0x380>
     f34:	80 e3       	ldi	r24, 0x30	; 48
     f36:	01 50       	subi	r16, 0x01	; 1
     f38:	10 40       	sbci	r17, 0x00	; 0
     f3a:	08 94       	sec
     f3c:	e1 1c       	adc	r14, r1
     f3e:	f1 1c       	adc	r15, r1
     f40:	0a 15       	cp	r16, r10
     f42:	1b 05       	cpc	r17, r11
     f44:	2c f0       	brlt	.+10     	; 0xf50 <vfprintf+0x39a>
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	b3 01       	movw	r22, r6
     f4a:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     f4e:	e0 cf       	rjmp	.-64     	; 0xf10 <vfprintf+0x35a>
     f50:	0c 15       	cp	r16, r12
     f52:	1d 05       	cpc	r17, r13
     f54:	39 f4       	brne	.+14     	; 0xf64 <vfprintf+0x3ae>
     f56:	9a 81       	ldd	r25, Y+2	; 0x02
     f58:	96 33       	cpi	r25, 0x36	; 54
     f5a:	18 f4       	brcc	.+6      	; 0xf62 <vfprintf+0x3ac>
     f5c:	95 33       	cpi	r25, 0x35	; 53
     f5e:	11 f4       	brne	.+4      	; 0xf64 <vfprintf+0x3ae>
     f60:	24 fe       	sbrs	r2, 4
     f62:	81 e3       	ldi	r24, 0x31	; 49
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	4b c0       	rjmp	.+150    	; 0xffe <vfprintf+0x448>
     f68:	8a 81       	ldd	r24, Y+2	; 0x02
     f6a:	81 33       	cpi	r24, 0x31	; 49
     f6c:	09 f0       	breq	.+2      	; 0xf70 <vfprintf+0x3ba>
     f6e:	0f 7e       	andi	r16, 0xEF	; 239
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	b3 01       	movw	r22, r6
     f74:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     f78:	99 20       	and	r9, r9
     f7a:	a1 f0       	breq	.+40     	; 0xfa4 <vfprintf+0x3ee>
     f7c:	8e e2       	ldi	r24, 0x2E	; 46
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	b3 01       	movw	r22, r6
     f82:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     f86:	12 e0       	ldi	r17, 0x02	; 2
     f88:	e1 e0       	ldi	r30, 0x01	; 1
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	ec 0f       	add	r30, r28
     f8e:	fd 1f       	adc	r31, r29
     f90:	e1 0f       	add	r30, r17
     f92:	f1 1d       	adc	r31, r1
     f94:	1f 5f       	subi	r17, 0xFF	; 255
     f96:	80 81       	ld	r24, Z
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	b3 01       	movw	r22, r6
     f9c:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     fa0:	9a 94       	dec	r9
     fa2:	91 f7       	brne	.-28     	; 0xf88 <vfprintf+0x3d2>
     fa4:	44 fc       	sbrc	r4, 4
     fa6:	03 c0       	rjmp	.+6      	; 0xfae <vfprintf+0x3f8>
     fa8:	85 e6       	ldi	r24, 0x65	; 101
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <vfprintf+0x3fc>
     fae:	85 e4       	ldi	r24, 0x45	; 69
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	b3 01       	movw	r22, r6
     fb4:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     fb8:	d7 fc       	sbrc	r13, 7
     fba:	05 c0       	rjmp	.+10     	; 0xfc6 <vfprintf+0x410>
     fbc:	c1 14       	cp	r12, r1
     fbe:	d1 04       	cpc	r13, r1
     fc0:	41 f4       	brne	.+16     	; 0xfd2 <vfprintf+0x41c>
     fc2:	04 ff       	sbrs	r16, 4
     fc4:	06 c0       	rjmp	.+12     	; 0xfd2 <vfprintf+0x41c>
     fc6:	d0 94       	com	r13
     fc8:	c1 94       	neg	r12
     fca:	d1 08       	sbc	r13, r1
     fcc:	d3 94       	inc	r13
     fce:	8d e2       	ldi	r24, 0x2D	; 45
     fd0:	01 c0       	rjmp	.+2      	; 0xfd4 <vfprintf+0x41e>
     fd2:	8b e2       	ldi	r24, 0x2B	; 43
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	b3 01       	movw	r22, r6
     fd8:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     fdc:	80 e3       	ldi	r24, 0x30	; 48
     fde:	05 c0       	rjmp	.+10     	; 0xfea <vfprintf+0x434>
     fe0:	8f 5f       	subi	r24, 0xFF	; 255
     fe2:	26 ef       	ldi	r18, 0xF6	; 246
     fe4:	3f ef       	ldi	r19, 0xFF	; 255
     fe6:	c2 0e       	add	r12, r18
     fe8:	d3 1e       	adc	r13, r19
     fea:	3a e0       	ldi	r19, 0x0A	; 10
     fec:	c3 16       	cp	r12, r19
     fee:	d1 04       	cpc	r13, r1
     ff0:	bc f7       	brge	.-18     	; 0xfe0 <vfprintf+0x42a>
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	b3 01       	movw	r22, r6
     ff6:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
     ffa:	c6 01       	movw	r24, r12
     ffc:	c0 96       	adiw	r24, 0x30	; 48
     ffe:	b3 01       	movw	r22, r6
    1000:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    1004:	cc 84       	ldd	r12, Y+12	; 0x0c
    1006:	dd 84       	ldd	r13, Y+13	; 0x0d
    1008:	52 c1       	rjmp	.+676    	; 0x12ae <vfprintf+0x6f8>
    100a:	93 36       	cpi	r25, 0x63	; 99
    100c:	31 f0       	breq	.+12     	; 0x101a <vfprintf+0x464>
    100e:	93 37       	cpi	r25, 0x73	; 115
    1010:	99 f0       	breq	.+38     	; 0x1038 <vfprintf+0x482>
    1012:	93 35       	cpi	r25, 0x53	; 83
    1014:	09 f0       	breq	.+2      	; 0x1018 <vfprintf+0x462>
    1016:	59 c0       	rjmp	.+178    	; 0x10ca <vfprintf+0x514>
    1018:	23 c0       	rjmp	.+70     	; 0x1060 <vfprintf+0x4aa>
    101a:	f6 01       	movw	r30, r12
    101c:	80 81       	ld	r24, Z
    101e:	89 83       	std	Y+1, r24	; 0x01
    1020:	5e 01       	movw	r10, r28
    1022:	08 94       	sec
    1024:	a1 1c       	adc	r10, r1
    1026:	b1 1c       	adc	r11, r1
    1028:	22 e0       	ldi	r18, 0x02	; 2
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	c2 0e       	add	r12, r18
    102e:	d3 1e       	adc	r13, r19
    1030:	21 e0       	ldi	r18, 0x01	; 1
    1032:	e2 2e       	mov	r14, r18
    1034:	f1 2c       	mov	r15, r1
    1036:	12 c0       	rjmp	.+36     	; 0x105c <vfprintf+0x4a6>
    1038:	f6 01       	movw	r30, r12
    103a:	a0 80       	ld	r10, Z
    103c:	b1 80       	ldd	r11, Z+1	; 0x01
    103e:	16 fd       	sbrc	r17, 6
    1040:	03 c0       	rjmp	.+6      	; 0x1048 <vfprintf+0x492>
    1042:	6f ef       	ldi	r22, 0xFF	; 255
    1044:	7f ef       	ldi	r23, 0xFF	; 255
    1046:	02 c0       	rjmp	.+4      	; 0x104c <vfprintf+0x496>
    1048:	69 2d       	mov	r22, r9
    104a:	70 e0       	ldi	r23, 0x00	; 0
    104c:	22 e0       	ldi	r18, 0x02	; 2
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	c2 0e       	add	r12, r18
    1052:	d3 1e       	adc	r13, r19
    1054:	c5 01       	movw	r24, r10
    1056:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <strnlen>
    105a:	7c 01       	movw	r14, r24
    105c:	1f 77       	andi	r17, 0x7F	; 127
    105e:	13 c0       	rjmp	.+38     	; 0x1086 <vfprintf+0x4d0>
    1060:	f6 01       	movw	r30, r12
    1062:	a0 80       	ld	r10, Z
    1064:	b1 80       	ldd	r11, Z+1	; 0x01
    1066:	16 fd       	sbrc	r17, 6
    1068:	03 c0       	rjmp	.+6      	; 0x1070 <vfprintf+0x4ba>
    106a:	6f ef       	ldi	r22, 0xFF	; 255
    106c:	7f ef       	ldi	r23, 0xFF	; 255
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <vfprintf+0x4be>
    1070:	69 2d       	mov	r22, r9
    1072:	70 e0       	ldi	r23, 0x00	; 0
    1074:	22 e0       	ldi	r18, 0x02	; 2
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	c2 0e       	add	r12, r18
    107a:	d3 1e       	adc	r13, r19
    107c:	c5 01       	movw	r24, r10
    107e:	0e 94 c9 0c 	call	0x1992	; 0x1992 <strnlen_P>
    1082:	7c 01       	movw	r14, r24
    1084:	10 68       	ori	r17, 0x80	; 128
    1086:	13 ff       	sbrs	r17, 3
    1088:	07 c0       	rjmp	.+14     	; 0x1098 <vfprintf+0x4e2>
    108a:	1b c0       	rjmp	.+54     	; 0x10c2 <vfprintf+0x50c>
    108c:	80 e2       	ldi	r24, 0x20	; 32
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	b3 01       	movw	r22, r6
    1092:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    1096:	8a 94       	dec	r8
    1098:	88 2d       	mov	r24, r8
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	e8 16       	cp	r14, r24
    109e:	f9 06       	cpc	r15, r25
    10a0:	a8 f3       	brcs	.-22     	; 0x108c <vfprintf+0x4d6>
    10a2:	0f c0       	rjmp	.+30     	; 0x10c2 <vfprintf+0x50c>
    10a4:	f5 01       	movw	r30, r10
    10a6:	17 fd       	sbrc	r17, 7
    10a8:	85 91       	lpm	r24, Z+
    10aa:	17 ff       	sbrs	r17, 7
    10ac:	81 91       	ld	r24, Z+
    10ae:	5f 01       	movw	r10, r30
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	b3 01       	movw	r22, r6
    10b4:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    10b8:	81 10       	cpse	r8, r1
    10ba:	8a 94       	dec	r8
    10bc:	08 94       	sec
    10be:	e1 08       	sbc	r14, r1
    10c0:	f1 08       	sbc	r15, r1
    10c2:	e1 14       	cp	r14, r1
    10c4:	f1 04       	cpc	r15, r1
    10c6:	71 f7       	brne	.-36     	; 0x10a4 <vfprintf+0x4ee>
    10c8:	f2 c0       	rjmp	.+484    	; 0x12ae <vfprintf+0x6f8>
    10ca:	94 36       	cpi	r25, 0x64	; 100
    10cc:	11 f0       	breq	.+4      	; 0x10d2 <vfprintf+0x51c>
    10ce:	99 36       	cpi	r25, 0x69	; 105
    10d0:	89 f5       	brne	.+98     	; 0x1134 <vfprintf+0x57e>
    10d2:	17 ff       	sbrs	r17, 7
    10d4:	08 c0       	rjmp	.+16     	; 0x10e6 <vfprintf+0x530>
    10d6:	f6 01       	movw	r30, r12
    10d8:	20 81       	ld	r18, Z
    10da:	31 81       	ldd	r19, Z+1	; 0x01
    10dc:	42 81       	ldd	r20, Z+2	; 0x02
    10de:	53 81       	ldd	r21, Z+3	; 0x03
    10e0:	84 e0       	ldi	r24, 0x04	; 4
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	0a c0       	rjmp	.+20     	; 0x10fa <vfprintf+0x544>
    10e6:	f6 01       	movw	r30, r12
    10e8:	80 81       	ld	r24, Z
    10ea:	91 81       	ldd	r25, Z+1	; 0x01
    10ec:	9c 01       	movw	r18, r24
    10ee:	44 27       	eor	r20, r20
    10f0:	37 fd       	sbrc	r19, 7
    10f2:	40 95       	com	r20
    10f4:	54 2f       	mov	r21, r20
    10f6:	82 e0       	ldi	r24, 0x02	; 2
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	c8 0e       	add	r12, r24
    10fc:	d9 1e       	adc	r13, r25
    10fe:	9f e6       	ldi	r25, 0x6F	; 111
    1100:	f9 2e       	mov	r15, r25
    1102:	f1 22       	and	r15, r17
    1104:	57 ff       	sbrs	r21, 7
    1106:	09 c0       	rjmp	.+18     	; 0x111a <vfprintf+0x564>
    1108:	50 95       	com	r21
    110a:	40 95       	com	r20
    110c:	30 95       	com	r19
    110e:	21 95       	neg	r18
    1110:	3f 4f       	sbci	r19, 0xFF	; 255
    1112:	4f 4f       	sbci	r20, 0xFF	; 255
    1114:	5f 4f       	sbci	r21, 0xFF	; 255
    1116:	90 e8       	ldi	r25, 0x80	; 128
    1118:	f9 2a       	or	r15, r25
    111a:	ca 01       	movw	r24, r20
    111c:	b9 01       	movw	r22, r18
    111e:	ae 01       	movw	r20, r28
    1120:	4f 5f       	subi	r20, 0xFF	; 255
    1122:	5f 4f       	sbci	r21, 0xFF	; 255
    1124:	2a e0       	ldi	r18, 0x0A	; 10
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__ultoa_invert>
    112c:	e8 2e       	mov	r14, r24
    112e:	e8 89       	ldd	r30, Y+16	; 0x10
    1130:	ee 1a       	sub	r14, r30
    1132:	41 c0       	rjmp	.+130    	; 0x11b6 <vfprintf+0x600>
    1134:	95 37       	cpi	r25, 0x75	; 117
    1136:	21 f4       	brne	.+8      	; 0x1140 <vfprintf+0x58a>
    1138:	1f 7e       	andi	r17, 0xEF	; 239
    113a:	2a e0       	ldi	r18, 0x0A	; 10
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	1c c0       	rjmp	.+56     	; 0x1178 <vfprintf+0x5c2>
    1140:	19 7f       	andi	r17, 0xF9	; 249
    1142:	9f 36       	cpi	r25, 0x6F	; 111
    1144:	61 f0       	breq	.+24     	; 0x115e <vfprintf+0x5a8>
    1146:	90 37       	cpi	r25, 0x70	; 112
    1148:	20 f4       	brcc	.+8      	; 0x1152 <vfprintf+0x59c>
    114a:	98 35       	cpi	r25, 0x58	; 88
    114c:	09 f0       	breq	.+2      	; 0x1150 <vfprintf+0x59a>
    114e:	b2 c0       	rjmp	.+356    	; 0x12b4 <vfprintf+0x6fe>
    1150:	0f c0       	rjmp	.+30     	; 0x1170 <vfprintf+0x5ba>
    1152:	90 37       	cpi	r25, 0x70	; 112
    1154:	39 f0       	breq	.+14     	; 0x1164 <vfprintf+0x5ae>
    1156:	98 37       	cpi	r25, 0x78	; 120
    1158:	09 f0       	breq	.+2      	; 0x115c <vfprintf+0x5a6>
    115a:	ac c0       	rjmp	.+344    	; 0x12b4 <vfprintf+0x6fe>
    115c:	04 c0       	rjmp	.+8      	; 0x1166 <vfprintf+0x5b0>
    115e:	28 e0       	ldi	r18, 0x08	; 8
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	0a c0       	rjmp	.+20     	; 0x1178 <vfprintf+0x5c2>
    1164:	10 61       	ori	r17, 0x10	; 16
    1166:	14 fd       	sbrc	r17, 4
    1168:	14 60       	ori	r17, 0x04	; 4
    116a:	20 e1       	ldi	r18, 0x10	; 16
    116c:	30 e0       	ldi	r19, 0x00	; 0
    116e:	04 c0       	rjmp	.+8      	; 0x1178 <vfprintf+0x5c2>
    1170:	14 fd       	sbrc	r17, 4
    1172:	16 60       	ori	r17, 0x06	; 6
    1174:	20 e1       	ldi	r18, 0x10	; 16
    1176:	32 e0       	ldi	r19, 0x02	; 2
    1178:	17 ff       	sbrs	r17, 7
    117a:	08 c0       	rjmp	.+16     	; 0x118c <vfprintf+0x5d6>
    117c:	f6 01       	movw	r30, r12
    117e:	60 81       	ld	r22, Z
    1180:	71 81       	ldd	r23, Z+1	; 0x01
    1182:	82 81       	ldd	r24, Z+2	; 0x02
    1184:	93 81       	ldd	r25, Z+3	; 0x03
    1186:	44 e0       	ldi	r20, 0x04	; 4
    1188:	50 e0       	ldi	r21, 0x00	; 0
    118a:	08 c0       	rjmp	.+16     	; 0x119c <vfprintf+0x5e6>
    118c:	f6 01       	movw	r30, r12
    118e:	80 81       	ld	r24, Z
    1190:	91 81       	ldd	r25, Z+1	; 0x01
    1192:	bc 01       	movw	r22, r24
    1194:	80 e0       	ldi	r24, 0x00	; 0
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	42 e0       	ldi	r20, 0x02	; 2
    119a:	50 e0       	ldi	r21, 0x00	; 0
    119c:	c4 0e       	add	r12, r20
    119e:	d5 1e       	adc	r13, r21
    11a0:	ae 01       	movw	r20, r28
    11a2:	4f 5f       	subi	r20, 0xFF	; 255
    11a4:	5f 4f       	sbci	r21, 0xFF	; 255
    11a6:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__ultoa_invert>
    11aa:	e8 2e       	mov	r14, r24
    11ac:	58 89       	ldd	r21, Y+16	; 0x10
    11ae:	e5 1a       	sub	r14, r21
    11b0:	8f e7       	ldi	r24, 0x7F	; 127
    11b2:	f8 2e       	mov	r15, r24
    11b4:	f1 22       	and	r15, r17
    11b6:	f6 fe       	sbrs	r15, 6
    11b8:	0b c0       	rjmp	.+22     	; 0x11d0 <vfprintf+0x61a>
    11ba:	8e ef       	ldi	r24, 0xFE	; 254
    11bc:	f8 22       	and	r15, r24
    11be:	e9 14       	cp	r14, r9
    11c0:	38 f4       	brcc	.+14     	; 0x11d0 <vfprintf+0x61a>
    11c2:	f4 fe       	sbrs	r15, 4
    11c4:	07 c0       	rjmp	.+14     	; 0x11d4 <vfprintf+0x61e>
    11c6:	f2 fc       	sbrc	r15, 2
    11c8:	05 c0       	rjmp	.+10     	; 0x11d4 <vfprintf+0x61e>
    11ca:	9f ee       	ldi	r25, 0xEF	; 239
    11cc:	f9 22       	and	r15, r25
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <vfprintf+0x61e>
    11d0:	1e 2d       	mov	r17, r14
    11d2:	01 c0       	rjmp	.+2      	; 0x11d6 <vfprintf+0x620>
    11d4:	19 2d       	mov	r17, r9
    11d6:	f4 fe       	sbrs	r15, 4
    11d8:	0d c0       	rjmp	.+26     	; 0x11f4 <vfprintf+0x63e>
    11da:	fe 01       	movw	r30, r28
    11dc:	ee 0d       	add	r30, r14
    11de:	f1 1d       	adc	r31, r1
    11e0:	80 81       	ld	r24, Z
    11e2:	80 33       	cpi	r24, 0x30	; 48
    11e4:	19 f4       	brne	.+6      	; 0x11ec <vfprintf+0x636>
    11e6:	e9 ee       	ldi	r30, 0xE9	; 233
    11e8:	fe 22       	and	r15, r30
    11ea:	08 c0       	rjmp	.+16     	; 0x11fc <vfprintf+0x646>
    11ec:	1f 5f       	subi	r17, 0xFF	; 255
    11ee:	f2 fe       	sbrs	r15, 2
    11f0:	05 c0       	rjmp	.+10     	; 0x11fc <vfprintf+0x646>
    11f2:	03 c0       	rjmp	.+6      	; 0x11fa <vfprintf+0x644>
    11f4:	8f 2d       	mov	r24, r15
    11f6:	86 78       	andi	r24, 0x86	; 134
    11f8:	09 f0       	breq	.+2      	; 0x11fc <vfprintf+0x646>
    11fa:	1f 5f       	subi	r17, 0xFF	; 255
    11fc:	0f 2d       	mov	r16, r15
    11fe:	f3 fc       	sbrc	r15, 3
    1200:	14 c0       	rjmp	.+40     	; 0x122a <vfprintf+0x674>
    1202:	f0 fe       	sbrs	r15, 0
    1204:	0f c0       	rjmp	.+30     	; 0x1224 <vfprintf+0x66e>
    1206:	18 15       	cp	r17, r8
    1208:	10 f0       	brcs	.+4      	; 0x120e <vfprintf+0x658>
    120a:	9e 2c       	mov	r9, r14
    120c:	0b c0       	rjmp	.+22     	; 0x1224 <vfprintf+0x66e>
    120e:	9e 2c       	mov	r9, r14
    1210:	98 0c       	add	r9, r8
    1212:	91 1a       	sub	r9, r17
    1214:	18 2d       	mov	r17, r8
    1216:	06 c0       	rjmp	.+12     	; 0x1224 <vfprintf+0x66e>
    1218:	80 e2       	ldi	r24, 0x20	; 32
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	b3 01       	movw	r22, r6
    121e:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    1222:	1f 5f       	subi	r17, 0xFF	; 255
    1224:	18 15       	cp	r17, r8
    1226:	c0 f3       	brcs	.-16     	; 0x1218 <vfprintf+0x662>
    1228:	04 c0       	rjmp	.+8      	; 0x1232 <vfprintf+0x67c>
    122a:	18 15       	cp	r17, r8
    122c:	10 f4       	brcc	.+4      	; 0x1232 <vfprintf+0x67c>
    122e:	81 1a       	sub	r8, r17
    1230:	01 c0       	rjmp	.+2      	; 0x1234 <vfprintf+0x67e>
    1232:	88 24       	eor	r8, r8
    1234:	04 ff       	sbrs	r16, 4
    1236:	0f c0       	rjmp	.+30     	; 0x1256 <vfprintf+0x6a0>
    1238:	80 e3       	ldi	r24, 0x30	; 48
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	b3 01       	movw	r22, r6
    123e:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    1242:	02 ff       	sbrs	r16, 2
    1244:	1d c0       	rjmp	.+58     	; 0x1280 <vfprintf+0x6ca>
    1246:	01 fd       	sbrc	r16, 1
    1248:	03 c0       	rjmp	.+6      	; 0x1250 <vfprintf+0x69a>
    124a:	88 e7       	ldi	r24, 0x78	; 120
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	0e c0       	rjmp	.+28     	; 0x126c <vfprintf+0x6b6>
    1250:	88 e5       	ldi	r24, 0x58	; 88
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	0b c0       	rjmp	.+22     	; 0x126c <vfprintf+0x6b6>
    1256:	80 2f       	mov	r24, r16
    1258:	86 78       	andi	r24, 0x86	; 134
    125a:	91 f0       	breq	.+36     	; 0x1280 <vfprintf+0x6ca>
    125c:	01 ff       	sbrs	r16, 1
    125e:	02 c0       	rjmp	.+4      	; 0x1264 <vfprintf+0x6ae>
    1260:	8b e2       	ldi	r24, 0x2B	; 43
    1262:	01 c0       	rjmp	.+2      	; 0x1266 <vfprintf+0x6b0>
    1264:	80 e2       	ldi	r24, 0x20	; 32
    1266:	f7 fc       	sbrc	r15, 7
    1268:	8d e2       	ldi	r24, 0x2D	; 45
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	b3 01       	movw	r22, r6
    126e:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    1272:	06 c0       	rjmp	.+12     	; 0x1280 <vfprintf+0x6ca>
    1274:	80 e3       	ldi	r24, 0x30	; 48
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	b3 01       	movw	r22, r6
    127a:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    127e:	9a 94       	dec	r9
    1280:	e9 14       	cp	r14, r9
    1282:	c0 f3       	brcs	.-16     	; 0x1274 <vfprintf+0x6be>
    1284:	ea 94       	dec	r14
    1286:	e1 e0       	ldi	r30, 0x01	; 1
    1288:	f0 e0       	ldi	r31, 0x00	; 0
    128a:	ec 0f       	add	r30, r28
    128c:	fd 1f       	adc	r31, r29
    128e:	ee 0d       	add	r30, r14
    1290:	f1 1d       	adc	r31, r1
    1292:	80 81       	ld	r24, Z
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	b3 01       	movw	r22, r6
    1298:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    129c:	ee 20       	and	r14, r14
    129e:	91 f7       	brne	.-28     	; 0x1284 <vfprintf+0x6ce>
    12a0:	06 c0       	rjmp	.+12     	; 0x12ae <vfprintf+0x6f8>
    12a2:	80 e2       	ldi	r24, 0x20	; 32
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	b3 01       	movw	r22, r6
    12a8:	0e 94 df 0c 	call	0x19be	; 0x19be <fputc>
    12ac:	8a 94       	dec	r8
    12ae:	88 20       	and	r8, r8
    12b0:	c1 f7       	brne	.-16     	; 0x12a2 <vfprintf+0x6ec>
    12b2:	99 cc       	rjmp	.-1742   	; 0xbe6 <vfprintf+0x30>
    12b4:	f3 01       	movw	r30, r6
    12b6:	66 81       	ldd	r22, Z+6	; 0x06
    12b8:	77 81       	ldd	r23, Z+7	; 0x07
    12ba:	cb 01       	movw	r24, r22
    12bc:	61 96       	adiw	r28, 0x11	; 17
    12be:	e2 e1       	ldi	r30, 0x12	; 18
    12c0:	0c 94 b4 0b 	jmp	0x1768	; 0x1768 <__epilogue_restores__>

000012c4 <__subsf3>:
    12c4:	50 58       	subi	r21, 0x80	; 128

000012c6 <__addsf3>:
    12c6:	bb 27       	eor	r27, r27
    12c8:	aa 27       	eor	r26, r26
    12ca:	0e d0       	rcall	.+28     	; 0x12e8 <__addsf3x>
    12cc:	75 c1       	rjmp	.+746    	; 0x15b8 <__fp_round>
    12ce:	66 d1       	rcall	.+716    	; 0x159c <__fp_pscA>
    12d0:	30 f0       	brcs	.+12     	; 0x12de <__addsf3+0x18>
    12d2:	6b d1       	rcall	.+726    	; 0x15aa <__fp_pscB>
    12d4:	20 f0       	brcs	.+8      	; 0x12de <__addsf3+0x18>
    12d6:	31 f4       	brne	.+12     	; 0x12e4 <__addsf3+0x1e>
    12d8:	9f 3f       	cpi	r25, 0xFF	; 255
    12da:	11 f4       	brne	.+4      	; 0x12e0 <__addsf3+0x1a>
    12dc:	1e f4       	brtc	.+6      	; 0x12e4 <__addsf3+0x1e>
    12de:	5b c1       	rjmp	.+694    	; 0x1596 <__fp_nan>
    12e0:	0e f4       	brtc	.+2      	; 0x12e4 <__addsf3+0x1e>
    12e2:	e0 95       	com	r30
    12e4:	e7 fb       	bst	r30, 7
    12e6:	51 c1       	rjmp	.+674    	; 0x158a <__fp_inf>

000012e8 <__addsf3x>:
    12e8:	e9 2f       	mov	r30, r25
    12ea:	77 d1       	rcall	.+750    	; 0x15da <__fp_split3>
    12ec:	80 f3       	brcs	.-32     	; 0x12ce <__addsf3+0x8>
    12ee:	ba 17       	cp	r27, r26
    12f0:	62 07       	cpc	r22, r18
    12f2:	73 07       	cpc	r23, r19
    12f4:	84 07       	cpc	r24, r20
    12f6:	95 07       	cpc	r25, r21
    12f8:	18 f0       	brcs	.+6      	; 0x1300 <__addsf3x+0x18>
    12fa:	71 f4       	brne	.+28     	; 0x1318 <__addsf3x+0x30>
    12fc:	9e f5       	brtc	.+102    	; 0x1364 <__addsf3x+0x7c>
    12fe:	8f c1       	rjmp	.+798    	; 0x161e <__fp_zero>
    1300:	0e f4       	brtc	.+2      	; 0x1304 <__addsf3x+0x1c>
    1302:	e0 95       	com	r30
    1304:	0b 2e       	mov	r0, r27
    1306:	ba 2f       	mov	r27, r26
    1308:	a0 2d       	mov	r26, r0
    130a:	0b 01       	movw	r0, r22
    130c:	b9 01       	movw	r22, r18
    130e:	90 01       	movw	r18, r0
    1310:	0c 01       	movw	r0, r24
    1312:	ca 01       	movw	r24, r20
    1314:	a0 01       	movw	r20, r0
    1316:	11 24       	eor	r1, r1
    1318:	ff 27       	eor	r31, r31
    131a:	59 1b       	sub	r21, r25
    131c:	99 f0       	breq	.+38     	; 0x1344 <__addsf3x+0x5c>
    131e:	59 3f       	cpi	r21, 0xF9	; 249
    1320:	50 f4       	brcc	.+20     	; 0x1336 <__addsf3x+0x4e>
    1322:	50 3e       	cpi	r21, 0xE0	; 224
    1324:	68 f1       	brcs	.+90     	; 0x1380 <__addsf3x+0x98>
    1326:	1a 16       	cp	r1, r26
    1328:	f0 40       	sbci	r31, 0x00	; 0
    132a:	a2 2f       	mov	r26, r18
    132c:	23 2f       	mov	r18, r19
    132e:	34 2f       	mov	r19, r20
    1330:	44 27       	eor	r20, r20
    1332:	58 5f       	subi	r21, 0xF8	; 248
    1334:	f3 cf       	rjmp	.-26     	; 0x131c <__addsf3x+0x34>
    1336:	46 95       	lsr	r20
    1338:	37 95       	ror	r19
    133a:	27 95       	ror	r18
    133c:	a7 95       	ror	r26
    133e:	f0 40       	sbci	r31, 0x00	; 0
    1340:	53 95       	inc	r21
    1342:	c9 f7       	brne	.-14     	; 0x1336 <__addsf3x+0x4e>
    1344:	7e f4       	brtc	.+30     	; 0x1364 <__addsf3x+0x7c>
    1346:	1f 16       	cp	r1, r31
    1348:	ba 0b       	sbc	r27, r26
    134a:	62 0b       	sbc	r22, r18
    134c:	73 0b       	sbc	r23, r19
    134e:	84 0b       	sbc	r24, r20
    1350:	ba f0       	brmi	.+46     	; 0x1380 <__addsf3x+0x98>
    1352:	91 50       	subi	r25, 0x01	; 1
    1354:	a1 f0       	breq	.+40     	; 0x137e <__addsf3x+0x96>
    1356:	ff 0f       	add	r31, r31
    1358:	bb 1f       	adc	r27, r27
    135a:	66 1f       	adc	r22, r22
    135c:	77 1f       	adc	r23, r23
    135e:	88 1f       	adc	r24, r24
    1360:	c2 f7       	brpl	.-16     	; 0x1352 <__addsf3x+0x6a>
    1362:	0e c0       	rjmp	.+28     	; 0x1380 <__addsf3x+0x98>
    1364:	ba 0f       	add	r27, r26
    1366:	62 1f       	adc	r22, r18
    1368:	73 1f       	adc	r23, r19
    136a:	84 1f       	adc	r24, r20
    136c:	48 f4       	brcc	.+18     	; 0x1380 <__addsf3x+0x98>
    136e:	87 95       	ror	r24
    1370:	77 95       	ror	r23
    1372:	67 95       	ror	r22
    1374:	b7 95       	ror	r27
    1376:	f7 95       	ror	r31
    1378:	9e 3f       	cpi	r25, 0xFE	; 254
    137a:	08 f0       	brcs	.+2      	; 0x137e <__addsf3x+0x96>
    137c:	b3 cf       	rjmp	.-154    	; 0x12e4 <__addsf3+0x1e>
    137e:	93 95       	inc	r25
    1380:	88 0f       	add	r24, r24
    1382:	08 f0       	brcs	.+2      	; 0x1386 <__addsf3x+0x9e>
    1384:	99 27       	eor	r25, r25
    1386:	ee 0f       	add	r30, r30
    1388:	97 95       	ror	r25
    138a:	87 95       	ror	r24
    138c:	08 95       	ret

0000138e <__cmpsf2>:
    138e:	d9 d0       	rcall	.+434    	; 0x1542 <__fp_cmp>
    1390:	08 f4       	brcc	.+2      	; 0x1394 <__cmpsf2+0x6>
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	08 95       	ret

00001396 <__divsf3>:
    1396:	0c d0       	rcall	.+24     	; 0x13b0 <__divsf3x>
    1398:	0f c1       	rjmp	.+542    	; 0x15b8 <__fp_round>
    139a:	07 d1       	rcall	.+526    	; 0x15aa <__fp_pscB>
    139c:	40 f0       	brcs	.+16     	; 0x13ae <__divsf3+0x18>
    139e:	fe d0       	rcall	.+508    	; 0x159c <__fp_pscA>
    13a0:	30 f0       	brcs	.+12     	; 0x13ae <__divsf3+0x18>
    13a2:	21 f4       	brne	.+8      	; 0x13ac <__divsf3+0x16>
    13a4:	5f 3f       	cpi	r21, 0xFF	; 255
    13a6:	19 f0       	breq	.+6      	; 0x13ae <__divsf3+0x18>
    13a8:	f0 c0       	rjmp	.+480    	; 0x158a <__fp_inf>
    13aa:	51 11       	cpse	r21, r1
    13ac:	39 c1       	rjmp	.+626    	; 0x1620 <__fp_szero>
    13ae:	f3 c0       	rjmp	.+486    	; 0x1596 <__fp_nan>

000013b0 <__divsf3x>:
    13b0:	14 d1       	rcall	.+552    	; 0x15da <__fp_split3>
    13b2:	98 f3       	brcs	.-26     	; 0x139a <__divsf3+0x4>

000013b4 <__divsf3_pse>:
    13b4:	99 23       	and	r25, r25
    13b6:	c9 f3       	breq	.-14     	; 0x13aa <__divsf3+0x14>
    13b8:	55 23       	and	r21, r21
    13ba:	b1 f3       	breq	.-20     	; 0x13a8 <__divsf3+0x12>
    13bc:	95 1b       	sub	r25, r21
    13be:	55 0b       	sbc	r21, r21
    13c0:	bb 27       	eor	r27, r27
    13c2:	aa 27       	eor	r26, r26
    13c4:	62 17       	cp	r22, r18
    13c6:	73 07       	cpc	r23, r19
    13c8:	84 07       	cpc	r24, r20
    13ca:	38 f0       	brcs	.+14     	; 0x13da <__divsf3_pse+0x26>
    13cc:	9f 5f       	subi	r25, 0xFF	; 255
    13ce:	5f 4f       	sbci	r21, 0xFF	; 255
    13d0:	22 0f       	add	r18, r18
    13d2:	33 1f       	adc	r19, r19
    13d4:	44 1f       	adc	r20, r20
    13d6:	aa 1f       	adc	r26, r26
    13d8:	a9 f3       	breq	.-22     	; 0x13c4 <__divsf3_pse+0x10>
    13da:	33 d0       	rcall	.+102    	; 0x1442 <__divsf3_pse+0x8e>
    13dc:	0e 2e       	mov	r0, r30
    13de:	3a f0       	brmi	.+14     	; 0x13ee <__divsf3_pse+0x3a>
    13e0:	e0 e8       	ldi	r30, 0x80	; 128
    13e2:	30 d0       	rcall	.+96     	; 0x1444 <__divsf3_pse+0x90>
    13e4:	91 50       	subi	r25, 0x01	; 1
    13e6:	50 40       	sbci	r21, 0x00	; 0
    13e8:	e6 95       	lsr	r30
    13ea:	00 1c       	adc	r0, r0
    13ec:	ca f7       	brpl	.-14     	; 0x13e0 <__divsf3_pse+0x2c>
    13ee:	29 d0       	rcall	.+82     	; 0x1442 <__divsf3_pse+0x8e>
    13f0:	fe 2f       	mov	r31, r30
    13f2:	27 d0       	rcall	.+78     	; 0x1442 <__divsf3_pse+0x8e>
    13f4:	66 0f       	add	r22, r22
    13f6:	77 1f       	adc	r23, r23
    13f8:	88 1f       	adc	r24, r24
    13fa:	bb 1f       	adc	r27, r27
    13fc:	26 17       	cp	r18, r22
    13fe:	37 07       	cpc	r19, r23
    1400:	48 07       	cpc	r20, r24
    1402:	ab 07       	cpc	r26, r27
    1404:	b0 e8       	ldi	r27, 0x80	; 128
    1406:	09 f0       	breq	.+2      	; 0x140a <__divsf3_pse+0x56>
    1408:	bb 0b       	sbc	r27, r27
    140a:	80 2d       	mov	r24, r0
    140c:	bf 01       	movw	r22, r30
    140e:	ff 27       	eor	r31, r31
    1410:	93 58       	subi	r25, 0x83	; 131
    1412:	5f 4f       	sbci	r21, 0xFF	; 255
    1414:	2a f0       	brmi	.+10     	; 0x1420 <__divsf3_pse+0x6c>
    1416:	9e 3f       	cpi	r25, 0xFE	; 254
    1418:	51 05       	cpc	r21, r1
    141a:	68 f0       	brcs	.+26     	; 0x1436 <__divsf3_pse+0x82>
    141c:	b6 c0       	rjmp	.+364    	; 0x158a <__fp_inf>
    141e:	00 c1       	rjmp	.+512    	; 0x1620 <__fp_szero>
    1420:	5f 3f       	cpi	r21, 0xFF	; 255
    1422:	ec f3       	brlt	.-6      	; 0x141e <__divsf3_pse+0x6a>
    1424:	98 3e       	cpi	r25, 0xE8	; 232
    1426:	dc f3       	brlt	.-10     	; 0x141e <__divsf3_pse+0x6a>
    1428:	86 95       	lsr	r24
    142a:	77 95       	ror	r23
    142c:	67 95       	ror	r22
    142e:	b7 95       	ror	r27
    1430:	f7 95       	ror	r31
    1432:	9f 5f       	subi	r25, 0xFF	; 255
    1434:	c9 f7       	brne	.-14     	; 0x1428 <__divsf3_pse+0x74>
    1436:	88 0f       	add	r24, r24
    1438:	91 1d       	adc	r25, r1
    143a:	96 95       	lsr	r25
    143c:	87 95       	ror	r24
    143e:	97 f9       	bld	r25, 7
    1440:	08 95       	ret
    1442:	e1 e0       	ldi	r30, 0x01	; 1
    1444:	66 0f       	add	r22, r22
    1446:	77 1f       	adc	r23, r23
    1448:	88 1f       	adc	r24, r24
    144a:	bb 1f       	adc	r27, r27
    144c:	62 17       	cp	r22, r18
    144e:	73 07       	cpc	r23, r19
    1450:	84 07       	cpc	r24, r20
    1452:	ba 07       	cpc	r27, r26
    1454:	20 f0       	brcs	.+8      	; 0x145e <__divsf3_pse+0xaa>
    1456:	62 1b       	sub	r22, r18
    1458:	73 0b       	sbc	r23, r19
    145a:	84 0b       	sbc	r24, r20
    145c:	ba 0b       	sbc	r27, r26
    145e:	ee 1f       	adc	r30, r30
    1460:	88 f7       	brcc	.-30     	; 0x1444 <__divsf3_pse+0x90>
    1462:	e0 95       	com	r30
    1464:	08 95       	ret

00001466 <__fixsfsi>:
    1466:	04 d0       	rcall	.+8      	; 0x1470 <__fixunssfsi>
    1468:	68 94       	set
    146a:	b1 11       	cpse	r27, r1
    146c:	d9 c0       	rjmp	.+434    	; 0x1620 <__fp_szero>
    146e:	08 95       	ret

00001470 <__fixunssfsi>:
    1470:	bc d0       	rcall	.+376    	; 0x15ea <__fp_splitA>
    1472:	88 f0       	brcs	.+34     	; 0x1496 <__fixunssfsi+0x26>
    1474:	9f 57       	subi	r25, 0x7F	; 127
    1476:	90 f0       	brcs	.+36     	; 0x149c <__fixunssfsi+0x2c>
    1478:	b9 2f       	mov	r27, r25
    147a:	99 27       	eor	r25, r25
    147c:	b7 51       	subi	r27, 0x17	; 23
    147e:	a0 f0       	brcs	.+40     	; 0x14a8 <__fixunssfsi+0x38>
    1480:	d1 f0       	breq	.+52     	; 0x14b6 <__fixunssfsi+0x46>
    1482:	66 0f       	add	r22, r22
    1484:	77 1f       	adc	r23, r23
    1486:	88 1f       	adc	r24, r24
    1488:	99 1f       	adc	r25, r25
    148a:	1a f0       	brmi	.+6      	; 0x1492 <__fixunssfsi+0x22>
    148c:	ba 95       	dec	r27
    148e:	c9 f7       	brne	.-14     	; 0x1482 <__fixunssfsi+0x12>
    1490:	12 c0       	rjmp	.+36     	; 0x14b6 <__fixunssfsi+0x46>
    1492:	b1 30       	cpi	r27, 0x01	; 1
    1494:	81 f0       	breq	.+32     	; 0x14b6 <__fixunssfsi+0x46>
    1496:	c3 d0       	rcall	.+390    	; 0x161e <__fp_zero>
    1498:	b1 e0       	ldi	r27, 0x01	; 1
    149a:	08 95       	ret
    149c:	c0 c0       	rjmp	.+384    	; 0x161e <__fp_zero>
    149e:	67 2f       	mov	r22, r23
    14a0:	78 2f       	mov	r23, r24
    14a2:	88 27       	eor	r24, r24
    14a4:	b8 5f       	subi	r27, 0xF8	; 248
    14a6:	39 f0       	breq	.+14     	; 0x14b6 <__fixunssfsi+0x46>
    14a8:	b9 3f       	cpi	r27, 0xF9	; 249
    14aa:	cc f3       	brlt	.-14     	; 0x149e <__fixunssfsi+0x2e>
    14ac:	86 95       	lsr	r24
    14ae:	77 95       	ror	r23
    14b0:	67 95       	ror	r22
    14b2:	b3 95       	inc	r27
    14b4:	d9 f7       	brne	.-10     	; 0x14ac <__fixunssfsi+0x3c>
    14b6:	3e f4       	brtc	.+14     	; 0x14c6 <__fixunssfsi+0x56>
    14b8:	90 95       	com	r25
    14ba:	80 95       	com	r24
    14bc:	70 95       	com	r23
    14be:	61 95       	neg	r22
    14c0:	7f 4f       	sbci	r23, 0xFF	; 255
    14c2:	8f 4f       	sbci	r24, 0xFF	; 255
    14c4:	9f 4f       	sbci	r25, 0xFF	; 255
    14c6:	08 95       	ret

000014c8 <__floatunsisf>:
    14c8:	e8 94       	clt
    14ca:	09 c0       	rjmp	.+18     	; 0x14de <__floatsisf+0x12>

000014cc <__floatsisf>:
    14cc:	97 fb       	bst	r25, 7
    14ce:	3e f4       	brtc	.+14     	; 0x14de <__floatsisf+0x12>
    14d0:	90 95       	com	r25
    14d2:	80 95       	com	r24
    14d4:	70 95       	com	r23
    14d6:	61 95       	neg	r22
    14d8:	7f 4f       	sbci	r23, 0xFF	; 255
    14da:	8f 4f       	sbci	r24, 0xFF	; 255
    14dc:	9f 4f       	sbci	r25, 0xFF	; 255
    14de:	99 23       	and	r25, r25
    14e0:	a9 f0       	breq	.+42     	; 0x150c <__floatsisf+0x40>
    14e2:	f9 2f       	mov	r31, r25
    14e4:	96 e9       	ldi	r25, 0x96	; 150
    14e6:	bb 27       	eor	r27, r27
    14e8:	93 95       	inc	r25
    14ea:	f6 95       	lsr	r31
    14ec:	87 95       	ror	r24
    14ee:	77 95       	ror	r23
    14f0:	67 95       	ror	r22
    14f2:	b7 95       	ror	r27
    14f4:	f1 11       	cpse	r31, r1
    14f6:	f8 cf       	rjmp	.-16     	; 0x14e8 <__floatsisf+0x1c>
    14f8:	fa f4       	brpl	.+62     	; 0x1538 <__floatsisf+0x6c>
    14fa:	bb 0f       	add	r27, r27
    14fc:	11 f4       	brne	.+4      	; 0x1502 <__floatsisf+0x36>
    14fe:	60 ff       	sbrs	r22, 0
    1500:	1b c0       	rjmp	.+54     	; 0x1538 <__floatsisf+0x6c>
    1502:	6f 5f       	subi	r22, 0xFF	; 255
    1504:	7f 4f       	sbci	r23, 0xFF	; 255
    1506:	8f 4f       	sbci	r24, 0xFF	; 255
    1508:	9f 4f       	sbci	r25, 0xFF	; 255
    150a:	16 c0       	rjmp	.+44     	; 0x1538 <__floatsisf+0x6c>
    150c:	88 23       	and	r24, r24
    150e:	11 f0       	breq	.+4      	; 0x1514 <__floatsisf+0x48>
    1510:	96 e9       	ldi	r25, 0x96	; 150
    1512:	11 c0       	rjmp	.+34     	; 0x1536 <__floatsisf+0x6a>
    1514:	77 23       	and	r23, r23
    1516:	21 f0       	breq	.+8      	; 0x1520 <__floatsisf+0x54>
    1518:	9e e8       	ldi	r25, 0x8E	; 142
    151a:	87 2f       	mov	r24, r23
    151c:	76 2f       	mov	r23, r22
    151e:	05 c0       	rjmp	.+10     	; 0x152a <__floatsisf+0x5e>
    1520:	66 23       	and	r22, r22
    1522:	71 f0       	breq	.+28     	; 0x1540 <__floatsisf+0x74>
    1524:	96 e8       	ldi	r25, 0x86	; 134
    1526:	86 2f       	mov	r24, r22
    1528:	70 e0       	ldi	r23, 0x00	; 0
    152a:	60 e0       	ldi	r22, 0x00	; 0
    152c:	2a f0       	brmi	.+10     	; 0x1538 <__floatsisf+0x6c>
    152e:	9a 95       	dec	r25
    1530:	66 0f       	add	r22, r22
    1532:	77 1f       	adc	r23, r23
    1534:	88 1f       	adc	r24, r24
    1536:	da f7       	brpl	.-10     	; 0x152e <__floatsisf+0x62>
    1538:	88 0f       	add	r24, r24
    153a:	96 95       	lsr	r25
    153c:	87 95       	ror	r24
    153e:	97 f9       	bld	r25, 7
    1540:	08 95       	ret

00001542 <__fp_cmp>:
    1542:	99 0f       	add	r25, r25
    1544:	00 08       	sbc	r0, r0
    1546:	55 0f       	add	r21, r21
    1548:	aa 0b       	sbc	r26, r26
    154a:	e0 e8       	ldi	r30, 0x80	; 128
    154c:	fe ef       	ldi	r31, 0xFE	; 254
    154e:	16 16       	cp	r1, r22
    1550:	17 06       	cpc	r1, r23
    1552:	e8 07       	cpc	r30, r24
    1554:	f9 07       	cpc	r31, r25
    1556:	c0 f0       	brcs	.+48     	; 0x1588 <__fp_cmp+0x46>
    1558:	12 16       	cp	r1, r18
    155a:	13 06       	cpc	r1, r19
    155c:	e4 07       	cpc	r30, r20
    155e:	f5 07       	cpc	r31, r21
    1560:	98 f0       	brcs	.+38     	; 0x1588 <__fp_cmp+0x46>
    1562:	62 1b       	sub	r22, r18
    1564:	73 0b       	sbc	r23, r19
    1566:	84 0b       	sbc	r24, r20
    1568:	95 0b       	sbc	r25, r21
    156a:	39 f4       	brne	.+14     	; 0x157a <__fp_cmp+0x38>
    156c:	0a 26       	eor	r0, r26
    156e:	61 f0       	breq	.+24     	; 0x1588 <__fp_cmp+0x46>
    1570:	23 2b       	or	r18, r19
    1572:	24 2b       	or	r18, r20
    1574:	25 2b       	or	r18, r21
    1576:	21 f4       	brne	.+8      	; 0x1580 <__fp_cmp+0x3e>
    1578:	08 95       	ret
    157a:	0a 26       	eor	r0, r26
    157c:	09 f4       	brne	.+2      	; 0x1580 <__fp_cmp+0x3e>
    157e:	a1 40       	sbci	r26, 0x01	; 1
    1580:	a6 95       	lsr	r26
    1582:	8f ef       	ldi	r24, 0xFF	; 255
    1584:	81 1d       	adc	r24, r1
    1586:	81 1d       	adc	r24, r1
    1588:	08 95       	ret

0000158a <__fp_inf>:
    158a:	97 f9       	bld	r25, 7
    158c:	9f 67       	ori	r25, 0x7F	; 127
    158e:	80 e8       	ldi	r24, 0x80	; 128
    1590:	70 e0       	ldi	r23, 0x00	; 0
    1592:	60 e0       	ldi	r22, 0x00	; 0
    1594:	08 95       	ret

00001596 <__fp_nan>:
    1596:	9f ef       	ldi	r25, 0xFF	; 255
    1598:	80 ec       	ldi	r24, 0xC0	; 192
    159a:	08 95       	ret

0000159c <__fp_pscA>:
    159c:	00 24       	eor	r0, r0
    159e:	0a 94       	dec	r0
    15a0:	16 16       	cp	r1, r22
    15a2:	17 06       	cpc	r1, r23
    15a4:	18 06       	cpc	r1, r24
    15a6:	09 06       	cpc	r0, r25
    15a8:	08 95       	ret

000015aa <__fp_pscB>:
    15aa:	00 24       	eor	r0, r0
    15ac:	0a 94       	dec	r0
    15ae:	12 16       	cp	r1, r18
    15b0:	13 06       	cpc	r1, r19
    15b2:	14 06       	cpc	r1, r20
    15b4:	05 06       	cpc	r0, r21
    15b6:	08 95       	ret

000015b8 <__fp_round>:
    15b8:	09 2e       	mov	r0, r25
    15ba:	03 94       	inc	r0
    15bc:	00 0c       	add	r0, r0
    15be:	11 f4       	brne	.+4      	; 0x15c4 <__fp_round+0xc>
    15c0:	88 23       	and	r24, r24
    15c2:	52 f0       	brmi	.+20     	; 0x15d8 <__fp_round+0x20>
    15c4:	bb 0f       	add	r27, r27
    15c6:	40 f4       	brcc	.+16     	; 0x15d8 <__fp_round+0x20>
    15c8:	bf 2b       	or	r27, r31
    15ca:	11 f4       	brne	.+4      	; 0x15d0 <__fp_round+0x18>
    15cc:	60 ff       	sbrs	r22, 0
    15ce:	04 c0       	rjmp	.+8      	; 0x15d8 <__fp_round+0x20>
    15d0:	6f 5f       	subi	r22, 0xFF	; 255
    15d2:	7f 4f       	sbci	r23, 0xFF	; 255
    15d4:	8f 4f       	sbci	r24, 0xFF	; 255
    15d6:	9f 4f       	sbci	r25, 0xFF	; 255
    15d8:	08 95       	ret

000015da <__fp_split3>:
    15da:	57 fd       	sbrc	r21, 7
    15dc:	90 58       	subi	r25, 0x80	; 128
    15de:	44 0f       	add	r20, r20
    15e0:	55 1f       	adc	r21, r21
    15e2:	59 f0       	breq	.+22     	; 0x15fa <__fp_splitA+0x10>
    15e4:	5f 3f       	cpi	r21, 0xFF	; 255
    15e6:	71 f0       	breq	.+28     	; 0x1604 <__fp_splitA+0x1a>
    15e8:	47 95       	ror	r20

000015ea <__fp_splitA>:
    15ea:	88 0f       	add	r24, r24
    15ec:	97 fb       	bst	r25, 7
    15ee:	99 1f       	adc	r25, r25
    15f0:	61 f0       	breq	.+24     	; 0x160a <__fp_splitA+0x20>
    15f2:	9f 3f       	cpi	r25, 0xFF	; 255
    15f4:	79 f0       	breq	.+30     	; 0x1614 <__fp_splitA+0x2a>
    15f6:	87 95       	ror	r24
    15f8:	08 95       	ret
    15fa:	12 16       	cp	r1, r18
    15fc:	13 06       	cpc	r1, r19
    15fe:	14 06       	cpc	r1, r20
    1600:	55 1f       	adc	r21, r21
    1602:	f2 cf       	rjmp	.-28     	; 0x15e8 <__fp_split3+0xe>
    1604:	46 95       	lsr	r20
    1606:	f1 df       	rcall	.-30     	; 0x15ea <__fp_splitA>
    1608:	08 c0       	rjmp	.+16     	; 0x161a <__fp_splitA+0x30>
    160a:	16 16       	cp	r1, r22
    160c:	17 06       	cpc	r1, r23
    160e:	18 06       	cpc	r1, r24
    1610:	99 1f       	adc	r25, r25
    1612:	f1 cf       	rjmp	.-30     	; 0x15f6 <__fp_splitA+0xc>
    1614:	86 95       	lsr	r24
    1616:	71 05       	cpc	r23, r1
    1618:	61 05       	cpc	r22, r1
    161a:	08 94       	sec
    161c:	08 95       	ret

0000161e <__fp_zero>:
    161e:	e8 94       	clt

00001620 <__fp_szero>:
    1620:	bb 27       	eor	r27, r27
    1622:	66 27       	eor	r22, r22
    1624:	77 27       	eor	r23, r23
    1626:	cb 01       	movw	r24, r22
    1628:	97 f9       	bld	r25, 7
    162a:	08 95       	ret

0000162c <__gesf2>:
    162c:	8a df       	rcall	.-236    	; 0x1542 <__fp_cmp>
    162e:	08 f4       	brcc	.+2      	; 0x1632 <__gesf2+0x6>
    1630:	8f ef       	ldi	r24, 0xFF	; 255
    1632:	08 95       	ret

00001634 <__mulsf3>:
    1634:	0b d0       	rcall	.+22     	; 0x164c <__mulsf3x>
    1636:	c0 cf       	rjmp	.-128    	; 0x15b8 <__fp_round>
    1638:	b1 df       	rcall	.-158    	; 0x159c <__fp_pscA>
    163a:	28 f0       	brcs	.+10     	; 0x1646 <__mulsf3+0x12>
    163c:	b6 df       	rcall	.-148    	; 0x15aa <__fp_pscB>
    163e:	18 f0       	brcs	.+6      	; 0x1646 <__mulsf3+0x12>
    1640:	95 23       	and	r25, r21
    1642:	09 f0       	breq	.+2      	; 0x1646 <__mulsf3+0x12>
    1644:	a2 cf       	rjmp	.-188    	; 0x158a <__fp_inf>
    1646:	a7 cf       	rjmp	.-178    	; 0x1596 <__fp_nan>
    1648:	11 24       	eor	r1, r1
    164a:	ea cf       	rjmp	.-44     	; 0x1620 <__fp_szero>

0000164c <__mulsf3x>:
    164c:	c6 df       	rcall	.-116    	; 0x15da <__fp_split3>
    164e:	a0 f3       	brcs	.-24     	; 0x1638 <__mulsf3+0x4>

00001650 <__mulsf3_pse>:
    1650:	95 9f       	mul	r25, r21
    1652:	d1 f3       	breq	.-12     	; 0x1648 <__mulsf3+0x14>
    1654:	95 0f       	add	r25, r21
    1656:	50 e0       	ldi	r21, 0x00	; 0
    1658:	55 1f       	adc	r21, r21
    165a:	62 9f       	mul	r22, r18
    165c:	f0 01       	movw	r30, r0
    165e:	72 9f       	mul	r23, r18
    1660:	bb 27       	eor	r27, r27
    1662:	f0 0d       	add	r31, r0
    1664:	b1 1d       	adc	r27, r1
    1666:	63 9f       	mul	r22, r19
    1668:	aa 27       	eor	r26, r26
    166a:	f0 0d       	add	r31, r0
    166c:	b1 1d       	adc	r27, r1
    166e:	aa 1f       	adc	r26, r26
    1670:	64 9f       	mul	r22, r20
    1672:	66 27       	eor	r22, r22
    1674:	b0 0d       	add	r27, r0
    1676:	a1 1d       	adc	r26, r1
    1678:	66 1f       	adc	r22, r22
    167a:	82 9f       	mul	r24, r18
    167c:	22 27       	eor	r18, r18
    167e:	b0 0d       	add	r27, r0
    1680:	a1 1d       	adc	r26, r1
    1682:	62 1f       	adc	r22, r18
    1684:	73 9f       	mul	r23, r19
    1686:	b0 0d       	add	r27, r0
    1688:	a1 1d       	adc	r26, r1
    168a:	62 1f       	adc	r22, r18
    168c:	83 9f       	mul	r24, r19
    168e:	a0 0d       	add	r26, r0
    1690:	61 1d       	adc	r22, r1
    1692:	22 1f       	adc	r18, r18
    1694:	74 9f       	mul	r23, r20
    1696:	33 27       	eor	r19, r19
    1698:	a0 0d       	add	r26, r0
    169a:	61 1d       	adc	r22, r1
    169c:	23 1f       	adc	r18, r19
    169e:	84 9f       	mul	r24, r20
    16a0:	60 0d       	add	r22, r0
    16a2:	21 1d       	adc	r18, r1
    16a4:	82 2f       	mov	r24, r18
    16a6:	76 2f       	mov	r23, r22
    16a8:	6a 2f       	mov	r22, r26
    16aa:	11 24       	eor	r1, r1
    16ac:	9f 57       	subi	r25, 0x7F	; 127
    16ae:	50 40       	sbci	r21, 0x00	; 0
    16b0:	8a f0       	brmi	.+34     	; 0x16d4 <__mulsf3_pse+0x84>
    16b2:	e1 f0       	breq	.+56     	; 0x16ec <__mulsf3_pse+0x9c>
    16b4:	88 23       	and	r24, r24
    16b6:	4a f0       	brmi	.+18     	; 0x16ca <__mulsf3_pse+0x7a>
    16b8:	ee 0f       	add	r30, r30
    16ba:	ff 1f       	adc	r31, r31
    16bc:	bb 1f       	adc	r27, r27
    16be:	66 1f       	adc	r22, r22
    16c0:	77 1f       	adc	r23, r23
    16c2:	88 1f       	adc	r24, r24
    16c4:	91 50       	subi	r25, 0x01	; 1
    16c6:	50 40       	sbci	r21, 0x00	; 0
    16c8:	a9 f7       	brne	.-22     	; 0x16b4 <__mulsf3_pse+0x64>
    16ca:	9e 3f       	cpi	r25, 0xFE	; 254
    16cc:	51 05       	cpc	r21, r1
    16ce:	70 f0       	brcs	.+28     	; 0x16ec <__mulsf3_pse+0x9c>
    16d0:	5c cf       	rjmp	.-328    	; 0x158a <__fp_inf>
    16d2:	a6 cf       	rjmp	.-180    	; 0x1620 <__fp_szero>
    16d4:	5f 3f       	cpi	r21, 0xFF	; 255
    16d6:	ec f3       	brlt	.-6      	; 0x16d2 <__mulsf3_pse+0x82>
    16d8:	98 3e       	cpi	r25, 0xE8	; 232
    16da:	dc f3       	brlt	.-10     	; 0x16d2 <__mulsf3_pse+0x82>
    16dc:	86 95       	lsr	r24
    16de:	77 95       	ror	r23
    16e0:	67 95       	ror	r22
    16e2:	b7 95       	ror	r27
    16e4:	f7 95       	ror	r31
    16e6:	e7 95       	ror	r30
    16e8:	9f 5f       	subi	r25, 0xFF	; 255
    16ea:	c1 f7       	brne	.-16     	; 0x16dc <__mulsf3_pse+0x8c>
    16ec:	fe 2b       	or	r31, r30
    16ee:	88 0f       	add	r24, r24
    16f0:	91 1d       	adc	r25, r1
    16f2:	96 95       	lsr	r25
    16f4:	87 95       	ror	r24
    16f6:	97 f9       	bld	r25, 7
    16f8:	08 95       	ret

000016fa <__divmodsi4>:
    16fa:	97 fb       	bst	r25, 7
    16fc:	09 2e       	mov	r0, r25
    16fe:	05 26       	eor	r0, r21
    1700:	0e d0       	rcall	.+28     	; 0x171e <__divmodsi4_neg1>
    1702:	57 fd       	sbrc	r21, 7
    1704:	04 d0       	rcall	.+8      	; 0x170e <__divmodsi4_neg2>
    1706:	4b d0       	rcall	.+150    	; 0x179e <__udivmodsi4>
    1708:	0a d0       	rcall	.+20     	; 0x171e <__divmodsi4_neg1>
    170a:	00 1c       	adc	r0, r0
    170c:	38 f4       	brcc	.+14     	; 0x171c <__divmodsi4_exit>

0000170e <__divmodsi4_neg2>:
    170e:	50 95       	com	r21
    1710:	40 95       	com	r20
    1712:	30 95       	com	r19
    1714:	21 95       	neg	r18
    1716:	3f 4f       	sbci	r19, 0xFF	; 255
    1718:	4f 4f       	sbci	r20, 0xFF	; 255
    171a:	5f 4f       	sbci	r21, 0xFF	; 255

0000171c <__divmodsi4_exit>:
    171c:	08 95       	ret

0000171e <__divmodsi4_neg1>:
    171e:	f6 f7       	brtc	.-4      	; 0x171c <__divmodsi4_exit>
    1720:	90 95       	com	r25
    1722:	80 95       	com	r24
    1724:	70 95       	com	r23
    1726:	61 95       	neg	r22
    1728:	7f 4f       	sbci	r23, 0xFF	; 255
    172a:	8f 4f       	sbci	r24, 0xFF	; 255
    172c:	9f 4f       	sbci	r25, 0xFF	; 255
    172e:	08 95       	ret

00001730 <__prologue_saves__>:
    1730:	2f 92       	push	r2
    1732:	3f 92       	push	r3
    1734:	4f 92       	push	r4
    1736:	5f 92       	push	r5
    1738:	6f 92       	push	r6
    173a:	7f 92       	push	r7
    173c:	8f 92       	push	r8
    173e:	9f 92       	push	r9
    1740:	af 92       	push	r10
    1742:	bf 92       	push	r11
    1744:	cf 92       	push	r12
    1746:	df 92       	push	r13
    1748:	ef 92       	push	r14
    174a:	ff 92       	push	r15
    174c:	0f 93       	push	r16
    174e:	1f 93       	push	r17
    1750:	cf 93       	push	r28
    1752:	df 93       	push	r29
    1754:	cd b7       	in	r28, 0x3d	; 61
    1756:	de b7       	in	r29, 0x3e	; 62
    1758:	ca 1b       	sub	r28, r26
    175a:	db 0b       	sbc	r29, r27
    175c:	0f b6       	in	r0, 0x3f	; 63
    175e:	f8 94       	cli
    1760:	de bf       	out	0x3e, r29	; 62
    1762:	0f be       	out	0x3f, r0	; 63
    1764:	cd bf       	out	0x3d, r28	; 61
    1766:	09 94       	ijmp

00001768 <__epilogue_restores__>:
    1768:	2a 88       	ldd	r2, Y+18	; 0x12
    176a:	39 88       	ldd	r3, Y+17	; 0x11
    176c:	48 88       	ldd	r4, Y+16	; 0x10
    176e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1770:	6e 84       	ldd	r6, Y+14	; 0x0e
    1772:	7d 84       	ldd	r7, Y+13	; 0x0d
    1774:	8c 84       	ldd	r8, Y+12	; 0x0c
    1776:	9b 84       	ldd	r9, Y+11	; 0x0b
    1778:	aa 84       	ldd	r10, Y+10	; 0x0a
    177a:	b9 84       	ldd	r11, Y+9	; 0x09
    177c:	c8 84       	ldd	r12, Y+8	; 0x08
    177e:	df 80       	ldd	r13, Y+7	; 0x07
    1780:	ee 80       	ldd	r14, Y+6	; 0x06
    1782:	fd 80       	ldd	r15, Y+5	; 0x05
    1784:	0c 81       	ldd	r16, Y+4	; 0x04
    1786:	1b 81       	ldd	r17, Y+3	; 0x03
    1788:	aa 81       	ldd	r26, Y+2	; 0x02
    178a:	b9 81       	ldd	r27, Y+1	; 0x01
    178c:	ce 0f       	add	r28, r30
    178e:	d1 1d       	adc	r29, r1
    1790:	0f b6       	in	r0, 0x3f	; 63
    1792:	f8 94       	cli
    1794:	de bf       	out	0x3e, r29	; 62
    1796:	0f be       	out	0x3f, r0	; 63
    1798:	cd bf       	out	0x3d, r28	; 61
    179a:	ed 01       	movw	r28, r26
    179c:	08 95       	ret

0000179e <__udivmodsi4>:
    179e:	a1 e2       	ldi	r26, 0x21	; 33
    17a0:	1a 2e       	mov	r1, r26
    17a2:	aa 1b       	sub	r26, r26
    17a4:	bb 1b       	sub	r27, r27
    17a6:	fd 01       	movw	r30, r26
    17a8:	0d c0       	rjmp	.+26     	; 0x17c4 <__udivmodsi4_ep>

000017aa <__udivmodsi4_loop>:
    17aa:	aa 1f       	adc	r26, r26
    17ac:	bb 1f       	adc	r27, r27
    17ae:	ee 1f       	adc	r30, r30
    17b0:	ff 1f       	adc	r31, r31
    17b2:	a2 17       	cp	r26, r18
    17b4:	b3 07       	cpc	r27, r19
    17b6:	e4 07       	cpc	r30, r20
    17b8:	f5 07       	cpc	r31, r21
    17ba:	20 f0       	brcs	.+8      	; 0x17c4 <__udivmodsi4_ep>
    17bc:	a2 1b       	sub	r26, r18
    17be:	b3 0b       	sbc	r27, r19
    17c0:	e4 0b       	sbc	r30, r20
    17c2:	f5 0b       	sbc	r31, r21

000017c4 <__udivmodsi4_ep>:
    17c4:	66 1f       	adc	r22, r22
    17c6:	77 1f       	adc	r23, r23
    17c8:	88 1f       	adc	r24, r24
    17ca:	99 1f       	adc	r25, r25
    17cc:	1a 94       	dec	r1
    17ce:	69 f7       	brne	.-38     	; 0x17aa <__udivmodsi4_loop>
    17d0:	60 95       	com	r22
    17d2:	70 95       	com	r23
    17d4:	80 95       	com	r24
    17d6:	90 95       	com	r25
    17d8:	9b 01       	movw	r18, r22
    17da:	ac 01       	movw	r20, r24
    17dc:	bd 01       	movw	r22, r26
    17de:	cf 01       	movw	r24, r30
    17e0:	08 95       	ret

000017e2 <__ftoa_engine>:
    17e2:	28 30       	cpi	r18, 0x08	; 8
    17e4:	08 f0       	brcs	.+2      	; 0x17e8 <__ftoa_engine+0x6>
    17e6:	27 e0       	ldi	r18, 0x07	; 7
    17e8:	33 27       	eor	r19, r19
    17ea:	da 01       	movw	r26, r20
    17ec:	99 0f       	add	r25, r25
    17ee:	31 1d       	adc	r19, r1
    17f0:	87 fd       	sbrc	r24, 7
    17f2:	91 60       	ori	r25, 0x01	; 1
    17f4:	00 96       	adiw	r24, 0x00	; 0
    17f6:	61 05       	cpc	r22, r1
    17f8:	71 05       	cpc	r23, r1
    17fa:	39 f4       	brne	.+14     	; 0x180a <__ftoa_engine+0x28>
    17fc:	32 60       	ori	r19, 0x02	; 2
    17fe:	2e 5f       	subi	r18, 0xFE	; 254
    1800:	3d 93       	st	X+, r19
    1802:	30 e3       	ldi	r19, 0x30	; 48
    1804:	2a 95       	dec	r18
    1806:	e1 f7       	brne	.-8      	; 0x1800 <__ftoa_engine+0x1e>
    1808:	08 95       	ret
    180a:	9f 3f       	cpi	r25, 0xFF	; 255
    180c:	30 f0       	brcs	.+12     	; 0x181a <__ftoa_engine+0x38>
    180e:	80 38       	cpi	r24, 0x80	; 128
    1810:	71 05       	cpc	r23, r1
    1812:	61 05       	cpc	r22, r1
    1814:	09 f0       	breq	.+2      	; 0x1818 <__ftoa_engine+0x36>
    1816:	3c 5f       	subi	r19, 0xFC	; 252
    1818:	3c 5f       	subi	r19, 0xFC	; 252
    181a:	3d 93       	st	X+, r19
    181c:	91 30       	cpi	r25, 0x01	; 1
    181e:	08 f0       	brcs	.+2      	; 0x1822 <__ftoa_engine+0x40>
    1820:	80 68       	ori	r24, 0x80	; 128
    1822:	91 1d       	adc	r25, r1
    1824:	df 93       	push	r29
    1826:	cf 93       	push	r28
    1828:	1f 93       	push	r17
    182a:	0f 93       	push	r16
    182c:	ff 92       	push	r15
    182e:	ef 92       	push	r14
    1830:	19 2f       	mov	r17, r25
    1832:	98 7f       	andi	r25, 0xF8	; 248
    1834:	96 95       	lsr	r25
    1836:	e9 2f       	mov	r30, r25
    1838:	96 95       	lsr	r25
    183a:	96 95       	lsr	r25
    183c:	e9 0f       	add	r30, r25
    183e:	ff 27       	eor	r31, r31
    1840:	e2 5f       	subi	r30, 0xF2	; 242
    1842:	fe 4f       	sbci	r31, 0xFE	; 254
    1844:	99 27       	eor	r25, r25
    1846:	33 27       	eor	r19, r19
    1848:	ee 24       	eor	r14, r14
    184a:	ff 24       	eor	r15, r15
    184c:	a7 01       	movw	r20, r14
    184e:	e7 01       	movw	r28, r14
    1850:	05 90       	lpm	r0, Z+
    1852:	08 94       	sec
    1854:	07 94       	ror	r0
    1856:	28 f4       	brcc	.+10     	; 0x1862 <__ftoa_engine+0x80>
    1858:	36 0f       	add	r19, r22
    185a:	e7 1e       	adc	r14, r23
    185c:	f8 1e       	adc	r15, r24
    185e:	49 1f       	adc	r20, r25
    1860:	51 1d       	adc	r21, r1
    1862:	66 0f       	add	r22, r22
    1864:	77 1f       	adc	r23, r23
    1866:	88 1f       	adc	r24, r24
    1868:	99 1f       	adc	r25, r25
    186a:	06 94       	lsr	r0
    186c:	a1 f7       	brne	.-24     	; 0x1856 <__ftoa_engine+0x74>
    186e:	05 90       	lpm	r0, Z+
    1870:	07 94       	ror	r0
    1872:	28 f4       	brcc	.+10     	; 0x187e <__ftoa_engine+0x9c>
    1874:	e7 0e       	add	r14, r23
    1876:	f8 1e       	adc	r15, r24
    1878:	49 1f       	adc	r20, r25
    187a:	56 1f       	adc	r21, r22
    187c:	c1 1d       	adc	r28, r1
    187e:	77 0f       	add	r23, r23
    1880:	88 1f       	adc	r24, r24
    1882:	99 1f       	adc	r25, r25
    1884:	66 1f       	adc	r22, r22
    1886:	06 94       	lsr	r0
    1888:	a1 f7       	brne	.-24     	; 0x1872 <__ftoa_engine+0x90>
    188a:	05 90       	lpm	r0, Z+
    188c:	07 94       	ror	r0
    188e:	28 f4       	brcc	.+10     	; 0x189a <__ftoa_engine+0xb8>
    1890:	f8 0e       	add	r15, r24
    1892:	49 1f       	adc	r20, r25
    1894:	56 1f       	adc	r21, r22
    1896:	c7 1f       	adc	r28, r23
    1898:	d1 1d       	adc	r29, r1
    189a:	88 0f       	add	r24, r24
    189c:	99 1f       	adc	r25, r25
    189e:	66 1f       	adc	r22, r22
    18a0:	77 1f       	adc	r23, r23
    18a2:	06 94       	lsr	r0
    18a4:	a1 f7       	brne	.-24     	; 0x188e <__ftoa_engine+0xac>
    18a6:	05 90       	lpm	r0, Z+
    18a8:	07 94       	ror	r0
    18aa:	20 f4       	brcc	.+8      	; 0x18b4 <__ftoa_engine+0xd2>
    18ac:	49 0f       	add	r20, r25
    18ae:	56 1f       	adc	r21, r22
    18b0:	c7 1f       	adc	r28, r23
    18b2:	d8 1f       	adc	r29, r24
    18b4:	99 0f       	add	r25, r25
    18b6:	66 1f       	adc	r22, r22
    18b8:	77 1f       	adc	r23, r23
    18ba:	88 1f       	adc	r24, r24
    18bc:	06 94       	lsr	r0
    18be:	a9 f7       	brne	.-22     	; 0x18aa <__ftoa_engine+0xc8>
    18c0:	84 91       	lpm	r24, Z+
    18c2:	10 95       	com	r17
    18c4:	17 70       	andi	r17, 0x07	; 7
    18c6:	41 f0       	breq	.+16     	; 0x18d8 <__ftoa_engine+0xf6>
    18c8:	d6 95       	lsr	r29
    18ca:	c7 95       	ror	r28
    18cc:	57 95       	ror	r21
    18ce:	47 95       	ror	r20
    18d0:	f7 94       	ror	r15
    18d2:	e7 94       	ror	r14
    18d4:	1a 95       	dec	r17
    18d6:	c1 f7       	brne	.-16     	; 0x18c8 <__ftoa_engine+0xe6>
    18d8:	e4 eb       	ldi	r30, 0xB4	; 180
    18da:	f0 e0       	ldi	r31, 0x00	; 0
    18dc:	68 94       	set
    18de:	15 90       	lpm	r1, Z+
    18e0:	15 91       	lpm	r17, Z+
    18e2:	35 91       	lpm	r19, Z+
    18e4:	65 91       	lpm	r22, Z+
    18e6:	95 91       	lpm	r25, Z+
    18e8:	05 90       	lpm	r0, Z+
    18ea:	7f e2       	ldi	r23, 0x2F	; 47
    18ec:	73 95       	inc	r23
    18ee:	e1 18       	sub	r14, r1
    18f0:	f1 0a       	sbc	r15, r17
    18f2:	43 0b       	sbc	r20, r19
    18f4:	56 0b       	sbc	r21, r22
    18f6:	c9 0b       	sbc	r28, r25
    18f8:	d0 09       	sbc	r29, r0
    18fa:	c0 f7       	brcc	.-16     	; 0x18ec <__ftoa_engine+0x10a>
    18fc:	e1 0c       	add	r14, r1
    18fe:	f1 1e       	adc	r15, r17
    1900:	43 1f       	adc	r20, r19
    1902:	56 1f       	adc	r21, r22
    1904:	c9 1f       	adc	r28, r25
    1906:	d0 1d       	adc	r29, r0
    1908:	7e f4       	brtc	.+30     	; 0x1928 <__ftoa_engine+0x146>
    190a:	70 33       	cpi	r23, 0x30	; 48
    190c:	11 f4       	brne	.+4      	; 0x1912 <__ftoa_engine+0x130>
    190e:	8a 95       	dec	r24
    1910:	e6 cf       	rjmp	.-52     	; 0x18de <__ftoa_engine+0xfc>
    1912:	e8 94       	clt
    1914:	01 50       	subi	r16, 0x01	; 1
    1916:	30 f0       	brcs	.+12     	; 0x1924 <__ftoa_engine+0x142>
    1918:	08 0f       	add	r16, r24
    191a:	0a f4       	brpl	.+2      	; 0x191e <__ftoa_engine+0x13c>
    191c:	00 27       	eor	r16, r16
    191e:	02 17       	cp	r16, r18
    1920:	08 f4       	brcc	.+2      	; 0x1924 <__ftoa_engine+0x142>
    1922:	20 2f       	mov	r18, r16
    1924:	23 95       	inc	r18
    1926:	02 2f       	mov	r16, r18
    1928:	7a 33       	cpi	r23, 0x3A	; 58
    192a:	28 f0       	brcs	.+10     	; 0x1936 <__ftoa_engine+0x154>
    192c:	79 e3       	ldi	r23, 0x39	; 57
    192e:	7d 93       	st	X+, r23
    1930:	2a 95       	dec	r18
    1932:	e9 f7       	brne	.-6      	; 0x192e <__ftoa_engine+0x14c>
    1934:	10 c0       	rjmp	.+32     	; 0x1956 <__ftoa_engine+0x174>
    1936:	7d 93       	st	X+, r23
    1938:	2a 95       	dec	r18
    193a:	89 f6       	brne	.-94     	; 0x18de <__ftoa_engine+0xfc>
    193c:	06 94       	lsr	r0
    193e:	97 95       	ror	r25
    1940:	67 95       	ror	r22
    1942:	37 95       	ror	r19
    1944:	17 95       	ror	r17
    1946:	17 94       	ror	r1
    1948:	e1 18       	sub	r14, r1
    194a:	f1 0a       	sbc	r15, r17
    194c:	43 0b       	sbc	r20, r19
    194e:	56 0b       	sbc	r21, r22
    1950:	c9 0b       	sbc	r28, r25
    1952:	d0 09       	sbc	r29, r0
    1954:	98 f0       	brcs	.+38     	; 0x197c <__ftoa_engine+0x19a>
    1956:	23 95       	inc	r18
    1958:	7e 91       	ld	r23, -X
    195a:	73 95       	inc	r23
    195c:	7a 33       	cpi	r23, 0x3A	; 58
    195e:	08 f0       	brcs	.+2      	; 0x1962 <__ftoa_engine+0x180>
    1960:	70 e3       	ldi	r23, 0x30	; 48
    1962:	7c 93       	st	X, r23
    1964:	20 13       	cpse	r18, r16
    1966:	b8 f7       	brcc	.-18     	; 0x1956 <__ftoa_engine+0x174>
    1968:	7e 91       	ld	r23, -X
    196a:	70 61       	ori	r23, 0x10	; 16
    196c:	7d 93       	st	X+, r23
    196e:	30 f0       	brcs	.+12     	; 0x197c <__ftoa_engine+0x19a>
    1970:	83 95       	inc	r24
    1972:	71 e3       	ldi	r23, 0x31	; 49
    1974:	7d 93       	st	X+, r23
    1976:	70 e3       	ldi	r23, 0x30	; 48
    1978:	2a 95       	dec	r18
    197a:	e1 f7       	brne	.-8      	; 0x1974 <__ftoa_engine+0x192>
    197c:	11 24       	eor	r1, r1
    197e:	ef 90       	pop	r14
    1980:	ff 90       	pop	r15
    1982:	0f 91       	pop	r16
    1984:	1f 91       	pop	r17
    1986:	cf 91       	pop	r28
    1988:	df 91       	pop	r29
    198a:	99 27       	eor	r25, r25
    198c:	87 fd       	sbrc	r24, 7
    198e:	90 95       	com	r25
    1990:	08 95       	ret

00001992 <strnlen_P>:
    1992:	fc 01       	movw	r30, r24
    1994:	05 90       	lpm	r0, Z+
    1996:	61 50       	subi	r22, 0x01	; 1
    1998:	70 40       	sbci	r23, 0x00	; 0
    199a:	01 10       	cpse	r0, r1
    199c:	d8 f7       	brcc	.-10     	; 0x1994 <strnlen_P+0x2>
    199e:	80 95       	com	r24
    19a0:	90 95       	com	r25
    19a2:	8e 0f       	add	r24, r30
    19a4:	9f 1f       	adc	r25, r31
    19a6:	08 95       	ret

000019a8 <strnlen>:
    19a8:	fc 01       	movw	r30, r24
    19aa:	61 50       	subi	r22, 0x01	; 1
    19ac:	70 40       	sbci	r23, 0x00	; 0
    19ae:	01 90       	ld	r0, Z+
    19b0:	01 10       	cpse	r0, r1
    19b2:	d8 f7       	brcc	.-10     	; 0x19aa <strnlen+0x2>
    19b4:	80 95       	com	r24
    19b6:	90 95       	com	r25
    19b8:	8e 0f       	add	r24, r30
    19ba:	9f 1f       	adc	r25, r31
    19bc:	08 95       	ret

000019be <fputc>:
    19be:	0f 93       	push	r16
    19c0:	1f 93       	push	r17
    19c2:	cf 93       	push	r28
    19c4:	df 93       	push	r29
    19c6:	8c 01       	movw	r16, r24
    19c8:	eb 01       	movw	r28, r22
    19ca:	8b 81       	ldd	r24, Y+3	; 0x03
    19cc:	81 ff       	sbrs	r24, 1
    19ce:	1b c0       	rjmp	.+54     	; 0x1a06 <fputc+0x48>
    19d0:	82 ff       	sbrs	r24, 2
    19d2:	0d c0       	rjmp	.+26     	; 0x19ee <fputc+0x30>
    19d4:	2e 81       	ldd	r18, Y+6	; 0x06
    19d6:	3f 81       	ldd	r19, Y+7	; 0x07
    19d8:	8c 81       	ldd	r24, Y+4	; 0x04
    19da:	9d 81       	ldd	r25, Y+5	; 0x05
    19dc:	28 17       	cp	r18, r24
    19de:	39 07       	cpc	r19, r25
    19e0:	64 f4       	brge	.+24     	; 0x19fa <fputc+0x3c>
    19e2:	e8 81       	ld	r30, Y
    19e4:	f9 81       	ldd	r31, Y+1	; 0x01
    19e6:	01 93       	st	Z+, r16
    19e8:	f9 83       	std	Y+1, r31	; 0x01
    19ea:	e8 83       	st	Y, r30
    19ec:	06 c0       	rjmp	.+12     	; 0x19fa <fputc+0x3c>
    19ee:	e8 85       	ldd	r30, Y+8	; 0x08
    19f0:	f9 85       	ldd	r31, Y+9	; 0x09
    19f2:	80 2f       	mov	r24, r16
    19f4:	09 95       	icall
    19f6:	89 2b       	or	r24, r25
    19f8:	31 f4       	brne	.+12     	; 0x1a06 <fputc+0x48>
    19fa:	8e 81       	ldd	r24, Y+6	; 0x06
    19fc:	9f 81       	ldd	r25, Y+7	; 0x07
    19fe:	01 96       	adiw	r24, 0x01	; 1
    1a00:	9f 83       	std	Y+7, r25	; 0x07
    1a02:	8e 83       	std	Y+6, r24	; 0x06
    1a04:	02 c0       	rjmp	.+4      	; 0x1a0a <fputc+0x4c>
    1a06:	0f ef       	ldi	r16, 0xFF	; 255
    1a08:	1f ef       	ldi	r17, 0xFF	; 255
    1a0a:	c8 01       	movw	r24, r16
    1a0c:	df 91       	pop	r29
    1a0e:	cf 91       	pop	r28
    1a10:	1f 91       	pop	r17
    1a12:	0f 91       	pop	r16
    1a14:	08 95       	ret

00001a16 <__ultoa_invert>:
    1a16:	fa 01       	movw	r30, r20
    1a18:	aa 27       	eor	r26, r26
    1a1a:	28 30       	cpi	r18, 0x08	; 8
    1a1c:	51 f1       	breq	.+84     	; 0x1a72 <__ultoa_invert+0x5c>
    1a1e:	20 31       	cpi	r18, 0x10	; 16
    1a20:	81 f1       	breq	.+96     	; 0x1a82 <__ultoa_invert+0x6c>
    1a22:	e8 94       	clt
    1a24:	6f 93       	push	r22
    1a26:	6e 7f       	andi	r22, 0xFE	; 254
    1a28:	6e 5f       	subi	r22, 0xFE	; 254
    1a2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a2c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a30:	af 4f       	sbci	r26, 0xFF	; 255
    1a32:	b1 e0       	ldi	r27, 0x01	; 1
    1a34:	3e d0       	rcall	.+124    	; 0x1ab2 <__ultoa_invert+0x9c>
    1a36:	b4 e0       	ldi	r27, 0x04	; 4
    1a38:	3c d0       	rcall	.+120    	; 0x1ab2 <__ultoa_invert+0x9c>
    1a3a:	67 0f       	add	r22, r23
    1a3c:	78 1f       	adc	r23, r24
    1a3e:	89 1f       	adc	r24, r25
    1a40:	9a 1f       	adc	r25, r26
    1a42:	a1 1d       	adc	r26, r1
    1a44:	68 0f       	add	r22, r24
    1a46:	79 1f       	adc	r23, r25
    1a48:	8a 1f       	adc	r24, r26
    1a4a:	91 1d       	adc	r25, r1
    1a4c:	a1 1d       	adc	r26, r1
    1a4e:	6a 0f       	add	r22, r26
    1a50:	71 1d       	adc	r23, r1
    1a52:	81 1d       	adc	r24, r1
    1a54:	91 1d       	adc	r25, r1
    1a56:	a1 1d       	adc	r26, r1
    1a58:	20 d0       	rcall	.+64     	; 0x1a9a <__ultoa_invert+0x84>
    1a5a:	09 f4       	brne	.+2      	; 0x1a5e <__ultoa_invert+0x48>
    1a5c:	68 94       	set
    1a5e:	3f 91       	pop	r19
    1a60:	2a e0       	ldi	r18, 0x0A	; 10
    1a62:	26 9f       	mul	r18, r22
    1a64:	11 24       	eor	r1, r1
    1a66:	30 19       	sub	r19, r0
    1a68:	30 5d       	subi	r19, 0xD0	; 208
    1a6a:	31 93       	st	Z+, r19
    1a6c:	de f6       	brtc	.-74     	; 0x1a24 <__ultoa_invert+0xe>
    1a6e:	cf 01       	movw	r24, r30
    1a70:	08 95       	ret
    1a72:	46 2f       	mov	r20, r22
    1a74:	47 70       	andi	r20, 0x07	; 7
    1a76:	40 5d       	subi	r20, 0xD0	; 208
    1a78:	41 93       	st	Z+, r20
    1a7a:	b3 e0       	ldi	r27, 0x03	; 3
    1a7c:	0f d0       	rcall	.+30     	; 0x1a9c <__ultoa_invert+0x86>
    1a7e:	c9 f7       	brne	.-14     	; 0x1a72 <__ultoa_invert+0x5c>
    1a80:	f6 cf       	rjmp	.-20     	; 0x1a6e <__ultoa_invert+0x58>
    1a82:	46 2f       	mov	r20, r22
    1a84:	4f 70       	andi	r20, 0x0F	; 15
    1a86:	40 5d       	subi	r20, 0xD0	; 208
    1a88:	4a 33       	cpi	r20, 0x3A	; 58
    1a8a:	18 f0       	brcs	.+6      	; 0x1a92 <__ultoa_invert+0x7c>
    1a8c:	49 5d       	subi	r20, 0xD9	; 217
    1a8e:	31 fd       	sbrc	r19, 1
    1a90:	40 52       	subi	r20, 0x20	; 32
    1a92:	41 93       	st	Z+, r20
    1a94:	02 d0       	rcall	.+4      	; 0x1a9a <__ultoa_invert+0x84>
    1a96:	a9 f7       	brne	.-22     	; 0x1a82 <__ultoa_invert+0x6c>
    1a98:	ea cf       	rjmp	.-44     	; 0x1a6e <__ultoa_invert+0x58>
    1a9a:	b4 e0       	ldi	r27, 0x04	; 4
    1a9c:	a6 95       	lsr	r26
    1a9e:	97 95       	ror	r25
    1aa0:	87 95       	ror	r24
    1aa2:	77 95       	ror	r23
    1aa4:	67 95       	ror	r22
    1aa6:	ba 95       	dec	r27
    1aa8:	c9 f7       	brne	.-14     	; 0x1a9c <__ultoa_invert+0x86>
    1aaa:	00 97       	sbiw	r24, 0x00	; 0
    1aac:	61 05       	cpc	r22, r1
    1aae:	71 05       	cpc	r23, r1
    1ab0:	08 95       	ret
    1ab2:	9b 01       	movw	r18, r22
    1ab4:	ac 01       	movw	r20, r24
    1ab6:	0a 2e       	mov	r0, r26
    1ab8:	06 94       	lsr	r0
    1aba:	57 95       	ror	r21
    1abc:	47 95       	ror	r20
    1abe:	37 95       	ror	r19
    1ac0:	27 95       	ror	r18
    1ac2:	ba 95       	dec	r27
    1ac4:	c9 f7       	brne	.-14     	; 0x1ab8 <__ultoa_invert+0xa2>
    1ac6:	62 0f       	add	r22, r18
    1ac8:	73 1f       	adc	r23, r19
    1aca:	84 1f       	adc	r24, r20
    1acc:	95 1f       	adc	r25, r21
    1ace:	a0 1d       	adc	r26, r0
    1ad0:	08 95       	ret

00001ad2 <_exit>:
    1ad2:	f8 94       	cli

00001ad4 <__stop_program>:
    1ad4:	ff cf       	rjmp	.-2      	; 0x1ad4 <__stop_program>
