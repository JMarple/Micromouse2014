
-------- begin --------
avr-gcc (WinAVR 20100110) 4.3.3
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Compiling C: main.c
avr-gcc -c -mmcu=atmega32u4 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=./main.lst  -std=gnu99 -MMD -MP -MF .dep/main.o.d main.c -o main.o 

Compiling C: RobotModel/RobotModel.c
avr-gcc -c -mmcu=atmega32u4 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=./RobotModel/RobotModel.lst  -std=gnu99 -MMD -MP -MF .dep/RobotModel.o.d RobotModel/RobotModel.c -o RobotModel/RobotModel.o 

Compiling C: RobotModel/RobotModel_controls.c
avr-gcc -c -mmcu=atmega32u4 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=./RobotModel/RobotModel_controls.lst  -std=gnu99 -MMD -MP -MF .dep/RobotModel_controls.o.d RobotModel/RobotModel_controls.c -o RobotModel/RobotModel_controls.o 

Compiling C: RobotModel/RobotModel_StepperMotor.c
avr-gcc -c -mmcu=atmega32u4 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=./RobotModel/RobotModel_StepperMotor.lst  -std=gnu99 -MMD -MP -MF .dep/RobotModel_StepperMotor.o.d RobotModel/RobotModel_StepperMotor.c -o RobotModel/RobotModel_StepperMotor.o 

Compiling C: RobotModel/RobotModel_Sensors.c
avr-gcc -c -mmcu=atmega32u4 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=./RobotModel/RobotModel_Sensors.lst  -std=gnu99 -MMD -MP -MF .dep/RobotModel_Sensors.o.d RobotModel/RobotModel_Sensors.c -o RobotModel/RobotModel_Sensors.o 
RobotModel/RobotModel_Sensors.c: In function 'linearizeIRSensorValues':
RobotModel/RobotModel_Sensors.c:105: warning: implicit declaration of function 'log'
RobotModel/RobotModel_Sensors.c:105: warning: incompatible implicit declaration of built-in function 'log'

Compiling C: USART.c
avr-gcc -c -mmcu=atmega32u4 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=./USART.lst  -std=gnu99 -MMD -MP -MF .dep/USART.o.d USART.c -o USART.o 
USART.c: In function 'printNum':
USART.c:57: warning: format '%f' expects type 'double', but argument 3 has type 'float'

Linking: main.elf
avr-gcc -mmcu=atmega32u4 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wa,-adhlns=main.o  -std=gnu99 -MMD -MP -MF .dep/main.elf.d main.o RobotModel/RobotModel.o RobotModel/RobotModel_controls.o RobotModel/RobotModel_StepperMotor.o RobotModel/RobotModel_Sensors.o USART.o --output main.elf -Wl,-Map=main.map,--cref   -Wl,-u,vfprintf -lprintf_flt  -lm

Creating load file for Flash: main.hex
avr-objcopy -O ihex -R .eeprom -R .fuse -R .lock main.elf main.hex

Creating load file for EEPROM: main.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
	--change-section-lma .eeprom=0 --no-change-warnings -O ihex main.elf main.eep || exit 0

Creating Extended Listing: main.lss
avr-objdump -h -S -z main.elf > main.lss

Creating Symbol Table: main.sym
avr-nm -n main.elf > main.sym

Size after:
AVR Memory Usage
----------------
Device: atmega32u4

Program:    9826 bytes (30.0% Full)
(.text + .data + .bootloader)

Data:        108 bytes (4.2% Full)
(.data + .bss + .noinit)



-------- end --------

