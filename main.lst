   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  15               	.Ltext0:
  16               		.data
  17               	.LC0:
  18 0000 2C00      		.string	","
  19               		.text
  20               	.global	main
  22               	main:
  23               	.LFB8:
  24               	.LM1:
  25 0000 2F92      		push r2
  26 0002 3F92      		push r3
  27 0004 4F92      		push r4
  28 0006 5F92      		push r5
  29 0008 6F92      		push r6
  30 000a 7F92      		push r7
  31 000c 8F92      		push r8
  32 000e 9F92      		push r9
  33 0010 AF92      		push r10
  34 0012 BF92      		push r11
  35 0014 CF92      		push r12
  36 0016 DF92      		push r13
  37 0018 EF92      		push r14
  38 001a FF92      		push r15
  39 001c 0F93      		push r16
  40 001e 1F93      		push r17
  41 0020 DF93      		push r29
  42 0022 CF93      		push r28
  43 0024 CDB7      		in r28,__SP_L__
  44 0026 DEB7      		in r29,__SP_H__
  45 0028 6097      		sbiw r28,16
  46 002a 0FB6      		in __tmp_reg__,__SREG__
  47 002c F894      		cli
  48 002e DEBF      		out __SP_H__,r29
  49 0030 0FBE      		out __SREG__,__tmp_reg__
  50 0032 CDBF      		out __SP_L__,r28
  51               	/* prologue: function */
  52               	/* frame size = 16 */
  53               	.LM2:
  54 0034 0E94 0000 		call setupADC
  55               	.LM3:
  56 0038 0E94 0000 		call setupStepperMotor
  57               	.LM4:
  58 003c 0E94 0000 		call startTimer
  59               	.LM5:
  60 0040 0E94 0000 		call USART_init
  61               	.LM6:
  62 0044 80E0      		ldi r24,lo8(0x0)
  63 0046 90E0      		ldi r25,hi8(0x0)
  64 0048 A0E0      		ldi r26,hlo8(0x0)
  65 004a B0E0      		ldi r27,hhi8(0x0)
  66 004c 8093 0000 		sts mouse+66,r24
  67 0050 9093 0000 		sts (mouse+66)+1,r25
  68 0054 A093 0000 		sts (mouse+66)+2,r26
  69 0058 B093 0000 		sts (mouse+66)+3,r27
  70               	.LM7:
  71 005c 80E0      		ldi r24,lo8(0x459c4000)
  72 005e 90E4      		ldi r25,hi8(0x459c4000)
  73 0060 ACE9      		ldi r26,hlo8(0x459c4000)
  74 0062 B5E4      		ldi r27,hhi8(0x459c4000)
  75 0064 8093 0000 		sts mouse+62,r24
  76 0068 9093 0000 		sts (mouse+62)+1,r25
  77 006c A093 0000 		sts (mouse+62)+2,r26
  78 0070 B093 0000 		sts (mouse+62)+3,r27
  79               	.LM8:
  80 0074 80E0      		ldi r24,lo8(0x44fa0000)
  81 0076 90E0      		ldi r25,hi8(0x44fa0000)
  82 0078 AAEF      		ldi r26,hlo8(0x44fa0000)
  83 007a B4E4      		ldi r27,hhi8(0x44fa0000)
  84 007c 8093 0000 		sts mouse+54,r24
  85 0080 9093 0000 		sts (mouse+54)+1,r25
  86 0084 A093 0000 		sts (mouse+54)+2,r26
  87 0088 B093 0000 		sts (mouse+54)+3,r27
  88               	.LM9:
  89 008c 80E0      		ldi r24,lo8(0x461c4000)
  90 008e 90E4      		ldi r25,hi8(0x461c4000)
  91 0090 ACE1      		ldi r26,hlo8(0x461c4000)
  92 0092 B6E4      		ldi r27,hhi8(0x461c4000)
  93 0094 8093 0000 		sts mouse+58,r24
  94 0098 9093 0000 		sts (mouse+58)+1,r25
  95 009c A093 0000 		sts (mouse+58)+2,r26
  96 00a0 B093 0000 		sts (mouse+58)+3,r27
  97               	.LM10:
  98 00a4 81E0      		ldi r24,lo8(1)
  99 00a6 90E0      		ldi r25,hi8(1)
 100 00a8 0E94 0000 		call enableDrive
 101               	.LM11:
 102 00ac 81E0      		ldi r24,lo8(1)
 103 00ae 90E0      		ldi r25,hi8(1)
 104 00b0 61E0      		ldi r22,lo8(1)
 105 00b2 70E0      		ldi r23,hi8(1)
 106 00b4 0E94 0000 		call turnOnTimers
 107 00b8 1E82      		std Y+6,__zero_reg__
 108 00ba 1D82      		std Y+5,__zero_reg__
 109               	.LVL0:
 110               	.LVL1:
 111               	.L15:
 112               	.LBB2:
 113               	.LBB3:
 114               	.LM12:
 115 00bc 0E94 0000 		call isWallRight
 116 00c0 9C83      		std Y+4,r25
 117 00c2 8B83      		std Y+3,r24
 118               	.LVL2:
 119               	.LM13:
 120 00c4 0E94 0000 		call isWallFront
 121 00c8 988B      		std Y+16,r25
 122 00ca 8F87      		std Y+15,r24
 123               	.LVL3:
 124               	.LM14:
 125 00cc 0E94 0000 		call isWallLeft
 126 00d0 9A83      		std Y+2,r25
 127 00d2 8983      		std Y+1,r24
 128               	.LVL4:
 129               	.LM15:
 130 00d4 8F85      		ldd r24,Y+15
 131 00d6 9889      		ldd r25,Y+16
 132 00d8 892B      		or r24,r25
 133 00da 01F4      		brne .+2
 134 00dc 00C0      		rjmp .L2
 135               	.LBB4:
 136               	.LM16:
 137 00de 0E94 0000 		call getFrontLeftIR
 138 00e2 7B01      		movw r14,r22
 139 00e4 8C01      		movw r16,r24
 140               	.LVL5:
 141               	.LM17:
 142 00e6 0E94 0000 		call getFrontRightIR
 143 00ea 9B01      		movw r18,r22
 144 00ec AC01      		movw r20,r24
 145               	.LVL6:
 146               	.LM18:
 147 00ee C801      		movw r24,r16
 148 00f0 B701      		movw r22,r14
 149 00f2 0E94 0000 		call __addsf3
 150               	.LVL7:
 151 00f6 20E0      		ldi r18,lo8(0x3f000000)
 152 00f8 30E0      		ldi r19,hi8(0x3f000000)
 153 00fa 40E0      		ldi r20,hlo8(0x3f000000)
 154 00fc 5FE3      		ldi r21,hhi8(0x3f000000)
 155 00fe 0E94 0000 		call __mulsf3
 156               	.LM19:
 157 0102 20E0      		ldi r18,lo8(0x40400000)
 158 0104 30E0      		ldi r19,hi8(0x40400000)
 159 0106 40E4      		ldi r20,hlo8(0x40400000)
 160 0108 50E4      		ldi r21,hhi8(0x40400000)
 161 010a 0E94 0000 		call __subsf3
 162 010e 1B01      		movw r2,r22
 163 0110 2C01      		movw r4,r24
 164               	.LVL8:
 165               	.LM20:
 166 0112 20E0      		ldi r18,lo8(0x0)
 167 0114 30E0      		ldi r19,hi8(0x0)
 168 0116 40E0      		ldi r20,hlo8(0x0)
 169 0118 50E0      		ldi r21,hhi8(0x0)
 170 011a 0E94 0000 		call __ltsf2
 171 011e 8823      		tst r24
 172 0120 04F4      		brge .L3
 173               	.LM21:
 174 0122 81E0      		ldi r24,lo8(1)
 175 0124 90E0      		ldi r25,hi8(1)
 176 0126 61E0      		ldi r22,lo8(1)
 177 0128 70E0      		ldi r23,hi8(1)
 178 012a 0E94 0000 		call setDirection
 179               	.LM22:
 180 012e 57FA      		bst r5,7
 181 0130 5094      		com r5
 182 0132 57F8      		bld r5,7
 183 0134 5094      		com r5
 184               	.L3:
 185               	.LM23:
 186 0136 E090 0000 		lds r14,mouse+66
 187 013a F090 0000 		lds r15,(mouse+66)+1
 188 013e 0091 0000 		lds r16,(mouse+66)+2
 189 0142 1091 0000 		lds r17,(mouse+66)+3
 190               	.LVL9:
 191 0146 A090 0000 		lds r10,mouse+62
 192 014a B090 0000 		lds r11,(mouse+62)+1
 193 014e C090 0000 		lds r12,(mouse+62)+2
 194 0152 D090 0000 		lds r13,(mouse+62)+3
 195 0156 6090 0000 		lds r6,mouse+54
 196 015a 7090 0000 		lds r7,(mouse+54)+1
 197 015e 8090 0000 		lds r8,(mouse+54)+2
 198 0162 9090 0000 		lds r9,(mouse+54)+3
 199 0166 8091 0000 		lds r24,mouse+58
 200 016a 9091 0000 		lds r25,(mouse+58)+1
 201 016e A091 0000 		lds r26,(mouse+58)+2
 202 0172 B091 0000 		lds r27,(mouse+58)+3
 203 0176 8F83      		std Y+7,r24
 204 0178 9887      		std Y+8,r25
 205 017a A987      		std Y+9,r26
 206 017c BA87      		std Y+10,r27
 207 017e C201      		movw r24,r4
 208 0180 B101      		movw r22,r2
 209 0182 20E0      		ldi r18,lo8(0x42280000)
 210 0184 30E0      		ldi r19,hi8(0x42280000)
 211 0186 48E2      		ldi r20,hlo8(0x42280000)
 212 0188 52E4      		ldi r21,hhi8(0x42280000)
 213 018a 0E94 0000 		call __mulsf3
 214 018e 0E94 0000 		call __fixsfsi
 215 0192 6B87      		std Y+11,r22
 216 0194 7C87      		std Y+12,r23
 217 0196 8D87      		std Y+13,r24
 218 0198 9E87      		std Y+14,r25
 219 019a C801      		movw r24,r16
 220 019c B701      		movw r22,r14
 221 019e 0E94 0000 		call __fixsfsi
 222 01a2 1B01      		movw r2,r22
 223 01a4 2C01      		movw r4,r24
 224               	.LVL10:
 225 01a6 C601      		movw r24,r12
 226 01a8 B501      		movw r22,r10
 227 01aa 0E94 0000 		call __fixsfsi
 228 01ae 7B01      		movw r14,r22
 229 01b0 8C01      		movw r16,r24
 230 01b2 C401      		movw r24,r8
 231 01b4 B301      		movw r22,r6
 232 01b6 0E94 0000 		call __fixsfsi
 233 01ba 3B01      		movw r6,r22
 234 01bc 4C01      		movw r8,r24
 235 01be 6F81      		ldd r22,Y+7
 236 01c0 7885      		ldd r23,Y+8
 237 01c2 8985      		ldd r24,Y+9
 238 01c4 9A85      		ldd r25,Y+10
 239 01c6 0E94 0000 		call __fixsfsi
 240 01ca 5B01      		movw r10,r22
 241 01cc 6C01      		movw r12,r24
 242 01ce 6B85      		ldd r22,Y+11
 243 01d0 7C85      		ldd r23,Y+12
 244 01d2 8D85      		ldd r24,Y+13
 245 01d4 9E85      		ldd r25,Y+14
 246 01d6 A101      		movw r20,r2
 247 01d8 9701      		movw r18,r14
 248 01da 00E0      		ldi r16,lo8(0)
 249 01dc 10E0      		ldi r17,hi8(0)
 250 01de 7301      		movw r14,r6
 251 01e0 6501      		movw r12,r10
 252 01e2 0E94 0000 		call straight
 253               	.LVL11:
 254               	.L2:
 255               	.LBE4:
 256               	.LM24:
 257 01e6 0E94 0000 		call getFrontAngle
 258 01ea 7B01      		movw r14,r22
 259 01ec 8C01      		movw r16,r24
 260               	.LM25:
 261 01ee 0E94 0000 		call getFrontLeftIR
 262               	.LM26:
 263 01f2 0E94 0000 		call getFrontRightIR
 264               	.LM27:
 265 01f6 AB81      		ldd r26,Y+3
 266 01f8 BC81      		ldd r27,Y+4
 267 01fa AB2B      		or r26,r27
 268 01fc 01F4      		brne .L5
 269               	.LM28:
 270 01fe EF85      		ldd r30,Y+15
 271 0200 F889      		ldd r31,Y+16
 272 0202 EF2B      		or r30,r31
 273 0204 01F0      		breq .L6
 274               	.LM29:
 275 0206 C801      		movw r24,r16
 276 0208 B701      		movw r22,r14
 277 020a 0E94 0000 		call rotateRightWithFix
 278 020e 00C0      		rjmp .L7
 279               	.L6:
 280               	.LM30:
 281 0210 0E94 0000 		call rotateRight
 282 0214 00C0      		rjmp .L7
 283               	.L5:
 284               	.LM31:
 285 0216 8F85      		ldd r24,Y+15
 286 0218 9889      		ldd r25,Y+16
 287 021a 892B      		or r24,r25
 288 021c 01F0      		breq .L7
 289 021e A981      		ldd r26,Y+1
 290 0220 BA81      		ldd r27,Y+2
 291 0222 AB2B      		or r26,r27
 292 0224 01F4      		brne .L8
 293               	.LM32:
 294 0226 C801      		movw r24,r16
 295 0228 B701      		movw r22,r14
 296 022a 0E94 0000 		call rotateLeftWithFix
 297 022e 00C0      		rjmp .L9
 298               	.L8:
 299               	.LM33:
 300 0230 0E94 0000 		call moveBackwardsAndCorrect
 301 0234 00C0      		rjmp .L10
 302               	.L7:
 303               	.LM34:
 304 0236 E981      		ldd r30,Y+1
 305 0238 FA81      		ldd r31,Y+2
 306 023a EF2B      		or r30,r31
 307 023c 01F0      		breq .L11
 308 023e 8B81      		ldd r24,Y+3
 309 0240 9C81      		ldd r25,Y+4
 310 0242 892B      		or r24,r25
 311 0244 01F0      		breq .L12
 312               	.L10:
 313               	.LM35:
 314 0246 AEE1      		ldi r26,lo8(30)
 315 0248 B0E0      		ldi r27,hi8(30)
 316 024a B093 0000 		sts (mouse+70)+1,r27
 317 024e A093 0000 		sts mouse+70,r26
 318 0252 00C0      		rjmp .L13
 319               	.L12:
 320               	.LM36:
 321 0254 EEE1      		ldi r30,lo8(30)
 322 0256 F0E0      		ldi r31,hi8(30)
 323 0258 F093 0000 		sts (mouse+72)+1,r31
 324 025c E093 0000 		sts mouse+72,r30
 325 0260 00C0      		rjmp .L13
 326               	.L11:
 327               	.LM37:
 328 0262 8B81      		ldd r24,Y+3
 329 0264 9C81      		ldd r25,Y+4
 330 0266 892B      		or r24,r25
 331 0268 01F0      		breq .L14
 332               	.L9:
 333               	.LM38:
 334 026a AEE1      		ldi r26,lo8(30)
 335 026c B0E0      		ldi r27,hi8(30)
 336 026e B093 0000 		sts (mouse+74)+1,r27
 337 0272 A093 0000 		sts mouse+74,r26
 338 0276 00C0      		rjmp .L13
 339               	.L14:
 340               	.LM39:
 341 0278 80E0      		ldi r24,lo8(0)
 342 027a 90E0      		ldi r25,hi8(0)
 343 027c 0E94 0000 		call turnOnLeds
 344               	.L13:
 345               	.LM40:
 346 0280 0E94 0000 		call moveForwardAndStop
 347               	.LM41:
 348 0284 1092 0000 		sts (mouse+70)+1,__zero_reg__
 349 0288 1092 0000 		sts mouse+70,__zero_reg__
 350               	.LM42:
 351 028c 1092 0000 		sts (mouse+72)+1,__zero_reg__
 352 0290 1092 0000 		sts mouse+72,__zero_reg__
 353               	.LM43:
 354 0294 1092 0000 		sts (mouse+74)+1,__zero_reg__
 355 0298 1092 0000 		sts mouse+74,__zero_reg__
 356               	.LBE3:
 357               	.LM44:
 358 029c ED81      		ldd r30,Y+5
 359 029e FE81      		ldd r31,Y+6
 360 02a0 3196      		adiw r30,1
 361 02a2 FE83      		std Y+6,r31
 362 02a4 ED83      		std Y+5,r30
 363               	.LVL12:
 364 02a6 7E97      		sbiw r30,30
 365 02a8 01F0      		breq .+2
 366 02aa 00C0      		rjmp .L15
 367               	.LBE2:
 368               	.LM45:
 369 02ac 80E0      		ldi r24,lo8(0)
 370 02ae 90E0      		ldi r25,hi8(0)
 371 02b0 60E0      		ldi r22,lo8(0)
 372 02b2 70E0      		ldi r23,hi8(0)
 373 02b4 0E94 0000 		call turnOnTimers
 374               	.LM46:
 375 02b8 80E0      		ldi r24,lo8(0)
 376 02ba 90E0      		ldi r25,hi8(0)
 377 02bc 0E94 0000 		call enableDrive
 378               	.L16:
 379               	.LBB5:
 380               	.LM47:
 381 02c0 0E94 0000 		call getFrontLeftIR
 382 02c4 7B01      		movw r14,r22
 383 02c6 8C01      		movw r16,r24
 384               	.LVL13:
 385               	.LM48:
 386 02c8 0E94 0000 		call getFrontRightIR
 387 02cc 5B01      		movw r10,r22
 388 02ce 6C01      		movw r12,r24
 389               	.LVL14:
 390               	.LM49:
 391 02d0 C801      		movw r24,r16
 392 02d2 B701      		movw r22,r14
 393 02d4 0E94 0000 		call printNum
 394               	.LM50:
 395 02d8 80E0      		ldi r24,lo8(.LC0)
 396 02da 90E0      		ldi r25,hi8(.LC0)
 397 02dc 0E94 0000 		call print
 398               	.LM51:
 399 02e0 C601      		movw r24,r12
 400 02e2 B501      		movw r22,r10
 401 02e4 0E94 0000 		call printlnNum
 402 02e8 00C0      		rjmp .L16
 403               	.LBE5:
 404               	.LFE8:
 406               		.comm milliseconds,4,1
 431               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Justin\AppData\Local\Temp/ccvKSTyM.s:2      *ABS*:0000003f __SREG__
C:\Users\Justin\AppData\Local\Temp/ccvKSTyM.s:3      *ABS*:0000003e __SP_H__
C:\Users\Justin\AppData\Local\Temp/ccvKSTyM.s:4      *ABS*:0000003d __SP_L__
C:\Users\Justin\AppData\Local\Temp/ccvKSTyM.s:5      *ABS*:00000034 __CCP__
C:\Users\Justin\AppData\Local\Temp/ccvKSTyM.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\Justin\AppData\Local\Temp/ccvKSTyM.s:7      *ABS*:00000001 __zero_reg__
C:\Users\Justin\AppData\Local\Temp/ccvKSTyM.s:22     .text:00000000 main
                            *COM*:00000004 milliseconds

UNDEFINED SYMBOLS
setupADC
setupStepperMotor
startTimer
USART_init
mouse
enableDrive
turnOnTimers
isWallRight
isWallFront
isWallLeft
getFrontLeftIR
getFrontRightIR
__addsf3
__mulsf3
__subsf3
__ltsf2
setDirection
__fixsfsi
straight
getFrontAngle
rotateRightWithFix
rotateRight
rotateLeftWithFix
moveBackwardsAndCorrect
turnOnLeds
moveForwardAndStop
printNum
print
printlnNum
__do_copy_data
__do_clear_bss
